!(function (e) {
  function t(r) {
    if (n[r]) return n[r].exports;
    var i = (n[r] = { i: r, l: !1, exports: {} });
    return e[r].call(i.exports, i, i.exports, t), (i.l = !0), i.exports;
  }
  var n = {};
  (t.m = e),
    (t.c = n),
    (t.d = function (e, n, r) {
      t.o(e, n) ||
        Object.defineProperty(e, n, {
          configurable: !1,
          enumerable: !0,
          get: r,
        });
    }),
    (t.n = function (e) {
      var n =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return t.d(n, "a", n), n;
    }),
    (t.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (t.p = ""),
    t((t.s = 86));
})([
  function (e, t) {
    function n() {
      throw new Error("setTimeout has not been defined");
    }
    function r() {
      throw new Error("clearTimeout has not been defined");
    }
    function i(e) {
      if (l === setTimeout) return setTimeout(e, 0);
      if ((l === n || !l) && setTimeout)
        return (l = setTimeout), setTimeout(e, 0);
      try {
        return l(e, 0);
      } catch (t) {
        try {
          return l.call(null, e, 0);
        } catch (t) {
          return l.call(this, e, 0);
        }
      }
    }
    function o(e) {
      if (h === clearTimeout) return clearTimeout(e);
      if ((h === r || !h) && clearTimeout)
        return (h = clearTimeout), clearTimeout(e);
      try {
        return h(e);
      } catch (t) {
        try {
          return h.call(null, e);
        } catch (t) {
          return h.call(this, e);
        }
      }
    }
    function a() {
      m &&
        d &&
        ((m = !1), d.length ? (f = d.concat(f)) : (v = -1), f.length && s());
    }
    function s() {
      if (!m) {
        var e = i(a);
        m = !0;
        for (var t = f.length; t; ) {
          for (d = f, f = []; ++v < t; ) d && d[v].run();
          (v = -1), (t = f.length);
        }
        (d = null), (m = !1), o(e);
      }
    }
    function c(e, t) {
      (this.fun = e), (this.array = t);
    }
    function u() {}
    var l,
      h,
      p = (e.exports = {});
    !(function () {
      try {
        l = "function" == typeof setTimeout ? setTimeout : n;
      } catch (e) {
        l = n;
      }
      try {
        h = "function" == typeof clearTimeout ? clearTimeout : r;
      } catch (e) {
        h = r;
      }
    })();
    var d,
      f = [],
      m = !1,
      v = -1;
    (p.nextTick = function (e) {
      var t = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
      f.push(new c(e, t)), 1 !== f.length || m || i(s);
    }),
      (c.prototype.run = function () {
        this.fun.apply(null, this.array);
      }),
      (p.title = "browser"),
      (p.browser = !0),
      (p.env = {}),
      (p.argv = []),
      (p.version = ""),
      (p.versions = {}),
      (p.on = u),
      (p.addListener = u),
      (p.once = u),
      (p.off = u),
      (p.removeListener = u),
      (p.removeAllListeners = u),
      (p.emit = u),
      (p.prependListener = u),
      (p.prependOnceListener = u),
      (p.listeners = function (e) {
        return [];
      }),
      (p.binding = function (e) {
        throw new Error("process.binding is not supported");
      }),
      (p.cwd = function () {
        return "/";
      }),
      (p.chdir = function (e) {
        throw new Error("process.chdir is not supported");
      }),
      (p.umask = function () {
        return 0;
      });
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function n(e, t, n, i, o, a, s, c) {
        if ((r(t), !e)) {
          var u;
          if (void 0 === t)
            u = new Error(
              "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
            );
          else {
            var l = [n, i, o, a, s, c],
              h = 0;
            (u = new Error(
              t.replace(/%s/g, function () {
                return l[h++];
              })
            )),
              (u.name = "Invariant Violation");
          }
          throw ((u.framesToPop = 1), u);
        }
      }
      var r = function (e) {};
      "production" !== t.env.NODE_ENV &&
        (r = function (e) {
          if (void 0 === e)
            throw new Error("invariant requires an error message argument");
        }),
        (e.exports = n);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(10),
        i = r;
      if ("production" !== t.env.NODE_ENV) {
        var o = function (e) {
          for (
            var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          var i = 0,
            o =
              "Warning: " +
              e.replace(/%s/g, function () {
                return n[i++];
              });
          "undefined" != typeof console && console.error(o);
          try {
            throw new Error(o);
          } catch (e) {}
        };
        i = function (e, t) {
          if (void 0 === t)
            throw new Error(
              "`warning(condition, format, ...args)` requires a warning message argument"
            );
          if (0 !== t.indexOf("Failed Composite propType: ") && !e) {
            for (
              var n = arguments.length, r = Array(n > 2 ? n - 2 : 0), i = 2;
              i < n;
              i++
            )
              r[i - 2] = arguments[i];
            o.apply(void 0, [t].concat(r));
          }
        };
      }
      e.exports = i;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      for (
        var t = arguments.length - 1,
          n =
            "Minified React error #" +
            e +
            "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=" +
            e,
          r = 0;
        r < t;
        r++
      )
        n += "&args[]=" + encodeURIComponent(arguments[r + 1]);
      n +=
        " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      var i = new Error(n);
      throw ((i.name = "Invariant Violation"), (i.framesToPop = 1), i);
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        return (
          (1 === e.nodeType && e.getAttribute(m) === String(t)) ||
          (8 === e.nodeType && e.nodeValue === " react-text: " + t + " ") ||
          (8 === e.nodeType && e.nodeValue === " react-empty: " + t + " ")
        );
      }
      function i(e) {
        for (var t; (t = e._renderedComponent); ) e = t;
        return e;
      }
      function o(e, t) {
        var n = i(e);
        (n._hostNode = t), (t[g] = n);
      }
      function a(e) {
        var t = e._hostNode;
        t && (delete t[g], (e._hostNode = null));
      }
      function s(e, n) {
        if (!(e._flags & v.hasCachedChildNodes)) {
          var a = e._renderedChildren,
            s = n.firstChild;
          e: for (var c in a)
            if (a.hasOwnProperty(c)) {
              var u = a[c],
                l = i(u)._domID;
              if (0 !== l) {
                for (; null !== s; s = s.nextSibling)
                  if (r(s, l)) {
                    o(u, s);
                    continue e;
                  }
                "production" !== t.env.NODE_ENV
                  ? f(!1, "Unable to find element with ID %s.", l)
                  : h("32", l);
              }
            }
          e._flags |= v.hasCachedChildNodes;
        }
      }
      function c(e) {
        if (e[g]) return e[g];
        for (var t = []; !e[g]; ) {
          if ((t.push(e), !e.parentNode)) return null;
          e = e.parentNode;
        }
        for (var n, r; e && (r = e[g]); e = t.pop())
          (n = r), t.length && s(r, e);
        return n;
      }
      function u(e) {
        var t = c(e);
        return null != t && t._hostNode === e ? t : null;
      }
      function l(e) {
        if (
          (void 0 === e._hostNode &&
            ("production" !== t.env.NODE_ENV
              ? f(!1, "getNodeFromInstance: Invalid argument.")
              : h("33")),
          e._hostNode)
        )
          return e._hostNode;
        for (var n = []; !e._hostNode; )
          n.push(e),
            e._hostParent ||
              ("production" !== t.env.NODE_ENV
                ? f(
                    !1,
                    "React DOM tree root should always have a node reference."
                  )
                : h("34")),
            (e = e._hostParent);
        for (; n.length; e = n.pop()) s(e, e._hostNode);
        return e._hostNode;
      }
      var h = n(3),
        p = n(15),
        d = n(59),
        f = n(1),
        m = p.ID_ATTRIBUTE_NAME,
        v = d,
        g = "__reactInternalInstance$" + Math.random().toString(36).slice(2),
        y = {
          getClosestInstanceFromNode: c,
          getInstanceFromNode: u,
          getNodeFromInstance: l,
          precacheChildNodes: s,
          precacheNode: o,
          uncacheNode: a,
        };
      e.exports = y;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      if (null === e || void 0 === e)
        throw new TypeError(
          "Object.assign cannot be called with null or undefined"
        );
      return Object(e);
    } /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
    var i = Object.getOwnPropertySymbols,
      o = Object.prototype.hasOwnProperty,
      a = Object.prototype.propertyIsEnumerable;
    e.exports = (function () {
      try {
        if (!Object.assign) return !1;
        var e = new String("abc");
        if (((e[5] = "de"), "5" === Object.getOwnPropertyNames(e)[0]))
          return !1;
        for (var t = {}, n = 0; n < 10; n++)
          t["_" + String.fromCharCode(n)] = n;
        if (
          "0123456789" !==
          Object.getOwnPropertyNames(t)
            .map(function (e) {
              return t[e];
            })
            .join("")
        )
          return !1;
        var r = {};
        return (
          "abcdefghijklmnopqrst".split("").forEach(function (e) {
            r[e] = e;
          }),
          "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("")
        );
      } catch (e) {
        return !1;
      }
    })()
      ? Object.assign
      : function (e, t) {
          for (var n, s, c = r(e), u = 1; u < arguments.length; u++) {
            n = Object(arguments[u]);
            for (var l in n) o.call(n, l) && (c[l] = n[l]);
            if (i) {
              s = i(n);
              for (var h = 0; h < s.length; h++)
                a.call(n, s[h]) && (c[s[h]] = n[s[h]]);
            }
          }
          return c;
        };
  },
  function (e, t, n) {
    "use strict";
    var r = !(
        "undefined" == typeof window ||
        !window.document ||
        !window.document.createElement
      ),
      i = {
        canUseDOM: r,
        canUseWorkers: "undefined" != typeof Worker,
        canUseEventListeners:
          r && !(!window.addEventListener && !window.attachEvent),
        canUseViewport: r && !!window.screen,
        isInWorker: !r,
      };
    e.exports = i;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        var t = Function.prototype.toString,
          n = Object.prototype.hasOwnProperty,
          r = RegExp(
            "^" +
              t
                .call(n)
                .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                .replace(
                  /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                  "$1.*?"
                ) +
              "$"
          );
        try {
          var i = t.call(e);
          return r.test(i);
        } catch (e) {
          return !1;
        }
      }
      function i(e) {
        var t = u(e);
        if (t) {
          var n = t.childIDs;
          l(e), n.forEach(i);
        }
      }
      function o(e, t, n) {
        return (
          "\n    in " +
          (e || "Unknown") +
          (t
            ? " (at " +
              t.fileName.replace(/^.*[\\\/]/, "") +
              ":" +
              t.lineNumber +
              ")"
            : n
            ? " (created by " + n + ")"
            : "")
        );
      }
      function a(e) {
        return null == e
          ? "#empty"
          : "string" == typeof e || "number" == typeof e
          ? "#text"
          : "string" == typeof e.type
          ? e.type
          : e.type.displayName || e.type.name || "Unknown";
      }
      function s(e) {
        var n,
          r = N.getDisplayName(e),
          i = N.getElement(e),
          a = N.getOwnerID(e);
        return (
          a && (n = N.getDisplayName(a)),
          "production" !== t.env.NODE_ENV &&
            y(
              i,
              "ReactComponentTreeHook: Missing React element for debugID %s when building stack",
              e
            ),
          o(r, i && i._source, n)
        );
      }
      var c,
        u,
        l,
        h,
        p,
        d,
        f,
        m = n(19),
        v = n(9),
        g = n(13),
        y = n(12),
        _ =
          "function" == typeof Array.from &&
          "function" == typeof Map &&
          r(Map) &&
          null != Map.prototype &&
          "function" == typeof Map.prototype.keys &&
          r(Map.prototype.keys) &&
          "function" == typeof Set &&
          r(Set) &&
          null != Set.prototype &&
          "function" == typeof Set.prototype.keys &&
          r(Set.prototype.keys);
      if (_) {
        var b = new Map(),
          x = new Set();
        (c = function (e, t) {
          b.set(e, t);
        }),
          (u = function (e) {
            return b.get(e);
          }),
          (l = function (e) {
            b.delete(e);
          }),
          (h = function () {
            return Array.from(b.keys());
          }),
          (p = function (e) {
            x.add(e);
          }),
          (d = function (e) {
            x.delete(e);
          }),
          (f = function () {
            return Array.from(x.keys());
          });
      } else {
        var E = {},
          w = {},
          M = function (e) {
            return "." + e;
          },
          T = function (e) {
            return parseInt(e.substr(1), 10);
          };
        (c = function (e, t) {
          var n = M(e);
          E[n] = t;
        }),
          (u = function (e) {
            var t = M(e);
            return E[t];
          }),
          (l = function (e) {
            var t = M(e);
            delete E[t];
          }),
          (h = function () {
            return Object.keys(E).map(T);
          }),
          (p = function (e) {
            var t = M(e);
            w[t] = !0;
          }),
          (d = function (e) {
            var t = M(e);
            delete w[t];
          }),
          (f = function () {
            return Object.keys(w).map(T);
          });
      }
      var S = [],
        N = {
          onSetChildren: function (e, n) {
            var r = u(e);
            r ||
              ("production" !== t.env.NODE_ENV
                ? g(!1, "Item must have been set")
                : m("144")),
              (r.childIDs = n);
            for (var i = 0; i < n.length; i++) {
              var o = n[i],
                a = u(o);
              a ||
                ("production" !== t.env.NODE_ENV
                  ? g(
                      !1,
                      "Expected hook events to fire for the child before its parent includes it in onSetChildren()."
                    )
                  : m("140")),
                null == a.childIDs &&
                  "object" == typeof a.element &&
                  null != a.element &&
                  ("production" !== t.env.NODE_ENV
                    ? g(
                        !1,
                        "Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren()."
                      )
                    : m("141")),
                a.isMounted ||
                  ("production" !== t.env.NODE_ENV
                    ? g(
                        !1,
                        "Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren()."
                      )
                    : m("71")),
                null == a.parentID && (a.parentID = e),
                a.parentID !== e &&
                  ("production" !== t.env.NODE_ENV
                    ? g(
                        !1,
                        "Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).",
                        o,
                        a.parentID,
                        e
                      )
                    : m("142", o, a.parentID, e));
            }
          },
          onBeforeMountComponent: function (e, t, n) {
            c(e, {
              element: t,
              parentID: n,
              text: null,
              childIDs: [],
              isMounted: !1,
              updateCount: 0,
            });
          },
          onBeforeUpdateComponent: function (e, t) {
            var n = u(e);
            n && n.isMounted && (n.element = t);
          },
          onMountComponent: function (e) {
            var n = u(e);
            n ||
              ("production" !== t.env.NODE_ENV
                ? g(!1, "Item must have been set")
                : m("144")),
              (n.isMounted = !0),
              0 === n.parentID && p(e);
          },
          onUpdateComponent: function (e) {
            var t = u(e);
            t && t.isMounted && t.updateCount++;
          },
          onUnmountComponent: function (e) {
            var t = u(e);
            if (t) {
              t.isMounted = !1;
              0 === t.parentID && d(e);
            }
            S.push(e);
          },
          purgeUnmountedComponents: function () {
            if (!N._preventPurging) {
              for (var e = 0; e < S.length; e++) {
                i(S[e]);
              }
              S.length = 0;
            }
          },
          isMounted: function (e) {
            var t = u(e);
            return !!t && t.isMounted;
          },
          getCurrentStackAddendum: function (e) {
            var t = "";
            if (e) {
              var n = a(e),
                r = e._owner;
              t += o(n, e._source, r && r.getName());
            }
            var i = v.current,
              s = i && i._debugID;
            return (t += N.getStackAddendumByID(s));
          },
          getStackAddendumByID: function (e) {
            for (var t = ""; e; ) (t += s(e)), (e = N.getParentID(e));
            return t;
          },
          getChildIDs: function (e) {
            var t = u(e);
            return t ? t.childIDs : [];
          },
          getDisplayName: function (e) {
            var t = N.getElement(e);
            return t ? a(t) : null;
          },
          getElement: function (e) {
            var t = u(e);
            return t ? t.element : null;
          },
          getOwnerID: function (e) {
            var t = N.getElement(e);
            return t && t._owner ? t._owner._debugID : null;
          },
          getParentID: function (e) {
            var t = u(e);
            return t ? t.parentID : null;
          },
          getSource: function (e) {
            var t = u(e),
              n = t ? t.element : null;
            return null != n ? n._source : null;
          },
          getText: function (e) {
            var t = N.getElement(e);
            return "string" == typeof t
              ? t
              : "number" == typeof t
              ? "" + t
              : null;
          },
          getUpdateCount: function (e) {
            var t = u(e);
            return t ? t.updateCount : 0;
          },
          getRootIDs: f,
          getRegisteredIDs: h,
          pushNonStandardWarningStack: function (e, t) {
            if ("function" == typeof console.reactStack) {
              var n = [],
                r = v.current,
                i = r && r._debugID;
              try {
                for (
                  e &&
                  n.push({
                    name: i ? N.getDisplayName(i) : null,
                    fileName: t ? t.fileName : null,
                    lineNumber: t ? t.lineNumber : null,
                  });
                  i;

                ) {
                  var o = N.getElement(i),
                    a = N.getParentID(i),
                    s = N.getOwnerID(i),
                    c = s ? N.getDisplayName(s) : null,
                    u = o && o._source;
                  n.push({
                    name: c,
                    fileName: u ? u.fileName : null,
                    lineNumber: u ? u.lineNumber : null,
                  }),
                    (i = a);
                }
              } catch (e) {}
              console.reactStack(n);
            }
          },
          popNonStandardWarningStack: function () {
            "function" == typeof console.reactStackEnd &&
              console.reactStackEnd();
          },
        };
      e.exports = N;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = null;
      if ("production" !== t.env.NODE_ENV) {
        r = n(115);
      }
      e.exports = { debugTool: r };
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = { current: null };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return function () {
        return e;
      };
    }
    var i = function () {};
    (i.thatReturns = r),
      (i.thatReturnsFalse = r(!1)),
      (i.thatReturnsTrue = r(!0)),
      (i.thatReturnsNull = r(null)),
      (i.thatReturnsThis = function () {
        return this;
      }),
      (i.thatReturnsArgument = function (e) {
        return e;
      }),
      (e.exports = i);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r() {
        (C.ReactReconcileTransaction && E) ||
          ("production" !== t.env.NODE_ENV
            ? g(
                !1,
                "ReactUpdates: must inject a reconcile transaction class and batching strategy"
              )
            : l("123"));
      }
      function i() {
        this.reinitializeTransaction(),
          (this.dirtyComponentsLength = null),
          (this.callbackQueue = p.getPooled()),
          (this.reconcileTransaction = C.ReactReconcileTransaction.getPooled(
            !0
          ));
      }
      function o(e, t, n, i, o, a) {
        return r(), E.batchedUpdates(e, t, n, i, o, a);
      }
      function a(e, t) {
        return e._mountOrder - t._mountOrder;
      }
      function s(e) {
        var n = e.dirtyComponentsLength;
        n !== y.length &&
          ("production" !== t.env.NODE_ENV
            ? g(
                !1,
                "Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).",
                n,
                y.length
              )
            : l("124", n, y.length)),
          y.sort(a),
          _++;
        for (var r = 0; r < n; r++) {
          var i = y[r],
            o = i._pendingCallbacks;
          i._pendingCallbacks = null;
          var s;
          if (f.logTopLevelRenders) {
            var c = i;
            i._currentElement.type.isReactTopLevelWrapper &&
              (c = i._renderedComponent),
              (s = "React update: " + c.getName()),
              console.time(s);
          }
          if (
            (m.performUpdateIfNecessary(i, e.reconcileTransaction, _),
            s && console.timeEnd(s),
            o)
          )
            for (var u = 0; u < o.length; u++)
              e.callbackQueue.enqueue(o[u], i.getPublicInstance());
        }
      }
      function c(e) {
        if ((r(), !E.isBatchingUpdates)) return void E.batchedUpdates(c, e);
        y.push(e),
          null == e._updateBatchNumber && (e._updateBatchNumber = _ + 1);
      }
      function u(e, n) {
        E.isBatchingUpdates ||
          ("production" !== t.env.NODE_ENV
            ? g(
                !1,
                "ReactUpdates.asap: Can't enqueue an asap callback in a context whereupdates are not being batched."
              )
            : l("125")),
          b.enqueue(e, n),
          (x = !0);
      }
      var l = n(3),
        h = n(5),
        p = n(63),
        d = n(17),
        f = n(64),
        m = n(20),
        v = n(29),
        g = n(1),
        y = [],
        _ = 0,
        b = p.getPooled(),
        x = !1,
        E = null,
        w = {
          initialize: function () {
            this.dirtyComponentsLength = y.length;
          },
          close: function () {
            this.dirtyComponentsLength !== y.length
              ? (y.splice(0, this.dirtyComponentsLength), S())
              : (y.length = 0);
          },
        },
        M = {
          initialize: function () {
            this.callbackQueue.reset();
          },
          close: function () {
            this.callbackQueue.notifyAll();
          },
        },
        T = [w, M];
      h(i.prototype, v, {
        getTransactionWrappers: function () {
          return T;
        },
        destructor: function () {
          (this.dirtyComponentsLength = null),
            p.release(this.callbackQueue),
            (this.callbackQueue = null),
            C.ReactReconcileTransaction.release(this.reconcileTransaction),
            (this.reconcileTransaction = null);
        },
        perform: function (e, t, n) {
          return v.perform.call(
            this,
            this.reconcileTransaction.perform,
            this.reconcileTransaction,
            e,
            t,
            n
          );
        },
      }),
        d.addPoolingTo(i);
      var S = function () {
          for (; y.length || x; ) {
            if (y.length) {
              var e = i.getPooled();
              e.perform(s, null, e), i.release(e);
            }
            if (x) {
              x = !1;
              var t = b;
              (b = p.getPooled()), t.notifyAll(), p.release(t);
            }
          }
        },
        N = {
          injectReconcileTransaction: function (e) {
            e ||
              ("production" !== t.env.NODE_ENV
                ? g(
                    !1,
                    "ReactUpdates: must provide a reconcile transaction class"
                  )
                : l("126")),
              (C.ReactReconcileTransaction = e);
          },
          injectBatchingStrategy: function (e) {
            e ||
              ("production" !== t.env.NODE_ENV
                ? g(!1, "ReactUpdates: must provide a batching strategy")
                : l("127")),
              "function" != typeof e.batchedUpdates &&
                ("production" !== t.env.NODE_ENV
                  ? g(
                      !1,
                      "ReactUpdates: must provide a batchedUpdates() function"
                    )
                  : l("128")),
              "boolean" != typeof e.isBatchingUpdates &&
                ("production" !== t.env.NODE_ENV
                  ? g(
                      !1,
                      "ReactUpdates: must provide an isBatchingUpdates boolean attribute"
                    )
                  : l("129")),
              (E = e);
          },
        },
        C = {
          ReactReconcileTransaction: null,
          batchedUpdates: o,
          enqueueUpdate: c,
          flushBatchedUpdates: S,
          injection: N,
          asap: u,
        };
      e.exports = C;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(34),
        i = r;
      if ("production" !== t.env.NODE_ENV) {
        var o = function (e) {
          for (
            var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          var i = 0,
            o =
              "Warning: " +
              e.replace(/%s/g, function () {
                return n[i++];
              });
          "undefined" != typeof console && console.error(o);
          try {
            throw new Error(o);
          } catch (e) {}
        };
        i = function (e, t) {
          if (void 0 === t)
            throw new Error(
              "`warning(condition, format, ...args)` requires a warning message argument"
            );
          if (0 !== t.indexOf("Failed Composite propType: ") && !e) {
            for (
              var n = arguments.length, r = Array(n > 2 ? n - 2 : 0), i = 2;
              i < n;
              i++
            )
              r[i - 2] = arguments[i];
            o.apply(void 0, [t].concat(r));
          }
        };
      }
      e.exports = i;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function n(e, t, n, i, o, a, s, c) {
        if ((r(t), !e)) {
          var u;
          if (void 0 === t)
            u = new Error(
              "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
            );
          else {
            var l = [n, i, o, a, s, c],
              h = 0;
            (u = new Error(
              t.replace(/%s/g, function () {
                return l[h++];
              })
            )),
              (u.name = "Invariant Violation");
          }
          throw ((u.framesToPop = 1), u);
        }
      }
      var r = function (e) {};
      "production" !== t.env.NODE_ENV &&
        (r = function (e) {
          if (void 0 === e)
            throw new Error("invariant requires an error message argument");
        }),
        (e.exports = n);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n, r, i) {
        "production" !== t.env.NODE_ENV &&
          (delete this.nativeEvent,
          delete this.preventDefault,
          delete this.stopPropagation),
          (this.dispatchConfig = e),
          (this._targetInst = n),
          (this.nativeEvent = r);
        var o = this.constructor.Interface;
        for (var a in o)
          if (o.hasOwnProperty(a)) {
            "production" !== t.env.NODE_ENV && delete this[a];
            var c = o[a];
            c
              ? (this[a] = c(r))
              : "target" === a
              ? (this.target = i)
              : (this[a] = r[a]);
          }
        var u =
          null != r.defaultPrevented
            ? r.defaultPrevented
            : !1 === r.returnValue;
        return (
          (this.isDefaultPrevented = u
            ? s.thatReturnsTrue
            : s.thatReturnsFalse),
          (this.isPropagationStopped = s.thatReturnsFalse),
          this
        );
      }
      function i(e, n) {
        function r(e) {
          return (
            o(
              a ? "setting the method" : "setting the property",
              "This is effectively a no-op"
            ),
            e
          );
        }
        function i() {
          return (
            o(
              a ? "accessing the method" : "accessing the property",
              a ? "This is a no-op function" : "This is set to null"
            ),
            n
          );
        }
        function o(n, r) {
          "production" !== t.env.NODE_ENV &&
            c(
              !1,
              "This synthetic event is reused for performance reasons. If you're seeing this, you're %s `%s` on a released/nullified synthetic event. %s. If you must keep the original synthetic event around, use event.persist(). See https://fb.me/react-event-pooling for more information.",
              n,
              e,
              r
            );
        }
        var a = "function" == typeof n;
        return { configurable: !0, set: r, get: i };
      }
      var o = n(5),
        a = n(17),
        s = n(10),
        c = n(2),
        u = !1,
        l = "function" == typeof Proxy,
        h = [
          "dispatchConfig",
          "_targetInst",
          "nativeEvent",
          "isDefaultPrevented",
          "isPropagationStopped",
          "_dispatchListeners",
          "_dispatchInstances",
        ],
        p = {
          type: null,
          target: null,
          currentTarget: s.thatReturnsNull,
          eventPhase: null,
          bubbles: null,
          cancelable: null,
          timeStamp: function (e) {
            return e.timeStamp || Date.now();
          },
          defaultPrevented: null,
          isTrusted: null,
        };
      o(r.prototype, {
        preventDefault: function () {
          this.defaultPrevented = !0;
          var e = this.nativeEvent;
          e &&
            (e.preventDefault
              ? e.preventDefault()
              : "unknown" != typeof e.returnValue && (e.returnValue = !1),
            (this.isDefaultPrevented = s.thatReturnsTrue));
        },
        stopPropagation: function () {
          var e = this.nativeEvent;
          e &&
            (e.stopPropagation
              ? e.stopPropagation()
              : "unknown" != typeof e.cancelBubble && (e.cancelBubble = !0),
            (this.isPropagationStopped = s.thatReturnsTrue));
        },
        persist: function () {
          this.isPersistent = s.thatReturnsTrue;
        },
        isPersistent: s.thatReturnsFalse,
        destructor: function () {
          var e = this.constructor.Interface;
          for (var n in e)
            "production" !== t.env.NODE_ENV
              ? Object.defineProperty(this, n, i(n, e[n]))
              : (this[n] = null);
          for (var r = 0; r < h.length; r++) this[h[r]] = null;
          "production" !== t.env.NODE_ENV &&
            (Object.defineProperty(this, "nativeEvent", i("nativeEvent", null)),
            Object.defineProperty(
              this,
              "preventDefault",
              i("preventDefault", s)
            ),
            Object.defineProperty(
              this,
              "stopPropagation",
              i("stopPropagation", s)
            ));
        },
      }),
        (r.Interface = p),
        "production" !== t.env.NODE_ENV &&
          l &&
          (r = new Proxy(r, {
            construct: function (e, t) {
              return this.apply(e, Object.create(e.prototype), t);
            },
            apply: function (e, n, r) {
              return new Proxy(e.apply(n, r), {
                set: function (e, n, r) {
                  return (
                    "isPersistent" === n ||
                      e.constructor.Interface.hasOwnProperty(n) ||
                      -1 !== h.indexOf(n) ||
                      ("production" !== t.env.NODE_ENV &&
                        c(
                          u || e.isPersistent(),
                          "This synthetic event is reused for performance reasons. If you're seeing this, you're adding a new property in the synthetic event object. The property is never released. See https://fb.me/react-event-pooling for more information."
                        ),
                      (u = !0)),
                    (e[n] = r),
                    !0
                  );
                },
              });
            },
          })),
        (r.augmentClass = function (e, t) {
          var n = this,
            r = function () {};
          r.prototype = n.prototype;
          var i = new r();
          o(i, e.prototype),
            (e.prototype = i),
            (e.prototype.constructor = e),
            (e.Interface = o({}, n.Interface, t)),
            (e.augmentClass = n.augmentClass),
            a.addPoolingTo(e, a.fourArgumentPooler);
        }),
        a.addPoolingTo(r, a.fourArgumentPooler),
        (e.exports = r);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        return (e & t) === t;
      }
      var i = n(3),
        o = n(1),
        a = {
          MUST_USE_PROPERTY: 1,
          HAS_BOOLEAN_VALUE: 4,
          HAS_NUMERIC_VALUE: 8,
          HAS_POSITIVE_NUMERIC_VALUE: 24,
          HAS_OVERLOADED_BOOLEAN_VALUE: 32,
          injectDOMPropertyConfig: function (e) {
            var n = a,
              s = e.Properties || {},
              u = e.DOMAttributeNamespaces || {},
              l = e.DOMAttributeNames || {},
              h = e.DOMPropertyNames || {},
              p = e.DOMMutationMethods || {};
            e.isCustomAttribute &&
              c._isCustomAttributeFunctions.push(e.isCustomAttribute);
            for (var d in s) {
              c.properties.hasOwnProperty(d) &&
                ("production" !== t.env.NODE_ENV
                  ? o(
                      !1,
                      "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.",
                      d
                    )
                  : i("48", d));
              var f = d.toLowerCase(),
                m = s[d],
                v = {
                  attributeName: f,
                  attributeNamespace: null,
                  propertyName: d,
                  mutationMethod: null,
                  mustUseProperty: r(m, n.MUST_USE_PROPERTY),
                  hasBooleanValue: r(m, n.HAS_BOOLEAN_VALUE),
                  hasNumericValue: r(m, n.HAS_NUMERIC_VALUE),
                  hasPositiveNumericValue: r(m, n.HAS_POSITIVE_NUMERIC_VALUE),
                  hasOverloadedBooleanValue: r(
                    m,
                    n.HAS_OVERLOADED_BOOLEAN_VALUE
                  ),
                };
              if (
                (v.hasBooleanValue +
                  v.hasNumericValue +
                  v.hasOverloadedBooleanValue <=
                  1 ||
                  ("production" !== t.env.NODE_ENV
                    ? o(
                        !1,
                        "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s",
                        d
                      )
                    : i("50", d)),
                "production" !== t.env.NODE_ENV &&
                  (c.getPossibleStandardName[f] = d),
                l.hasOwnProperty(d))
              ) {
                var g = l[d];
                (v.attributeName = g),
                  "production" !== t.env.NODE_ENV &&
                    (c.getPossibleStandardName[g] = d);
              }
              u.hasOwnProperty(d) && (v.attributeNamespace = u[d]),
                h.hasOwnProperty(d) && (v.propertyName = h[d]),
                p.hasOwnProperty(d) && (v.mutationMethod = p[d]),
                (c.properties[d] = v);
            }
          },
        },
        s =
          ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",
        c = {
          ID_ATTRIBUTE_NAME: "data-reactid",
          ROOT_ATTRIBUTE_NAME: "data-reactroot",
          ATTRIBUTE_NAME_START_CHAR: s,
          ATTRIBUTE_NAME_CHAR:
            s + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",
          properties: {},
          getPossibleStandardName:
            "production" !== t.env.NODE_ENV ? { autofocus: "autoFocus" } : null,
          _isCustomAttributeFunctions: [],
          isCustomAttribute: function (e) {
            for (var t = 0; t < c._isCustomAttributeFunctions.length; t++) {
              if ((0, c._isCustomAttributeFunctions[t])(e)) return !0;
            }
            return !1;
          },
          injection: a,
        };
      e.exports = c;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        if ("production" !== t.env.NODE_ENV && d.call(e, "ref")) {
          var n = Object.getOwnPropertyDescriptor(e, "ref").get;
          if (n && n.isReactWarning) return !1;
        }
        return void 0 !== e.ref;
      }
      function i(e) {
        if ("production" !== t.env.NODE_ENV && d.call(e, "key")) {
          var n = Object.getOwnPropertyDescriptor(e, "key").get;
          if (n && n.isReactWarning) return !1;
        }
        return void 0 !== e.key;
      }
      function o(e, n) {
        var r = function () {
          s ||
            ((s = !0),
            "production" !== t.env.NODE_ENV &&
              h(
                !1,
                "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)",
                n
              ));
        };
        (r.isReactWarning = !0),
          Object.defineProperty(e, "key", { get: r, configurable: !0 });
      }
      function a(e, n) {
        var r = function () {
          c ||
            ((c = !0),
            "production" !== t.env.NODE_ENV &&
              h(
                !1,
                "%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)",
                n
              ));
        };
        (r.isReactWarning = !0),
          Object.defineProperty(e, "ref", { get: r, configurable: !0 });
      }
      var s,
        c,
        u = n(26),
        l = n(9),
        h = n(12),
        p = n(27),
        d = Object.prototype.hasOwnProperty,
        f = n(55),
        m = { key: !0, ref: !0, __self: !0, __source: !0 },
        v = function (e, n, r, i, o, a, s) {
          var c = { $$typeof: f, type: e, key: n, ref: r, props: s, _owner: a };
          return (
            "production" !== t.env.NODE_ENV &&
              ((c._store = {}),
              p
                ? (Object.defineProperty(c._store, "validated", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0,
                    value: !1,
                  }),
                  Object.defineProperty(c, "_self", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !1,
                    value: i,
                  }),
                  Object.defineProperty(c, "_source", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !1,
                    value: o,
                  }))
                : ((c._store.validated = !1), (c._self = i), (c._source = o)),
              Object.freeze && (Object.freeze(c.props), Object.freeze(c))),
            c
          );
        };
      (v.createElement = function (e, n, s) {
        var c,
          u = {},
          h = null,
          p = null,
          g = null,
          y = null;
        if (null != n) {
          r(n) && (p = n.ref),
            i(n) && (h = "" + n.key),
            (g = void 0 === n.__self ? null : n.__self),
            (y = void 0 === n.__source ? null : n.__source);
          for (c in n) d.call(n, c) && !m.hasOwnProperty(c) && (u[c] = n[c]);
        }
        var _ = arguments.length - 2;
        if (1 === _) u.children = s;
        else if (_ > 1) {
          for (var b = Array(_), x = 0; x < _; x++) b[x] = arguments[x + 2];
          "production" !== t.env.NODE_ENV && Object.freeze && Object.freeze(b),
            (u.children = b);
        }
        if (e && e.defaultProps) {
          var E = e.defaultProps;
          for (c in E) void 0 === u[c] && (u[c] = E[c]);
        }
        if (
          "production" !== t.env.NODE_ENV &&
          (h || p) &&
          (void 0 === u.$$typeof || u.$$typeof !== f)
        ) {
          var w =
            "function" == typeof e ? e.displayName || e.name || "Unknown" : e;
          h && o(u, w), p && a(u, w);
        }
        return v(e, h, p, g, y, l.current, u);
      }),
        (v.createFactory = function (e) {
          var t = v.createElement.bind(null, e);
          return (t.type = e), t;
        }),
        (v.cloneAndReplaceKey = function (e, t) {
          return v(e.type, t, e.ref, e._self, e._source, e._owner, e.props);
        }),
        (v.cloneElement = function (e, t, n) {
          var o,
            a = u({}, e.props),
            s = e.key,
            c = e.ref,
            h = e._self,
            p = e._source,
            f = e._owner;
          if (null != t) {
            r(t) && ((c = t.ref), (f = l.current)), i(t) && (s = "" + t.key);
            var g;
            e.type && e.type.defaultProps && (g = e.type.defaultProps);
            for (o in t)
              d.call(t, o) &&
                !m.hasOwnProperty(o) &&
                (void 0 === t[o] && void 0 !== g
                  ? (a[o] = g[o])
                  : (a[o] = t[o]));
          }
          var y = arguments.length - 2;
          if (1 === y) a.children = n;
          else if (y > 1) {
            for (var _ = Array(y), b = 0; b < y; b++) _[b] = arguments[b + 2];
            a.children = _;
          }
          return v(e.type, s, c, h, p, f, a);
        }),
        (v.isValidElement = function (e) {
          return "object" == typeof e && null !== e && e.$$typeof === f;
        }),
        (e.exports = v);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(3),
        i = n(1),
        o = function (e) {
          var t = this;
          if (t.instancePool.length) {
            var n = t.instancePool.pop();
            return t.call(n, e), n;
          }
          return new t(e);
        },
        a = function (e, t) {
          var n = this;
          if (n.instancePool.length) {
            var r = n.instancePool.pop();
            return n.call(r, e, t), r;
          }
          return new n(e, t);
        },
        s = function (e, t, n) {
          var r = this;
          if (r.instancePool.length) {
            var i = r.instancePool.pop();
            return r.call(i, e, t, n), i;
          }
          return new r(e, t, n);
        },
        c = function (e, t, n, r) {
          var i = this;
          if (i.instancePool.length) {
            var o = i.instancePool.pop();
            return i.call(o, e, t, n, r), o;
          }
          return new i(e, t, n, r);
        },
        u = function (e) {
          var n = this;
          e instanceof n ||
            ("production" !== t.env.NODE_ENV
              ? i(
                  !1,
                  "Trying to release an instance into a pool of a different type."
                )
              : r("25")),
            e.destructor(),
            n.instancePool.length < n.poolSize && n.instancePool.push(e);
        },
        l = o,
        h = function (e, t) {
          var n = e;
          return (
            (n.instancePool = []),
            (n.getPooled = t || l),
            n.poolSize || (n.poolSize = 10),
            (n.release = u),
            n
          );
        },
        p = {
          addPoolingTo: h,
          oneArgumentPooler: o,
          twoArgumentPooler: a,
          threeArgumentPooler: s,
          fourArgumentPooler: c,
        };
      e.exports = p;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(26),
        i = n(52),
        o = n(88),
        a = n(92),
        s = n(16),
        c = n(96),
        u = n(100),
        l = n(101),
        h = n(103),
        p = s.createElement,
        d = s.createFactory,
        f = s.cloneElement;
      if ("production" !== t.env.NODE_ENV) {
        var m = n(35),
          v = n(27),
          g = n(57),
          y = !1;
        (p = g.createElement), (d = g.createFactory), (f = g.cloneElement);
      }
      var _ = r,
        b = function (e) {
          return e;
        };
      if ("production" !== t.env.NODE_ENV) {
        var x = !1,
          E = !1;
        (_ = function () {
          return (
            m(
              x,
              "React.__spread is deprecated and should not be used. Use Object.assign directly or another helper function with similar semantics. You may be seeing this warning due to your compiler. See https://fb.me/react-spread-deprecation for more details."
            ),
            (x = !0),
            r.apply(null, arguments)
          );
        }),
          (b = function (e) {
            return (
              m(
                E,
                "React.createMixin is deprecated and should not be used. In React v16.0, it will be removed. You can use this mixin directly instead. See https://fb.me/createmixin-was-never-implemented for more info."
              ),
              (E = !0),
              e
            );
          });
      }
      var w = {
        Children: {
          map: o.map,
          forEach: o.forEach,
          count: o.count,
          toArray: o.toArray,
          only: h,
        },
        Component: i.Component,
        PureComponent: i.PureComponent,
        createElement: p,
        cloneElement: f,
        isValidElement: s.isValidElement,
        PropTypes: c,
        createClass: l,
        createFactory: d,
        createMixin: b,
        DOM: a,
        version: u,
        __spread: _,
      };
      if ("production" !== t.env.NODE_ENV) {
        var M = !1;
        v &&
          (Object.defineProperty(w, "PropTypes", {
            get: function () {
              return (
                m(
                  y,
                  "Accessing PropTypes via the main React package is deprecated, and will be removed in  React v16.0. Use the latest available v15.* prop-types package from npm instead. For info on usage, compatibility, migration and more, see https://fb.me/prop-types-docs"
                ),
                (y = !0),
                c
              );
            },
          }),
          Object.defineProperty(w, "createClass", {
            get: function () {
              return (
                m(
                  M,
                  "Accessing createClass via the main React package is deprecated, and will be removed in React v16.0. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class v15.* is available on npm as a temporary, drop-in replacement. For more info see https://fb.me/react-create-class"
                ),
                (M = !0),
                l
              );
            },
          })),
          (w.DOM = {});
        var T = !1;
        Object.keys(a).forEach(function (e) {
          w.DOM[e] = function () {
            return (
              T ||
                (m(
                  !1,
                  "Accessing factories like React.DOM.%s has been deprecated and will be removed in v16.0+. Use the react-dom-factories package instead.  Version 1.0 provides a drop-in replacement. For more info, see https://fb.me/react-dom-factories",
                  e
                ),
                (T = !0)),
              a[e].apply(a, arguments)
            );
          };
        });
      }
      e.exports = w;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      for (
        var t = arguments.length - 1,
          n =
            "Minified React error #" +
            e +
            "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=" +
            e,
          r = 0;
        r < t;
        r++
      )
        n += "&args[]=" + encodeURIComponent(arguments[r + 1]);
      n +=
        " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      var i = new Error(n);
      throw ((i.name = "Invariant Violation"), (i.framesToPop = 1), i);
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r() {
        i.attachRefs(this, this._currentElement);
      }
      var i = n(113),
        o = n(8),
        a = n(2),
        s = {
          mountComponent: function (e, n, i, a, s, c) {
            "production" !== t.env.NODE_ENV &&
              0 !== e._debugID &&
              o.debugTool.onBeforeMountComponent(
                e._debugID,
                e._currentElement,
                c
              );
            var u = e.mountComponent(n, i, a, s, c);
            return (
              e._currentElement &&
                null != e._currentElement.ref &&
                n.getReactMountReady().enqueue(r, e),
              "production" !== t.env.NODE_ENV &&
                0 !== e._debugID &&
                o.debugTool.onMountComponent(e._debugID),
              u
            );
          },
          getHostNode: function (e) {
            return e.getHostNode();
          },
          unmountComponent: function (e, n) {
            "production" !== t.env.NODE_ENV &&
              0 !== e._debugID &&
              o.debugTool.onBeforeUnmountComponent(e._debugID),
              i.detachRefs(e, e._currentElement),
              e.unmountComponent(n),
              "production" !== t.env.NODE_ENV &&
                0 !== e._debugID &&
                o.debugTool.onUnmountComponent(e._debugID);
          },
          receiveComponent: function (e, n, a, s) {
            var c = e._currentElement;
            if (n !== c || s !== e._context) {
              "production" !== t.env.NODE_ENV &&
                0 !== e._debugID &&
                o.debugTool.onBeforeUpdateComponent(e._debugID, n);
              var u = i.shouldUpdateRefs(c, n);
              u && i.detachRefs(e, c),
                e.receiveComponent(n, a, s),
                u &&
                  e._currentElement &&
                  null != e._currentElement.ref &&
                  a.getReactMountReady().enqueue(r, e),
                "production" !== t.env.NODE_ENV &&
                  0 !== e._debugID &&
                  o.debugTool.onUpdateComponent(e._debugID);
            }
          },
          performUpdateIfNecessary: function (e, n, r) {
            if (e._updateBatchNumber !== r)
              return void (
                "production" !== t.env.NODE_ENV &&
                a(
                  null == e._updateBatchNumber ||
                    e._updateBatchNumber === r + 1,
                  "performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)",
                  r,
                  e._updateBatchNumber
                )
              );
            "production" !== t.env.NODE_ENV &&
              0 !== e._debugID &&
              o.debugTool.onBeforeUpdateComponent(
                e._debugID,
                e._currentElement
              ),
              e.performUpdateIfNecessary(n),
              "production" !== t.env.NODE_ENV &&
                0 !== e._debugID &&
                o.debugTool.onUpdateComponent(e._debugID);
          },
        };
      e.exports = s;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      if (f) {
        var t = e.node,
          n = e.children;
        if (n.length) for (var r = 0; r < n.length; r++) m(t, n[r], null);
        else null != e.html ? h(t, e.html) : null != e.text && d(t, e.text);
      }
    }
    function i(e, t) {
      e.parentNode.replaceChild(t.node, e), r(t);
    }
    function o(e, t) {
      f ? e.children.push(t) : e.node.appendChild(t.node);
    }
    function a(e, t) {
      f ? (e.html = t) : h(e.node, t);
    }
    function s(e, t) {
      f ? (e.text = t) : d(e.node, t);
    }
    function c() {
      return this.node.nodeName;
    }
    function u(e) {
      return { node: e, children: [], html: null, text: null, toString: c };
    }
    var l = n(42),
      h = n(31),
      p = n(43),
      d = n(68),
      f =
        ("undefined" != typeof document &&
          "number" == typeof document.documentMode) ||
        ("undefined" != typeof navigator &&
          "string" == typeof navigator.userAgent &&
          /\bEdge\/\d/.test(navigator.userAgent)),
      m = p(function (e, t, n) {
        11 === t.node.nodeType ||
        (1 === t.node.nodeType &&
          "object" === t.node.nodeName.toLowerCase() &&
          (null == t.node.namespaceURI || t.node.namespaceURI === l.html))
          ? (r(t), e.insertBefore(t.node, n))
          : (e.insertBefore(t.node, n), r(t));
      });
    (u.insertTreeBefore = m),
      (u.replaceChildWithTree = i),
      (u.queueChild = o),
      (u.queueHTML = a),
      (u.queueText = s),
      (e.exports = u);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t, n) {
        var r = t.dispatchConfig.phasedRegistrationNames[n];
        return y(e, r);
      }
      function i(e, n, i) {
        "production" !== t.env.NODE_ENV &&
          "production" !== t.env.NODE_ENV &&
          g(e, "Dispatching inst must not be null");
        var o = r(e, i, n);
        o &&
          ((i._dispatchListeners = m(i._dispatchListeners, o)),
          (i._dispatchInstances = m(i._dispatchInstances, e)));
      }
      function o(e) {
        e &&
          e.dispatchConfig.phasedRegistrationNames &&
          f.traverseTwoPhase(e._targetInst, i, e);
      }
      function a(e) {
        if (e && e.dispatchConfig.phasedRegistrationNames) {
          var t = e._targetInst,
            n = t ? f.getParentInstance(t) : null;
          f.traverseTwoPhase(n, i, e);
        }
      }
      function s(e, t, n) {
        if (n && n.dispatchConfig.registrationName) {
          var r = n.dispatchConfig.registrationName,
            i = y(e, r);
          i &&
            ((n._dispatchListeners = m(n._dispatchListeners, i)),
            (n._dispatchInstances = m(n._dispatchInstances, e)));
        }
      }
      function c(e) {
        e && e.dispatchConfig.registrationName && s(e._targetInst, null, e);
      }
      function u(e) {
        v(e, o);
      }
      function l(e) {
        v(e, a);
      }
      function h(e, t, n, r) {
        f.traverseEnterLeave(n, r, s, e, t);
      }
      function p(e) {
        v(e, c);
      }
      var d = n(23),
        f = n(36),
        m = n(60),
        v = n(61),
        g = n(2),
        y = d.getListener,
        _ = {
          accumulateTwoPhaseDispatches: u,
          accumulateTwoPhaseDispatchesSkipTarget: l,
          accumulateDirectDispatches: p,
          accumulateEnterLeaveDispatches: h,
        };
      e.exports = _;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return (
          "button" === e || "input" === e || "select" === e || "textarea" === e
        );
      }
      function i(e, t, n) {
        switch (e) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
            return !(!n.disabled || !r(t));
          default:
            return !1;
        }
      }
      var o = n(3),
        a = n(28),
        s = n(36),
        c = n(37),
        u = n(60),
        l = n(61),
        h = n(1),
        p = {},
        d = null,
        f = function (e, t) {
          e &&
            (s.executeDispatchesInOrder(e, t),
            e.isPersistent() || e.constructor.release(e));
        },
        m = function (e) {
          return f(e, !0);
        },
        v = function (e) {
          return f(e, !1);
        },
        g = function (e) {
          return "." + e._rootNodeID;
        },
        y = {
          injection: {
            injectEventPluginOrder: a.injectEventPluginOrder,
            injectEventPluginsByName: a.injectEventPluginsByName,
          },
          putListener: function (e, n, r) {
            "function" != typeof r &&
              ("production" !== t.env.NODE_ENV
                ? h(
                    !1,
                    "Expected %s listener to be a function, instead got type %s",
                    n,
                    typeof r
                  )
                : o("94", n, typeof r));
            var i = g(e);
            (p[n] || (p[n] = {}))[i] = r;
            var s = a.registrationNameModules[n];
            s && s.didPutListener && s.didPutListener(e, n, r);
          },
          getListener: function (e, t) {
            var n = p[t];
            if (i(t, e._currentElement.type, e._currentElement.props))
              return null;
            var r = g(e);
            return n && n[r];
          },
          deleteListener: function (e, t) {
            var n = a.registrationNameModules[t];
            n && n.willDeleteListener && n.willDeleteListener(e, t);
            var r = p[t];
            if (r) {
              delete r[g(e)];
            }
          },
          deleteAllListeners: function (e) {
            var t = g(e);
            for (var n in p)
              if (p.hasOwnProperty(n) && p[n][t]) {
                var r = a.registrationNameModules[n];
                r && r.willDeleteListener && r.willDeleteListener(e, n),
                  delete p[n][t];
              }
          },
          extractEvents: function (e, t, n, r) {
            for (var i, o = a.plugins, s = 0; s < o.length; s++) {
              var c = o[s];
              if (c) {
                var l = c.extractEvents(e, t, n, r);
                l && (i = u(i, l));
              }
            }
            return i;
          },
          enqueueEvents: function (e) {
            e && (d = u(d, e));
          },
          processEventQueue: function (e) {
            var n = d;
            (d = null),
              e ? l(n, m) : l(n, v),
              d &&
                ("production" !== t.env.NODE_ENV
                  ? h(
                      !1,
                      "processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."
                    )
                  : o("95")),
              c.rethrowCaughtError();
          },
          __purge: function () {
            p = {};
          },
          __getListenerBank: function () {
            return p;
          },
        };
      e.exports = y;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(14),
      o = n(38),
      a = {
        view: function (e) {
          if (e.view) return e.view;
          var t = o(e);
          if (t.window === t) return t;
          var n = t.ownerDocument;
          return n ? n.defaultView || n.parentWindow : window;
        },
        detail: function (e) {
          return e.detail || 0;
        },
      };
    i.augmentClass(r, a), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    var r = {
      remove: function (e) {
        e._reactInternalInstance = void 0;
      },
      get: function (e) {
        return e._reactInternalInstance;
      },
      has: function (e) {
        return void 0 !== e._reactInternalInstance;
      },
      set: function (e, t) {
        e._reactInternalInstance = t;
      },
    };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      if (null === e || void 0 === e)
        throw new TypeError(
          "Object.assign cannot be called with null or undefined"
        );
      return Object(e);
    } /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
    var i = Object.getOwnPropertySymbols,
      o = Object.prototype.hasOwnProperty,
      a = Object.prototype.propertyIsEnumerable;
    e.exports = (function () {
      try {
        if (!Object.assign) return !1;
        var e = new String("abc");
        if (((e[5] = "de"), "5" === Object.getOwnPropertyNames(e)[0]))
          return !1;
        for (var t = {}, n = 0; n < 10; n++)
          t["_" + String.fromCharCode(n)] = n;
        if (
          "0123456789" !==
          Object.getOwnPropertyNames(t)
            .map(function (e) {
              return t[e];
            })
            .join("")
        )
          return !1;
        var r = {};
        return (
          "abcdefghijklmnopqrst".split("").forEach(function (e) {
            r[e] = e;
          }),
          "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("")
        );
      } catch (e) {
        return !1;
      }
    })()
      ? Object.assign
      : function (e, t) {
          for (var n, s, c = r(e), u = 1; u < arguments.length; u++) {
            n = Object(arguments[u]);
            for (var l in n) o.call(n, l) && (c[l] = n[l]);
            if (i) {
              s = i(n);
              for (var h = 0; h < s.length; h++)
                a.call(n, s[h]) && (c[s[h]] = n[s[h]]);
            }
          }
          return c;
        };
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var n = !1;
      if ("production" !== t.env.NODE_ENV)
        try {
          Object.defineProperty({}, "x", { get: function () {} }), (n = !0);
        } catch (e) {}
      e.exports = n;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r() {
        if (c)
          for (var e in u) {
            var n = u[e],
              r = c.indexOf(e);
            if (
              (r > -1 ||
                ("production" !== t.env.NODE_ENV
                  ? s(
                      !1,
                      "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.",
                      e
                    )
                  : a("96", e)),
              !l.plugins[r])
            ) {
              n.extractEvents ||
                ("production" !== t.env.NODE_ENV
                  ? s(
                      !1,
                      "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.",
                      e
                    )
                  : a("97", e)),
                (l.plugins[r] = n);
              var o = n.eventTypes;
              for (var h in o)
                i(o[h], n, h) ||
                  ("production" !== t.env.NODE_ENV
                    ? s(
                        !1,
                        "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.",
                        h,
                        e
                      )
                    : a("98", h, e));
            }
          }
      }
      function i(e, n, r) {
        l.eventNameDispatchConfigs.hasOwnProperty(r) &&
          ("production" !== t.env.NODE_ENV
            ? s(
                !1,
                "EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.",
                r
              )
            : a("99", r)),
          (l.eventNameDispatchConfigs[r] = e);
        var i = e.phasedRegistrationNames;
        if (i) {
          for (var c in i)
            if (i.hasOwnProperty(c)) {
              var u = i[c];
              o(u, n, r);
            }
          return !0;
        }
        return !!e.registrationName && (o(e.registrationName, n, r), !0);
      }
      function o(e, n, r) {
        if (
          (l.registrationNameModules[e] &&
            ("production" !== t.env.NODE_ENV
              ? s(
                  !1,
                  "EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.",
                  e
                )
              : a("100", e)),
          (l.registrationNameModules[e] = n),
          (l.registrationNameDependencies[e] = n.eventTypes[r].dependencies),
          "production" !== t.env.NODE_ENV)
        ) {
          var i = e.toLowerCase();
          (l.possibleRegistrationNames[i] = e),
            "onDoubleClick" === e &&
              (l.possibleRegistrationNames.ondblclick = e);
        }
      }
      var a = n(3),
        s = n(1),
        c = null,
        u = {},
        l = {
          plugins: [],
          eventNameDispatchConfigs: {},
          registrationNameModules: {},
          registrationNameDependencies: {},
          possibleRegistrationNames:
            "production" !== t.env.NODE_ENV ? {} : null,
          injectEventPluginOrder: function (e) {
            c &&
              ("production" !== t.env.NODE_ENV
                ? s(
                    !1,
                    "EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."
                  )
                : a("101")),
              (c = Array.prototype.slice.call(e)),
              r();
          },
          injectEventPluginsByName: function (e) {
            var n = !1;
            for (var i in e)
              if (e.hasOwnProperty(i)) {
                var o = e[i];
                (u.hasOwnProperty(i) && u[i] === o) ||
                  (u[i] &&
                    ("production" !== t.env.NODE_ENV
                      ? s(
                          !1,
                          "EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.",
                          i
                        )
                      : a("102", i)),
                  (u[i] = o),
                  (n = !0));
              }
            n && r();
          },
          getPluginModuleForEvent: function (e) {
            var t = e.dispatchConfig;
            if (t.registrationName)
              return l.registrationNameModules[t.registrationName] || null;
            if (void 0 !== t.phasedRegistrationNames) {
              var n = t.phasedRegistrationNames;
              for (var r in n)
                if (n.hasOwnProperty(r)) {
                  var i = l.registrationNameModules[n[r]];
                  if (i) return i;
                }
            }
            return null;
          },
          _resetEventPlugins: function () {
            c = null;
            for (var e in u) u.hasOwnProperty(e) && delete u[e];
            l.plugins.length = 0;
            var n = l.eventNameDispatchConfigs;
            for (var r in n) n.hasOwnProperty(r) && delete n[r];
            var i = l.registrationNameModules;
            for (var o in i) i.hasOwnProperty(o) && delete i[o];
            if ("production" !== t.env.NODE_ENV) {
              var a = l.possibleRegistrationNames;
              for (var s in a) a.hasOwnProperty(s) && delete a[s];
            }
          },
        };
      e.exports = l;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(3),
        i = n(1),
        o = {},
        a = {
          reinitializeTransaction: function () {
            (this.transactionWrappers = this.getTransactionWrappers()),
              this.wrapperInitData
                ? (this.wrapperInitData.length = 0)
                : (this.wrapperInitData = []),
              (this._isInTransaction = !1);
          },
          _isInTransaction: !1,
          getTransactionWrappers: null,
          isInTransaction: function () {
            return !!this._isInTransaction;
          },
          perform: function (e, n, o, a, s, c, u, l) {
            this.isInTransaction() &&
              ("production" !== t.env.NODE_ENV
                ? i(
                    !1,
                    "Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction."
                  )
                : r("27"));
            var h, p;
            try {
              (this._isInTransaction = !0),
                (h = !0),
                this.initializeAll(0),
                (p = e.call(n, o, a, s, c, u, l)),
                (h = !1);
            } finally {
              try {
                if (h)
                  try {
                    this.closeAll(0);
                  } catch (e) {}
                else this.closeAll(0);
              } finally {
                this._isInTransaction = !1;
              }
            }
            return p;
          },
          initializeAll: function (e) {
            for (var t = this.transactionWrappers, n = e; n < t.length; n++) {
              var r = t[n];
              try {
                (this.wrapperInitData[n] = o),
                  (this.wrapperInitData[n] = r.initialize
                    ? r.initialize.call(this)
                    : null);
              } finally {
                if (this.wrapperInitData[n] === o)
                  try {
                    this.initializeAll(n + 1);
                  } catch (e) {}
              }
            }
          },
          closeAll: function (e) {
            this.isInTransaction() ||
              ("production" !== t.env.NODE_ENV
                ? i(
                    !1,
                    "Transaction.closeAll(): Cannot close transaction when none are open."
                  )
                : r("28"));
            for (var n = this.transactionWrappers, a = e; a < n.length; a++) {
              var s,
                c = n[a],
                u = this.wrapperInitData[a];
              try {
                (s = !0), u !== o && c.close && c.close.call(this, u), (s = !1);
              } finally {
                if (s)
                  try {
                    this.closeAll(a + 1);
                  } catch (e) {}
              }
            }
            this.wrapperInitData.length = 0;
          },
        };
      e.exports = a;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(24),
      o = n(67),
      a = n(40),
      s = {
        screenX: null,
        screenY: null,
        clientX: null,
        clientY: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        getModifierState: a,
        button: function (e) {
          var t = e.button;
          return "which" in e ? t : 2 === t ? 2 : 4 === t ? 1 : 0;
        },
        buttons: null,
        relatedTarget: function (e) {
          return (
            e.relatedTarget ||
            (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
          );
        },
        pageX: function (e) {
          return "pageX" in e ? e.pageX : e.clientX + o.currentScrollLeft;
        },
        pageY: function (e) {
          return "pageY" in e ? e.pageY : e.clientY + o.currentScrollTop;
        },
      };
    i.augmentClass(r, s), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    var r,
      i = n(6),
      o = n(42),
      a = /^[ \r\n\t\f]/,
      s = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,
      c = n(43),
      u = c(function (e, t) {
        if (e.namespaceURI !== o.svg || "innerHTML" in e) e.innerHTML = t;
        else {
          (r = r || document.createElement("div")),
            (r.innerHTML = "<svg>" + t + "</svg>");
          for (var n = r.firstChild; n.firstChild; )
            e.appendChild(n.firstChild);
        }
      });
    if (i.canUseDOM) {
      var l = document.createElement("div");
      (l.innerHTML = " "),
        "" === l.innerHTML &&
          (u = function (e, t) {
            if (
              (e.parentNode && e.parentNode.replaceChild(e, e),
              a.test(t) || ("<" === t[0] && s.test(t)))
            ) {
              e.innerHTML = String.fromCharCode(65279) + t;
              var n = e.firstChild;
              1 === n.data.length ? e.removeChild(n) : n.deleteData(0, 1);
            } else e.innerHTML = t;
          }),
        (l = null);
    }
    e.exports = u;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = "" + e,
        n = o.exec(t);
      if (!n) return t;
      var r,
        i = "",
        a = 0,
        s = 0;
      for (a = n.index; a < t.length; a++) {
        switch (t.charCodeAt(a)) {
          case 34:
            r = "&quot;";
            break;
          case 38:
            r = "&amp;";
            break;
          case 39:
            r = "&#x27;";
            break;
          case 60:
            r = "&lt;";
            break;
          case 62:
            r = "&gt;";
            break;
          default:
            continue;
        }
        s !== a && (i += t.substring(s, a)), (s = a + 1), (i += r);
      }
      return s !== a ? i + t.substring(s, a) : i;
    }
    function i(e) {
      return "boolean" == typeof e || "number" == typeof e ? "" + e : r(e);
    }
    var o = /["'&<>]/;
    e.exports = i;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return (
        Object.prototype.hasOwnProperty.call(e, m) ||
          ((e[m] = d++), (h[e[m]] = {})),
        h[e[m]]
      );
    }
    var i,
      o = n(5),
      a = n(28),
      s = n(139),
      c = n(67),
      u = n(140),
      l = n(39),
      h = {},
      p = !1,
      d = 0,
      f = {
        topAbort: "abort",
        topAnimationEnd: u("animationend") || "animationend",
        topAnimationIteration: u("animationiteration") || "animationiteration",
        topAnimationStart: u("animationstart") || "animationstart",
        topBlur: "blur",
        topCanPlay: "canplay",
        topCanPlayThrough: "canplaythrough",
        topChange: "change",
        topClick: "click",
        topCompositionEnd: "compositionend",
        topCompositionStart: "compositionstart",
        topCompositionUpdate: "compositionupdate",
        topContextMenu: "contextmenu",
        topCopy: "copy",
        topCut: "cut",
        topDoubleClick: "dblclick",
        topDrag: "drag",
        topDragEnd: "dragend",
        topDragEnter: "dragenter",
        topDragExit: "dragexit",
        topDragLeave: "dragleave",
        topDragOver: "dragover",
        topDragStart: "dragstart",
        topDrop: "drop",
        topDurationChange: "durationchange",
        topEmptied: "emptied",
        topEncrypted: "encrypted",
        topEnded: "ended",
        topError: "error",
        topFocus: "focus",
        topInput: "input",
        topKeyDown: "keydown",
        topKeyPress: "keypress",
        topKeyUp: "keyup",
        topLoadedData: "loadeddata",
        topLoadedMetadata: "loadedmetadata",
        topLoadStart: "loadstart",
        topMouseDown: "mousedown",
        topMouseMove: "mousemove",
        topMouseOut: "mouseout",
        topMouseOver: "mouseover",
        topMouseUp: "mouseup",
        topPaste: "paste",
        topPause: "pause",
        topPlay: "play",
        topPlaying: "playing",
        topProgress: "progress",
        topRateChange: "ratechange",
        topScroll: "scroll",
        topSeeked: "seeked",
        topSeeking: "seeking",
        topSelectionChange: "selectionchange",
        topStalled: "stalled",
        topSuspend: "suspend",
        topTextInput: "textInput",
        topTimeUpdate: "timeupdate",
        topTouchCancel: "touchcancel",
        topTouchEnd: "touchend",
        topTouchMove: "touchmove",
        topTouchStart: "touchstart",
        topTransitionEnd: u("transitionend") || "transitionend",
        topVolumeChange: "volumechange",
        topWaiting: "waiting",
        topWheel: "wheel",
      },
      m = "_reactListenersID" + String(Math.random()).slice(2),
      v = o({}, s, {
        ReactEventListener: null,
        injection: {
          injectReactEventListener: function (e) {
            e.setHandleTopLevel(v.handleTopLevel), (v.ReactEventListener = e);
          },
        },
        setEnabled: function (e) {
          v.ReactEventListener && v.ReactEventListener.setEnabled(e);
        },
        isEnabled: function () {
          return !(!v.ReactEventListener || !v.ReactEventListener.isEnabled());
        },
        listenTo: function (e, t) {
          for (
            var n = t, i = r(n), o = a.registrationNameDependencies[e], s = 0;
            s < o.length;
            s++
          ) {
            var c = o[s];
            (i.hasOwnProperty(c) && i[c]) ||
              ("topWheel" === c
                ? l("wheel")
                  ? v.ReactEventListener.trapBubbledEvent(
                      "topWheel",
                      "wheel",
                      n
                    )
                  : l("mousewheel")
                  ? v.ReactEventListener.trapBubbledEvent(
                      "topWheel",
                      "mousewheel",
                      n
                    )
                  : v.ReactEventListener.trapBubbledEvent(
                      "topWheel",
                      "DOMMouseScroll",
                      n
                    )
                : "topScroll" === c
                ? l("scroll", !0)
                  ? v.ReactEventListener.trapCapturedEvent(
                      "topScroll",
                      "scroll",
                      n
                    )
                  : v.ReactEventListener.trapBubbledEvent(
                      "topScroll",
                      "scroll",
                      v.ReactEventListener.WINDOW_HANDLE
                    )
                : "topFocus" === c || "topBlur" === c
                ? (l("focus", !0)
                    ? (v.ReactEventListener.trapCapturedEvent(
                        "topFocus",
                        "focus",
                        n
                      ),
                      v.ReactEventListener.trapCapturedEvent(
                        "topBlur",
                        "blur",
                        n
                      ))
                    : l("focusin") &&
                      (v.ReactEventListener.trapBubbledEvent(
                        "topFocus",
                        "focusin",
                        n
                      ),
                      v.ReactEventListener.trapBubbledEvent(
                        "topBlur",
                        "focusout",
                        n
                      )),
                  (i.topBlur = !0),
                  (i.topFocus = !0))
                : f.hasOwnProperty(c) &&
                  v.ReactEventListener.trapBubbledEvent(c, f[c], n),
              (i[c] = !0));
          }
        },
        trapBubbledEvent: function (e, t, n) {
          return v.ReactEventListener.trapBubbledEvent(e, t, n);
        },
        trapCapturedEvent: function (e, t, n) {
          return v.ReactEventListener.trapCapturedEvent(e, t, n);
        },
        supportsEventPageXY: function () {
          if (!document.createEvent) return !1;
          var e = document.createEvent("MouseEvent");
          return null != e && "pageX" in e;
        },
        ensureScrollValueMonitoring: function () {
          if ((void 0 === i && (i = v.supportsEventPageXY()), !i && !p)) {
            var e = c.refreshScrollValues;
            v.ReactEventListener.monitorScrollValue(e), (p = !0);
          }
        },
      });
    e.exports = v;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return function () {
        return e;
      };
    }
    var i = function () {};
    (i.thatReturns = r),
      (i.thatReturnsFalse = r(!1)),
      (i.thatReturnsTrue = r(!0)),
      (i.thatReturnsNull = r(null)),
      (i.thatReturnsThis = function () {
        return this;
      }),
      (i.thatReturnsArgument = function (e) {
        return e;
      }),
      (e.exports = i);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var n = function () {};
      if ("production" !== t.env.NODE_ENV) {
        var r = function (e) {
          for (
            var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            n[r - 1] = arguments[r];
          var i = 0,
            o =
              "Warning: " +
              e.replace(/%s/g, function () {
                return n[i++];
              });
          "undefined" != typeof console && console.warn(o);
          try {
            throw new Error(o);
          } catch (e) {}
        };
        n = function (e, t) {
          if (void 0 === t)
            throw new Error(
              "`warning(condition, format, ...args)` requires a warning message argument"
            );
          if (!e) {
            for (
              var n = arguments.length, i = Array(n > 2 ? n - 2 : 0), o = 2;
              o < n;
              o++
            )
              i[o - 2] = arguments[o];
            r.apply(void 0, [t].concat(i));
          }
        };
      }
      e.exports = n;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return (
          "topMouseUp" === e || "topTouchEnd" === e || "topTouchCancel" === e
        );
      }
      function i(e) {
        return "topMouseMove" === e || "topTouchMove" === e;
      }
      function o(e) {
        return "topMouseDown" === e || "topTouchStart" === e;
      }
      function a(e, t, n, r) {
        var i = e.type || "unknown-event";
        (e.currentTarget = b.getNodeFromInstance(r)),
          t
            ? v.invokeGuardedCallbackWithCatch(i, n, e)
            : v.invokeGuardedCallback(i, n, e),
          (e.currentTarget = null);
      }
      function s(e, n) {
        var r = e._dispatchListeners,
          i = e._dispatchInstances;
        if (("production" !== t.env.NODE_ENV && f(e), Array.isArray(r)))
          for (var o = 0; o < r.length && !e.isPropagationStopped(); o++)
            a(e, n, r[o], i[o]);
        else r && a(e, n, r, i);
        (e._dispatchListeners = null), (e._dispatchInstances = null);
      }
      function c(e) {
        var n = e._dispatchListeners,
          r = e._dispatchInstances;
        if (("production" !== t.env.NODE_ENV && f(e), Array.isArray(n))) {
          for (var i = 0; i < n.length && !e.isPropagationStopped(); i++)
            if (n[i](e, r[i])) return r[i];
        } else if (n && n(e, r)) return r;
        return null;
      }
      function u(e) {
        var t = c(e);
        return (e._dispatchInstances = null), (e._dispatchListeners = null), t;
      }
      function l(e) {
        "production" !== t.env.NODE_ENV && f(e);
        var n = e._dispatchListeners,
          r = e._dispatchInstances;
        Array.isArray(n) &&
          ("production" !== t.env.NODE_ENV
            ? g(!1, "executeDirectDispatch(...): Invalid `event`.")
            : m("103")),
          (e.currentTarget = n ? b.getNodeFromInstance(r) : null);
        var i = n ? n(e) : null;
        return (
          (e.currentTarget = null),
          (e._dispatchListeners = null),
          (e._dispatchInstances = null),
          i
        );
      }
      function h(e) {
        return !!e._dispatchListeners;
      }
      var p,
        d,
        f,
        m = n(3),
        v = n(37),
        g = n(1),
        y = n(2),
        _ = {
          injectComponentTree: function (e) {
            (p = e),
              "production" !== t.env.NODE_ENV &&
                "production" !== t.env.NODE_ENV &&
                y(
                  e && e.getNodeFromInstance && e.getInstanceFromNode,
                  "EventPluginUtils.injection.injectComponentTree(...): Injected module is missing getNodeFromInstance or getInstanceFromNode."
                );
          },
          injectTreeTraversal: function (e) {
            (d = e),
              "production" !== t.env.NODE_ENV &&
                "production" !== t.env.NODE_ENV &&
                y(
                  e && e.isAncestor && e.getLowestCommonAncestor,
                  "EventPluginUtils.injection.injectTreeTraversal(...): Injected module is missing isAncestor or getLowestCommonAncestor."
                );
          },
        };
      "production" !== t.env.NODE_ENV &&
        (f = function (e) {
          var n = e._dispatchListeners,
            r = e._dispatchInstances,
            i = Array.isArray(n),
            o = i ? n.length : n ? 1 : 0,
            a = Array.isArray(r),
            s = a ? r.length : r ? 1 : 0;
          "production" !== t.env.NODE_ENV &&
            y(a === i && s === o, "EventPluginUtils: Invalid `event`.");
        });
      var b = {
        isEndish: r,
        isMoveish: i,
        isStartish: o,
        executeDirectDispatch: l,
        executeDispatchesInOrder: s,
        executeDispatchesInOrderStopAtTrue: u,
        hasDispatches: h,
        getInstanceFromNode: function (e) {
          return p.getInstanceFromNode(e);
        },
        getNodeFromInstance: function (e) {
          return p.getNodeFromInstance(e);
        },
        isAncestor: function (e, t) {
          return d.isAncestor(e, t);
        },
        getLowestCommonAncestor: function (e, t) {
          return d.getLowestCommonAncestor(e, t);
        },
        getParentInstance: function (e) {
          return d.getParentInstance(e);
        },
        traverseTwoPhase: function (e, t, n) {
          return d.traverseTwoPhase(e, t, n);
        },
        traverseEnterLeave: function (e, t, n, r, i) {
          return d.traverseEnterLeave(e, t, n, r, i);
        },
        injection: _,
      };
      e.exports = b;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function n(e, t, n) {
        try {
          t(n);
        } catch (e) {
          null === r && (r = e);
        }
      }
      var r = null,
        i = {
          invokeGuardedCallback: n,
          invokeGuardedCallbackWithCatch: n,
          rethrowCaughtError: function () {
            if (r) {
              var e = r;
              throw ((r = null), e);
            }
          },
        };
      if (
        "production" !== t.env.NODE_ENV &&
        "undefined" != typeof window &&
        "function" == typeof window.dispatchEvent &&
        "undefined" != typeof document &&
        "function" == typeof document.createEvent
      ) {
        var o = document.createElement("react");
        i.invokeGuardedCallback = function (e, t, n) {
          var r = t.bind(null, n),
            i = "react-" + e;
          o.addEventListener(i, r, !1);
          var a = document.createEvent("Event");
          a.initEvent(i, !1, !1),
            o.dispatchEvent(a),
            o.removeEventListener(i, r, !1);
        };
      }
      e.exports = i;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = e.target || e.srcElement || window;
      return (
        t.correspondingUseElement && (t = t.correspondingUseElement),
        3 === t.nodeType ? t.parentNode : t
      );
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @param {?boolean} capture Check if the capture phase is supported.
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function r(e, t) {
      if (!o.canUseDOM || (t && !("addEventListener" in document))) return !1;
      var n = "on" + e,
        r = n in document;
      if (!r) {
        var a = document.createElement("div");
        a.setAttribute(n, "return;"), (r = "function" == typeof a[n]);
      }
      return (
        !r &&
          i &&
          "wheel" === e &&
          (r = document.implementation.hasFeature("Events.wheel", "3.0")),
        r
      );
    }
    var i,
      o = n(6);
    o.canUseDOM &&
      (i =
        document.implementation &&
        document.implementation.hasFeature &&
        !0 !== document.implementation.hasFeature("", "")),
      (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = this,
        n = t.nativeEvent;
      if (n.getModifierState) return n.getModifierState(e);
      var r = o[e];
      return !!r && !!n[r];
    }
    function i(e) {
      return r;
    }
    var o = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey",
    };
    e.exports = i;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        return Array.isArray(t) && (t = t[1]), t ? t.nextSibling : e.firstChild;
      }
      function i(e, t, n) {
        l.insertTreeBefore(e, t, n);
      }
      function o(e, t, n) {
        Array.isArray(t) ? s(e, t[0], t[1], n) : g(e, t, n);
      }
      function a(e, t) {
        if (Array.isArray(t)) {
          var n = t[1];
          (t = t[0]), c(e, t, n), e.removeChild(n);
        }
        e.removeChild(t);
      }
      function s(e, t, n, r) {
        for (var i = t; ; ) {
          var o = i.nextSibling;
          if ((g(e, i, r), i === n)) break;
          i = o;
        }
      }
      function c(e, t, n) {
        for (;;) {
          var r = t.nextSibling;
          if (r === n) break;
          e.removeChild(r);
        }
      }
      function u(e, n, r) {
        var i = e.parentNode,
          o = e.nextSibling;
        o === n
          ? r && g(i, document.createTextNode(r), o)
          : r
          ? (v(o, r), c(i, o, n))
          : c(i, e, n),
          "production" !== t.env.NODE_ENV &&
            d.debugTool.onHostOperation({
              instanceID: p.getInstanceFromNode(e)._debugID,
              type: "replace text",
              payload: r,
            });
      }
      var l = n(21),
        h = n(124),
        p = n(4),
        d = n(8),
        f = n(43),
        m = n(31),
        v = n(68),
        g = f(function (e, t, n) {
          e.insertBefore(t, n);
        }),
        y = h.dangerouslyReplaceNodeWithMarkup;
      "production" !== t.env.NODE_ENV &&
        (y = function (e, t, n) {
          if ((h.dangerouslyReplaceNodeWithMarkup(e, t), 0 !== n._debugID))
            d.debugTool.onHostOperation({
              instanceID: n._debugID,
              type: "replace with",
              payload: t.toString(),
            });
          else {
            var r = p.getInstanceFromNode(t.node);
            0 !== r._debugID &&
              d.debugTool.onHostOperation({
                instanceID: r._debugID,
                type: "mount",
                payload: t.toString(),
              });
          }
        });
      var _ = {
        dangerouslyReplaceNodeWithMarkup: y,
        replaceDelimitedText: u,
        processUpdates: function (e, n) {
          if ("production" !== t.env.NODE_ENV)
            var s = p.getInstanceFromNode(e)._debugID;
          for (var c = 0; c < n.length; c++) {
            var u = n[c];
            switch (u.type) {
              case "INSERT_MARKUP":
                i(e, u.content, r(e, u.afterNode)),
                  "production" !== t.env.NODE_ENV &&
                    d.debugTool.onHostOperation({
                      instanceID: s,
                      type: "insert child",
                      payload: {
                        toIndex: u.toIndex,
                        content: u.content.toString(),
                      },
                    });
                break;
              case "MOVE_EXISTING":
                o(e, u.fromNode, r(e, u.afterNode)),
                  "production" !== t.env.NODE_ENV &&
                    d.debugTool.onHostOperation({
                      instanceID: s,
                      type: "move child",
                      payload: { fromIndex: u.fromIndex, toIndex: u.toIndex },
                    });
                break;
              case "SET_MARKUP":
                m(e, u.content),
                  "production" !== t.env.NODE_ENV &&
                    d.debugTool.onHostOperation({
                      instanceID: s,
                      type: "replace children",
                      payload: u.content.toString(),
                    });
                break;
              case "TEXT_CONTENT":
                v(e, u.content),
                  "production" !== t.env.NODE_ENV &&
                    d.debugTool.onHostOperation({
                      instanceID: s,
                      type: "replace text",
                      payload: u.content.toString(),
                    });
                break;
              case "REMOVE_NODE":
                a(e, u.fromNode),
                  "production" !== t.env.NODE_ENV &&
                    d.debugTool.onHostOperation({
                      instanceID: s,
                      type: "remove child",
                      payload: { fromIndex: u.fromIndex },
                    });
            }
          }
        },
      };
      e.exports = _;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = {
      html: "http://www.w3.org/1999/xhtml",
      mathml: "http://www.w3.org/1998/Math/MathML",
      svg: "http://www.w3.org/2000/svg",
    };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r = function (e) {
      return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction
        ? function (t, n, r, i) {
            MSApp.execUnsafeLocalFunction(function () {
              return e(t, n, r, i);
            });
          }
        : e;
    };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        null != e.checkedLink &&
          null != e.valueLink &&
          ("production" !== t.env.NODE_ENV
            ? p(
                !1,
                "Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa."
              )
            : s("87"));
      }
      function i(e) {
        r(e),
          (null != e.value || null != e.onChange) &&
            ("production" !== t.env.NODE_ENV
              ? p(
                  !1,
                  "Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink."
                )
              : s("88"));
      }
      function o(e) {
        r(e),
          (null != e.checked || null != e.onChange) &&
            ("production" !== t.env.NODE_ENV
              ? p(
                  !1,
                  "Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink"
                )
              : s("89"));
      }
      function a(e) {
        if (e) {
          var t = e.getName();
          if (t) return " Check the render method of `" + t + "`.";
        }
        return "";
      }
      var s = n(3),
        c = n(72),
        u = n(142),
        l = n(18),
        h = u(l.isValidElement),
        p = n(1),
        d = n(2),
        f = {
          button: !0,
          checkbox: !0,
          image: !0,
          hidden: !0,
          radio: !0,
          reset: !0,
          submit: !0,
        },
        m = {
          value: function (e, t, n) {
            return !e[t] || f[e.type] || e.onChange || e.readOnly || e.disabled
              ? null
              : new Error(
                  "You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."
                );
          },
          checked: function (e, t, n) {
            return !e[t] || e.onChange || e.readOnly || e.disabled
              ? null
              : new Error(
                  "You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`."
                );
          },
          onChange: h.func,
        },
        v = {},
        g = {
          checkPropTypes: function (e, n, r) {
            for (var i in m) {
              if (m.hasOwnProperty(i)) var o = m[i](n, i, e, "prop", null, c);
              if (o instanceof Error && !(o.message in v)) {
                v[o.message] = !0;
                var s = a(r);
                "production" !== t.env.NODE_ENV &&
                  d(!1, "Failed form propType: %s%s", o.message, s);
              }
            }
          },
          getValue: function (e) {
            return e.valueLink ? (i(e), e.valueLink.value) : e.value;
          },
          getChecked: function (e) {
            return e.checkedLink ? (o(e), e.checkedLink.value) : e.checked;
          },
          executeOnChange: function (e, t) {
            return e.valueLink
              ? (i(e), e.valueLink.requestChange(t.target.value))
              : e.checkedLink
              ? (o(e), e.checkedLink.requestChange(t.target.checked))
              : e.onChange
              ? e.onChange.call(void 0, t)
              : void 0;
          },
        };
      e.exports = g;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(3),
        i = n(1),
        o = !1,
        a = {
          replaceNodeWithMarkup: null,
          processChildrenUpdates: null,
          injection: {
            injectEnvironment: function (e) {
              o &&
                ("production" !== t.env.NODE_ENV
                  ? i(
                      !1,
                      "ReactCompositeComponent: injectEnvironment() can only be called once."
                    )
                  : r("104")),
                (a.replaceNodeWithMarkup = e.replaceNodeWithMarkup),
                (a.processChildrenUpdates = e.processChildrenUpdates),
                (o = !0);
            },
          },
        };
      e.exports = a;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e, t) {
      return e === t
        ? 0 !== e || 0 !== t || 1 / e == 1 / t
        : e !== e && t !== t;
    }
    function i(e, t) {
      if (r(e, t)) return !0;
      if (
        "object" != typeof e ||
        null === e ||
        "object" != typeof t ||
        null === t
      )
        return !1;
      var n = Object.keys(e),
        i = Object.keys(t);
      if (n.length !== i.length) return !1;
      for (var a = 0; a < n.length; a++)
        if (!o.call(t, n[a]) || !r(e[n[a]], t[n[a]])) return !1;
      return !0;
    }
    var o = Object.prototype.hasOwnProperty;
    e.exports = i;
  },
  function (e, t, n) {
    "use strict";
    function r(e, t) {
      var n = null === e || !1 === e,
        r = null === t || !1 === t;
      if (n || r) return n === r;
      var i = typeof e,
        o = typeof t;
      return "string" === i || "number" === i
        ? "string" === o || "number" === o
        : "object" === o && e.type === t.type && e.key === t.key;
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = { "=": "=0", ":": "=2" };
      return (
        "$" +
        ("" + e).replace(/[=:]/g, function (e) {
          return t[e];
        })
      );
    }
    function i(e) {
      var t = /(=0|=2)/g,
        n = { "=0": "=", "=2": ":" };
      return (
        "" + ("." === e[0] && "$" === e[1] ? e.substring(2) : e.substring(1))
      ).replace(t, function (e) {
        return n[e];
      });
    }
    var o = { escape: r, unescape: i };
    e.exports = o;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        l.enqueueUpdate(e);
      }
      function i(e) {
        var t = typeof e;
        if ("object" !== t) return t;
        var n = (e.constructor && e.constructor.name) || t,
          r = Object.keys(e);
        return r.length > 0 && r.length < 20
          ? n + " (keys: " + r.join(", ") + ")"
          : n;
      }
      function o(e, n) {
        var r = c.get(e);
        if (!r) {
          if ("production" !== t.env.NODE_ENV) {
            var i = e.constructor;
            "production" !== t.env.NODE_ENV &&
              p(
                !n,
                "%s(...): Can only update a mounted or mounting component. This usually means you called %s() on an unmounted component. This is a no-op. Please check the code for the %s component.",
                n,
                n,
                (i && (i.displayName || i.name)) || "ReactClass"
              );
          }
          return null;
        }
        return (
          "production" !== t.env.NODE_ENV &&
            "production" !== t.env.NODE_ENV &&
            p(
              null == s.current,
              "%s(...): Cannot update during an existing state transition (such as within `render` or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to `componentWillMount`.",
              n
            ),
          r
        );
      }
      var a = n(3),
        s = n(9),
        c = n(25),
        u = n(8),
        l = n(11),
        h = n(1),
        p = n(2),
        d = {
          isMounted: function (e) {
            if ("production" !== t.env.NODE_ENV) {
              var n = s.current;
              null !== n &&
                ("production" !== t.env.NODE_ENV &&
                  p(
                    n._warnedAboutRefsInRender,
                    "%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.",
                    n.getName() || "A component"
                  ),
                (n._warnedAboutRefsInRender = !0));
            }
            var r = c.get(e);
            return !!r && !!r._renderedComponent;
          },
          enqueueCallback: function (e, t, n) {
            d.validateCallback(t, n);
            var i = o(e);
            if (!i) return null;
            i._pendingCallbacks
              ? i._pendingCallbacks.push(t)
              : (i._pendingCallbacks = [t]),
              r(i);
          },
          enqueueCallbackInternal: function (e, t) {
            e._pendingCallbacks
              ? e._pendingCallbacks.push(t)
              : (e._pendingCallbacks = [t]),
              r(e);
          },
          enqueueForceUpdate: function (e) {
            var t = o(e, "forceUpdate");
            t && ((t._pendingForceUpdate = !0), r(t));
          },
          enqueueReplaceState: function (e, t, n) {
            var i = o(e, "replaceState");
            i &&
              ((i._pendingStateQueue = [t]),
              (i._pendingReplaceState = !0),
              void 0 !== n &&
                null !== n &&
                (d.validateCallback(n, "replaceState"),
                i._pendingCallbacks
                  ? i._pendingCallbacks.push(n)
                  : (i._pendingCallbacks = [n])),
              r(i));
          },
          enqueueSetState: function (e, n) {
            "production" !== t.env.NODE_ENV &&
              (u.debugTool.onSetState(),
              "production" !== t.env.NODE_ENV &&
                p(
                  null != n,
                  "setState(...): You passed an undefined or null state object; instead, use forceUpdate()."
                ));
            var i = o(e, "setState");
            if (i) {
              (i._pendingStateQueue || (i._pendingStateQueue = [])).push(n),
                r(i);
            }
          },
          enqueueElementInternal: function (e, t, n) {
            (e._pendingElement = t), (e._context = n), r(e);
          },
          validateCallback: function (e, n) {
            e &&
              "function" != typeof e &&
              ("production" !== t.env.NODE_ENV
                ? h(
                    !1,
                    "%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.",
                    n,
                    i(e)
                  )
                : a("122", n, i(e)));
          },
        };
      e.exports = d;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(5),
        i = n(10),
        o = n(2),
        a = i;
      if ("production" !== t.env.NODE_ENV) {
        var s = [
            "address",
            "applet",
            "area",
            "article",
            "aside",
            "base",
            "basefont",
            "bgsound",
            "blockquote",
            "body",
            "br",
            "button",
            "caption",
            "center",
            "col",
            "colgroup",
            "dd",
            "details",
            "dir",
            "div",
            "dl",
            "dt",
            "embed",
            "fieldset",
            "figcaption",
            "figure",
            "footer",
            "form",
            "frame",
            "frameset",
            "h1",
            "h2",
            "h3",
            "h4",
            "h5",
            "h6",
            "head",
            "header",
            "hgroup",
            "hr",
            "html",
            "iframe",
            "img",
            "input",
            "isindex",
            "li",
            "link",
            "listing",
            "main",
            "marquee",
            "menu",
            "menuitem",
            "meta",
            "nav",
            "noembed",
            "noframes",
            "noscript",
            "object",
            "ol",
            "p",
            "param",
            "plaintext",
            "pre",
            "script",
            "section",
            "select",
            "source",
            "style",
            "summary",
            "table",
            "tbody",
            "td",
            "template",
            "textarea",
            "tfoot",
            "th",
            "thead",
            "title",
            "tr",
            "track",
            "ul",
            "wbr",
            "xmp",
          ],
          c = [
            "applet",
            "caption",
            "html",
            "table",
            "td",
            "th",
            "marquee",
            "object",
            "template",
            "foreignObject",
            "desc",
            "title",
          ],
          u = c.concat(["button"]),
          l = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"],
          h = {
            current: null,
            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,
            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null,
          },
          p = function (e, t, n) {
            var i = r({}, e || h),
              o = { tag: t, instance: n };
            return (
              -1 !== c.indexOf(t) &&
                ((i.aTagInScope = null),
                (i.buttonTagInScope = null),
                (i.nobrTagInScope = null)),
              -1 !== u.indexOf(t) && (i.pTagInButtonScope = null),
              -1 !== s.indexOf(t) &&
                "address" !== t &&
                "div" !== t &&
                "p" !== t &&
                ((i.listItemTagAutoclosing = null),
                (i.dlItemTagAutoclosing = null)),
              (i.current = o),
              "form" === t && (i.formTag = o),
              "a" === t && (i.aTagInScope = o),
              "button" === t && (i.buttonTagInScope = o),
              "nobr" === t && (i.nobrTagInScope = o),
              "p" === t && (i.pTagInButtonScope = o),
              "li" === t && (i.listItemTagAutoclosing = o),
              ("dd" !== t && "dt" !== t) || (i.dlItemTagAutoclosing = o),
              i
            );
          },
          d = function (e, t) {
            switch (t) {
              case "select":
                return "option" === e || "optgroup" === e || "#text" === e;
              case "optgroup":
                return "option" === e || "#text" === e;
              case "option":
                return "#text" === e;
              case "tr":
                return (
                  "th" === e ||
                  "td" === e ||
                  "style" === e ||
                  "script" === e ||
                  "template" === e
                );
              case "tbody":
              case "thead":
              case "tfoot":
                return (
                  "tr" === e ||
                  "style" === e ||
                  "script" === e ||
                  "template" === e
                );
              case "colgroup":
                return "col" === e || "template" === e;
              case "table":
                return (
                  "caption" === e ||
                  "colgroup" === e ||
                  "tbody" === e ||
                  "tfoot" === e ||
                  "thead" === e ||
                  "style" === e ||
                  "script" === e ||
                  "template" === e
                );
              case "head":
                return (
                  "base" === e ||
                  "basefont" === e ||
                  "bgsound" === e ||
                  "link" === e ||
                  "meta" === e ||
                  "title" === e ||
                  "noscript" === e ||
                  "noframes" === e ||
                  "style" === e ||
                  "script" === e ||
                  "template" === e
                );
              case "html":
                return "head" === e || "body" === e;
              case "#document":
                return "html" === e;
            }
            switch (e) {
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return (
                  "h1" !== t &&
                  "h2" !== t &&
                  "h3" !== t &&
                  "h4" !== t &&
                  "h5" !== t &&
                  "h6" !== t
                );
              case "rp":
              case "rt":
                return -1 === l.indexOf(t);
              case "body":
              case "caption":
              case "col":
              case "colgroup":
              case "frame":
              case "head":
              case "html":
              case "tbody":
              case "td":
              case "tfoot":
              case "th":
              case "thead":
              case "tr":
                return null == t;
            }
            return !0;
          },
          f = function (e, t) {
            switch (e) {
              case "address":
              case "article":
              case "aside":
              case "blockquote":
              case "center":
              case "details":
              case "dialog":
              case "dir":
              case "div":
              case "dl":
              case "fieldset":
              case "figcaption":
              case "figure":
              case "footer":
              case "header":
              case "hgroup":
              case "main":
              case "menu":
              case "nav":
              case "ol":
              case "p":
              case "section":
              case "summary":
              case "ul":
              case "pre":
              case "listing":
              case "table":
              case "hr":
              case "xmp":
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return t.pTagInButtonScope;
              case "form":
                return t.formTag || t.pTagInButtonScope;
              case "li":
                return t.listItemTagAutoclosing;
              case "dd":
              case "dt":
                return t.dlItemTagAutoclosing;
              case "button":
                return t.buttonTagInScope;
              case "a":
                return t.aTagInScope;
              case "nobr":
                return t.nobrTagInScope;
            }
            return null;
          },
          m = function (e) {
            if (!e) return [];
            var t = [];
            do {
              t.push(e);
            } while ((e = e._currentElement._owner));
            return t.reverse(), t;
          },
          v = {};
        (a = function (e, n, r, i) {
          i = i || h;
          var a = i.current,
            s = a && a.tag;
          null != n &&
            ("production" !== t.env.NODE_ENV &&
              o(
                null == e,
                "validateDOMNesting: when childText is passed, childTag should be null"
              ),
            (e = "#text"));
          var c = d(e, s) ? null : a,
            u = c ? null : f(e, i),
            l = c || u;
          if (l) {
            var p,
              g = l.tag,
              y = l.instance,
              _ = r && r._currentElement._owner,
              b = y && y._currentElement._owner,
              x = m(_),
              E = m(b),
              w = Math.min(x.length, E.length),
              M = -1;
            for (p = 0; p < w && x[p] === E[p]; p++) M = p;
            var T = x.slice(M + 1).map(function (e) {
                return e.getName() || "(unknown)";
              }),
              S = E.slice(M + 1).map(function (e) {
                return e.getName() || "(unknown)";
              }),
              N = []
                .concat(
                  -1 !== M ? x[M].getName() || "(unknown)" : [],
                  S,
                  g,
                  u ? ["..."] : [],
                  T,
                  e
                )
                .join(" > "),
              C = !!c + "|" + e + "|" + g + "|" + N;
            if (v[C]) return;
            v[C] = !0;
            var A = e,
              R = "";
            if (
              ("#text" === e
                ? /\S/.test(n)
                  ? (A = "Text nodes")
                  : ((A = "Whitespace text nodes"),
                    (R =
                      " Make sure you don't have any extra whitespace between tags on each line of your source code."))
                : (A = "<" + e + ">"),
              c)
            ) {
              var P = "";
              "table" === g &&
                "tr" === e &&
                (P +=
                  " Add a <tbody> to your code to match the DOM tree generated by the browser."),
                "production" !== t.env.NODE_ENV &&
                  o(
                    !1,
                    "validateDOMNesting(...): %s cannot appear as a child of <%s>.%s See %s.%s",
                    A,
                    g,
                    R,
                    N,
                    P
                  );
            } else
              "production" !== t.env.NODE_ENV &&
                o(
                  !1,
                  "validateDOMNesting(...): %s cannot appear as a descendant of <%s>. See %s.",
                  A,
                  g,
                  N
                );
          }
        }),
          (a.updatedAncestorInfo = p),
          (a.isTagValidInContext = function (e, t) {
            t = t || h;
            var n = t.current,
              r = n && n.tag;
            return d(e, r) && !f(e, t);
          });
      }
      e.exports = a;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t,
        n = e.keyCode;
      return (
        "charCode" in e
          ? 0 === (t = e.charCode) && 13 === n && (t = 13)
          : (t = n),
        t >= 32 || 13 === t ? t : 0
      );
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t, n) {
        (this.props = e),
          (this.context = t),
          (this.refs = l),
          (this.updater = n || c);
      }
      function i(e, t, n) {
        (this.props = e),
          (this.context = t),
          (this.refs = l),
          (this.updater = n || c);
      }
      function o() {}
      var a = n(19),
        s = n(26),
        c = n(53),
        u = n(27),
        l = n(54),
        h = n(13),
        p = n(35);
      if (
        ((r.prototype.isReactComponent = {}),
        (r.prototype.setState = function (e, n) {
          "object" != typeof e &&
            "function" != typeof e &&
            null != e &&
            ("production" !== t.env.NODE_ENV
              ? h(
                  !1,
                  "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
                )
              : a("85")),
            this.updater.enqueueSetState(this, e),
            n && this.updater.enqueueCallback(this, n, "setState");
        }),
        (r.prototype.forceUpdate = function (e) {
          this.updater.enqueueForceUpdate(this),
            e && this.updater.enqueueCallback(this, e, "forceUpdate");
        }),
        "production" !== t.env.NODE_ENV)
      ) {
        var d = {
          isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.",
          ],
          replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).",
          ],
        };
        for (var f in d)
          d.hasOwnProperty(f) &&
            (function (e, t) {
              u &&
                Object.defineProperty(r.prototype, e, {
                  get: function () {
                    p(
                      !1,
                      "%s(...) is deprecated in plain JavaScript React classes. %s",
                      t[0],
                      t[1]
                    );
                  },
                });
            })(f, d[f]);
      }
      (o.prototype = r.prototype),
        (i.prototype = new o()),
        (i.prototype.constructor = i),
        s(i.prototype, r.prototype),
        (i.prototype.isPureReactComponent = !0),
        (e.exports = { Component: r, PureComponent: i });
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n) {
        if ("production" !== t.env.NODE_ENV) {
          var r = e.constructor;
          "production" !== t.env.NODE_ENV &&
            i(
              !1,
              "%s(...): Can only update a mounted or mounting component. This usually means you called %s() on an unmounted component. This is a no-op. Please check the code for the %s component.",
              n,
              n,
              (r && (r.displayName || r.name)) || "ReactClass"
            );
        }
      }
      var i = n(12),
        o = {
          isMounted: function (e) {
            return !1;
          },
          enqueueCallback: function (e, t) {},
          enqueueForceUpdate: function (e) {
            r(e, "forceUpdate");
          },
          enqueueReplaceState: function (e, t) {
            r(e, "replaceState");
          },
          enqueueSetState: function (e, t) {
            r(e, "setState");
          },
        };
      e.exports = o;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var n = {};
      "production" !== t.env.NODE_ENV && Object.freeze(n), (e.exports = n);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r =
      ("function" == typeof Symbol &&
        Symbol.for &&
        Symbol.for("react.element")) ||
      60103;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = e && ((i && e[i]) || e[o]);
      if ("function" == typeof t) return t;
    }
    var i = "function" == typeof Symbol && Symbol.iterator,
      o = "@@iterator";
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r() {
        if (u.current) {
          var e = u.current.getName();
          if (e) return " Check the render method of `" + e + "`.";
        }
        return "";
      }
      function i(e) {
        if (null !== e && void 0 !== e && void 0 !== e.__source) {
          var t = e.__source;
          return (
            " Check your code at " +
            t.fileName.replace(/^.*[\\\/]/, "") +
            ":" +
            t.lineNumber +
            "."
          );
        }
        return "";
      }
      function o(e) {
        var t = r();
        if (!t) {
          var n = "string" == typeof e ? e : e.displayName || e.name;
          n && (t = " Check the top-level render call using <" + n + ">.");
        }
        return t;
      }
      function a(e, n) {
        if (e._store && !e._store.validated && null == e.key) {
          e._store.validated = !0;
          var r = g.uniqueKey || (g.uniqueKey = {}),
            i = o(n);
          if (!r[i]) {
            r[i] = !0;
            var a = "";
            e &&
              e._owner &&
              e._owner !== u.current &&
              (a = " It was passed a child from " + e._owner.getName() + "."),
              "production" !== t.env.NODE_ENV &&
                m(
                  !1,
                  'Each child in an array or iterator should have a unique "key" prop.%s%s See https://fb.me/react-warning-keys for more information.%s',
                  i,
                  a,
                  l.getCurrentStackAddendum(e)
                );
          }
        }
      }
      function s(e, t) {
        if ("object" == typeof e)
          if (Array.isArray(e))
            for (var n = 0; n < e.length; n++) {
              var r = e[n];
              h.isValidElement(r) && a(r, t);
            }
          else if (h.isValidElement(e)) e._store && (e._store.validated = !0);
          else if (e) {
            var i = f(e);
            if (i && i !== e.entries)
              for (var o, s = i.call(e); !(o = s.next()).done; )
                h.isValidElement(o.value) && a(o.value, t);
          }
      }
      function c(e) {
        var n = e.type;
        if ("function" == typeof n) {
          var r = n.displayName || n.name;
          n.propTypes && p(n.propTypes, e.props, "prop", r, e, null),
            "function" == typeof n.getDefaultProps &&
              "production" !== t.env.NODE_ENV &&
              m(
                n.getDefaultProps.isReactClassApproved,
                "getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead."
              );
        }
      }
      var u = n(9),
        l = n(7),
        h = n(16),
        p = n(93),
        d = n(27),
        f = n(56),
        m = n(12),
        v = n(35),
        g = {},
        y = {
          createElement: function (e, n, o) {
            var a = "string" == typeof e || "function" == typeof e;
            if (!a && "function" != typeof e && "string" != typeof e) {
              var u = "";
              (void 0 === e ||
                ("object" == typeof e &&
                  null !== e &&
                  0 === Object.keys(e).length)) &&
                (u +=
                  " You likely forgot to export your component from the file it's defined in.");
              var p = i(n);
              (u += p || r()), (u += l.getCurrentStackAddendum());
              var d =
                null !== n && void 0 !== n && void 0 !== n.__source
                  ? n.__source
                  : null;
              l.pushNonStandardWarningStack(!0, d),
                "production" !== t.env.NODE_ENV &&
                  m(
                    !1,
                    "React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",
                    null == e ? e : typeof e,
                    u
                  ),
                l.popNonStandardWarningStack();
            }
            var f = h.createElement.apply(this, arguments);
            if (null == f) return f;
            if (a)
              for (var v = 2; v < arguments.length; v++) s(arguments[v], e);
            return c(f), f;
          },
          createFactory: function (e) {
            var n = y.createElement.bind(null, e);
            return (
              (n.type = e),
              "production" !== t.env.NODE_ENV &&
                d &&
                Object.defineProperty(n, "type", {
                  enumerable: !1,
                  get: function () {
                    return (
                      v(
                        !1,
                        "Factory.type is deprecated. Access the class directly before passing it to createFactory."
                      ),
                      Object.defineProperty(this, "type", { value: e }),
                      e
                    );
                  },
                }),
              n
            );
          },
          cloneElement: function (e, t, n) {
            for (
              var r = h.cloneElement.apply(this, arguments), i = 2;
              i < arguments.length;
              i++
            )
              s(arguments[i], r.type);
            return c(r), r;
          },
        };
      e.exports = y;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  },
  function (e, t, n) {
    "use strict";
    var r = { hasCachedChildNodes: 1 };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n) {
        return (
          null == n &&
            ("production" !== t.env.NODE_ENV
              ? o(
                  !1,
                  "accumulateInto(...): Accumulated items must not be null or undefined."
                )
              : i("30")),
          null == e
            ? n
            : Array.isArray(e)
            ? Array.isArray(n)
              ? (e.push.apply(e, n), e)
              : (e.push(n), e)
            : Array.isArray(n)
            ? [e].concat(n)
            : [e, n]
        );
      }
      var i = n(3),
        o = n(1);
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n) {
      Array.isArray(e) ? e.forEach(t, n) : e && t.call(n, e);
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r() {
      return (
        !o &&
          i.canUseDOM &&
          (o =
            "textContent" in document.documentElement
              ? "textContent"
              : "innerText"),
        o
      );
    }
    var i = n(6),
      o = null;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      var i = n(3),
        o = n(17),
        a = n(1),
        s = (function () {
          function e(t) {
            r(this, e),
              (this._callbacks = null),
              (this._contexts = null),
              (this._arg = t);
          }
          return (
            (e.prototype.enqueue = function (e, t) {
              (this._callbacks = this._callbacks || []),
                this._callbacks.push(e),
                (this._contexts = this._contexts || []),
                this._contexts.push(t);
            }),
            (e.prototype.notifyAll = function () {
              var e = this._callbacks,
                n = this._contexts,
                r = this._arg;
              if (e && n) {
                e.length !== n.length &&
                  ("production" !== t.env.NODE_ENV
                    ? a(!1, "Mismatched list of contexts in callback queue")
                    : i("24")),
                  (this._callbacks = null),
                  (this._contexts = null);
                for (var o = 0; o < e.length; o++) e[o].call(n[o], r);
                (e.length = 0), (n.length = 0);
              }
            }),
            (e.prototype.checkpoint = function () {
              return this._callbacks ? this._callbacks.length : 0;
            }),
            (e.prototype.rollback = function (e) {
              this._callbacks &&
                this._contexts &&
                ((this._callbacks.length = e), (this._contexts.length = e));
            }),
            (e.prototype.reset = function () {
              (this._callbacks = null), (this._contexts = null);
            }),
            (e.prototype.destructor = function () {
              this.reset();
            }),
            e
          );
        })();
      e.exports = o.addPoolingTo(s);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = { logTopLevelRenders: !1 };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = e.type,
        n = e.nodeName;
      return (
        n && "input" === n.toLowerCase() && ("checkbox" === t || "radio" === t)
      );
    }
    function i(e) {
      return e._wrapperState.valueTracker;
    }
    function o(e, t) {
      e._wrapperState.valueTracker = t;
    }
    function a(e) {
      delete e._wrapperState.valueTracker;
    }
    function s(e) {
      var t;
      return e && (t = r(e) ? "" + e.checked : e.value), t;
    }
    var c = n(4),
      u = {
        _getTrackerFromNode: function (e) {
          return i(c.getInstanceFromNode(e));
        },
        track: function (e) {
          if (!i(e)) {
            var t = c.getNodeFromInstance(e),
              n = r(t) ? "checked" : "value",
              s = Object.getOwnPropertyDescriptor(t.constructor.prototype, n),
              u = "" + t[n];
            t.hasOwnProperty(n) ||
              "function" != typeof s.get ||
              "function" != typeof s.set ||
              (Object.defineProperty(t, n, {
                enumerable: s.enumerable,
                configurable: !0,
                get: function () {
                  return s.get.call(this);
                },
                set: function (e) {
                  (u = "" + e), s.set.call(this, e);
                },
              }),
              o(e, {
                getValue: function () {
                  return u;
                },
                setValue: function (e) {
                  u = "" + e;
                },
                stopTracking: function () {
                  a(e), delete t[n];
                },
              }));
          }
        },
        updateValueIfChanged: function (e) {
          if (!e) return !1;
          var t = i(e);
          if (!t) return u.track(e), !0;
          var n = t.getValue(),
            r = s(c.getNodeFromInstance(e));
          return r !== n && (t.setValue(r), !0);
        },
        stopTracking: function (e) {
          var t = i(e);
          t && t.stopTracking();
        },
      };
    e.exports = u;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = e && e.nodeName && e.nodeName.toLowerCase();
      return "input" === t ? !!i[e.type] : "textarea" === t;
    }
    var i = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0,
    };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r = {
      currentScrollLeft: 0,
      currentScrollTop: 0,
      refreshScrollValues: function (e) {
        (r.currentScrollLeft = e.x), (r.currentScrollTop = e.y);
      },
    };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r = n(6),
      i = n(32),
      o = n(31),
      a = function (e, t) {
        if (t) {
          var n = e.firstChild;
          if (n && n === e.lastChild && 3 === n.nodeType)
            return void (n.nodeValue = t);
        }
        e.textContent = t;
      };
    r.canUseDOM &&
      ("textContent" in document.documentElement ||
        (a = function (e, t) {
          if (3 === e.nodeType) return void (e.nodeValue = t);
          o(e, i(t));
        })),
      (e.exports = a);
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      try {
        e.focus();
      } catch (e) {}
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e, t) {
      return e + t.charAt(0).toUpperCase() + t.substring(1);
    }
    var i = {
        animationIterationCount: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0,
      },
      o = ["Webkit", "ms", "Moz", "O"];
    Object.keys(i).forEach(function (e) {
      o.forEach(function (t) {
        i[r(t, e)] = i[e];
      });
    });
    var a = {
        background: {
          backgroundAttachment: !0,
          backgroundColor: !0,
          backgroundImage: !0,
          backgroundPositionX: !0,
          backgroundPositionY: !0,
          backgroundRepeat: !0,
        },
        backgroundPosition: {
          backgroundPositionX: !0,
          backgroundPositionY: !0,
        },
        border: { borderWidth: !0, borderStyle: !0, borderColor: !0 },
        borderBottom: {
          borderBottomWidth: !0,
          borderBottomStyle: !0,
          borderBottomColor: !0,
        },
        borderLeft: {
          borderLeftWidth: !0,
          borderLeftStyle: !0,
          borderLeftColor: !0,
        },
        borderRight: {
          borderRightWidth: !0,
          borderRightStyle: !0,
          borderRightColor: !0,
        },
        borderTop: {
          borderTopWidth: !0,
          borderTopStyle: !0,
          borderTopColor: !0,
        },
        font: {
          fontStyle: !0,
          fontVariant: !0,
          fontWeight: !0,
          fontSize: !0,
          lineHeight: !0,
          fontFamily: !0,
        },
        outline: { outlineWidth: !0, outlineStyle: !0, outlineColor: !0 },
      },
      s = { isUnitlessNumber: i, shorthandPropertyExpansions: a };
    e.exports = s;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return (
          !!p.hasOwnProperty(e) ||
          (!h.hasOwnProperty(e) &&
            (l.test(e)
              ? ((p[e] = !0), !0)
              : ((h[e] = !0),
                "production" !== t.env.NODE_ENV &&
                  u(!1, "Invalid attribute name: `%s`", e),
                !1)))
        );
      }
      function i(e, t) {
        return (
          null == t ||
          (e.hasBooleanValue && !t) ||
          (e.hasNumericValue && isNaN(t)) ||
          (e.hasPositiveNumericValue && t < 1) ||
          (e.hasOverloadedBooleanValue && !1 === t)
        );
      }
      var o = n(15),
        a = n(4),
        s = n(8),
        c = n(138),
        u = n(2),
        l = new RegExp(
          "^[" +
            o.ATTRIBUTE_NAME_START_CHAR +
            "][" +
            o.ATTRIBUTE_NAME_CHAR +
            "]*$"
        ),
        h = {},
        p = {},
        d = {
          createMarkupForID: function (e) {
            return o.ID_ATTRIBUTE_NAME + "=" + c(e);
          },
          setAttributeForID: function (e, t) {
            e.setAttribute(o.ID_ATTRIBUTE_NAME, t);
          },
          createMarkupForRoot: function () {
            return o.ROOT_ATTRIBUTE_NAME + '=""';
          },
          setAttributeForRoot: function (e) {
            e.setAttribute(o.ROOT_ATTRIBUTE_NAME, "");
          },
          createMarkupForProperty: function (e, t) {
            var n = o.properties.hasOwnProperty(e) ? o.properties[e] : null;
            if (n) {
              if (i(n, t)) return "";
              var r = n.attributeName;
              return n.hasBooleanValue ||
                (n.hasOverloadedBooleanValue && !0 === t)
                ? r + '=""'
                : r + "=" + c(t);
            }
            return o.isCustomAttribute(e)
              ? null == t
                ? ""
                : e + "=" + c(t)
              : null;
          },
          createMarkupForCustomAttribute: function (e, t) {
            return r(e) && null != t ? e + "=" + c(t) : "";
          },
          setValueForProperty: function (e, n, r) {
            var c = o.properties.hasOwnProperty(n) ? o.properties[n] : null;
            if (c) {
              var u = c.mutationMethod;
              if (u) u(e, r);
              else {
                if (i(c, r)) return void this.deleteValueForProperty(e, n);
                if (c.mustUseProperty) e[c.propertyName] = r;
                else {
                  var l = c.attributeName,
                    h = c.attributeNamespace;
                  h
                    ? e.setAttributeNS(h, l, "" + r)
                    : c.hasBooleanValue ||
                      (c.hasOverloadedBooleanValue && !0 === r)
                    ? e.setAttribute(l, "")
                    : e.setAttribute(l, "" + r);
                }
              }
            } else if (o.isCustomAttribute(n))
              return void d.setValueForAttribute(e, n, r);
            if ("production" !== t.env.NODE_ENV) {
              var p = {};
              (p[n] = r),
                s.debugTool.onHostOperation({
                  instanceID: a.getInstanceFromNode(e)._debugID,
                  type: "update attribute",
                  payload: p,
                });
            }
          },
          setValueForAttribute: function (e, n, i) {
            if (
              r(n) &&
              (null == i ? e.removeAttribute(n) : e.setAttribute(n, "" + i),
              "production" !== t.env.NODE_ENV)
            ) {
              var o = {};
              (o[n] = i),
                s.debugTool.onHostOperation({
                  instanceID: a.getInstanceFromNode(e)._debugID,
                  type: "update attribute",
                  payload: o,
                });
            }
          },
          deleteValueForAttribute: function (e, n) {
            e.removeAttribute(n),
              "production" !== t.env.NODE_ENV &&
                s.debugTool.onHostOperation({
                  instanceID: a.getInstanceFromNode(e)._debugID,
                  type: "remove attribute",
                  payload: n,
                });
          },
          deleteValueForProperty: function (e, n) {
            var r = o.properties.hasOwnProperty(n) ? o.properties[n] : null;
            if (r) {
              var i = r.mutationMethod;
              if (i) i(e, void 0);
              else if (r.mustUseProperty) {
                var c = r.propertyName;
                r.hasBooleanValue ? (e[c] = !1) : (e[c] = "");
              } else e.removeAttribute(r.attributeName);
            } else o.isCustomAttribute(n) && e.removeAttribute(n);
            "production" !== t.env.NODE_ENV &&
              s.debugTool.onHostOperation({
                instanceID: a.getInstanceFromNode(e)._debugID,
                type: "remove attribute",
                payload: n,
              });
          },
        };
      e.exports = d;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  },
  function (e, t, n) {
    "use strict";
    e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r() {
        if (this._rootNodeID && this._wrapperState.pendingUpdate) {
          this._wrapperState.pendingUpdate = !1;
          var e = this._currentElement.props,
            t = u.getValue(e);
          null != t && a(this, Boolean(e.multiple), t);
        }
      }
      function i(e) {
        if (e) {
          var t = e.getName();
          if (t) return " Check the render method of `" + t + "`.";
        }
        return "";
      }
      function o(e, n) {
        var r = e._currentElement._owner;
        u.checkPropTypes("select", n, r),
          void 0 === n.valueLink ||
            d ||
            ("production" !== t.env.NODE_ENV &&
              p(
                !1,
                "`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead."
              ),
            (d = !0));
        for (var o = 0; o < m.length; o++) {
          var a = m[o];
          if (null != n[a]) {
            var s = Array.isArray(n[a]);
            n.multiple && !s
              ? "production" !== t.env.NODE_ENV &&
                p(
                  !1,
                  "The `%s` prop supplied to <select> must be an array if `multiple` is true.%s",
                  a,
                  i(r)
                )
              : !n.multiple &&
                s &&
                "production" !== t.env.NODE_ENV &&
                p(
                  !1,
                  "The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s",
                  a,
                  i(r)
                );
          }
        }
      }
      function a(e, t, n) {
        var r,
          i,
          o = l.getNodeFromInstance(e).options;
        if (t) {
          for (r = {}, i = 0; i < n.length; i++) r["" + n[i]] = !0;
          for (i = 0; i < o.length; i++) {
            var a = r.hasOwnProperty(o[i].value);
            o[i].selected !== a && (o[i].selected = a);
          }
        } else {
          for (r = "" + n, i = 0; i < o.length; i++)
            if (o[i].value === r) return void (o[i].selected = !0);
          o.length && (o[0].selected = !0);
        }
      }
      function s(e) {
        var t = this._currentElement.props,
          n = u.executeOnChange(t, e);
        return (
          this._rootNodeID && (this._wrapperState.pendingUpdate = !0),
          h.asap(r, this),
          n
        );
      }
      var c = n(5),
        u = n(44),
        l = n(4),
        h = n(11),
        p = n(2),
        d = !1,
        f = !1,
        m = ["value", "defaultValue"],
        v = {
          getHostProps: function (e, t) {
            return c({}, t, {
              onChange: e._wrapperState.onChange,
              value: void 0,
            });
          },
          mountWrapper: function (e, n) {
            "production" !== t.env.NODE_ENV && o(e, n);
            var r = u.getValue(n);
            (e._wrapperState = {
              pendingUpdate: !1,
              initialValue: null != r ? r : n.defaultValue,
              listeners: null,
              onChange: s.bind(e),
              wasMultiple: Boolean(n.multiple),
            }),
              void 0 === n.value ||
                void 0 === n.defaultValue ||
                f ||
                ("production" !== t.env.NODE_ENV &&
                  p(
                    !1,
                    "Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://fb.me/react-controlled-components"
                  ),
                (f = !0));
          },
          getSelectValueContext: function (e) {
            return e._wrapperState.initialValue;
          },
          postUpdateWrapper: function (e) {
            var t = e._currentElement.props;
            e._wrapperState.initialValue = void 0;
            var n = e._wrapperState.wasMultiple;
            e._wrapperState.wasMultiple = Boolean(t.multiple);
            var r = u.getValue(t);
            null != r
              ? ((e._wrapperState.pendingUpdate = !1),
                a(e, Boolean(t.multiple), r))
              : n !== Boolean(t.multiple) &&
                (null != t.defaultValue
                  ? a(e, Boolean(t.multiple), t.defaultValue)
                  : a(e, Boolean(t.multiple), t.multiple ? [] : ""));
          },
        };
      e.exports = v;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        if (e) {
          var t = e.getName();
          if (t) return " Check the render method of `" + t + "`.";
        }
        return "";
      }
      function i(e) {
        return (
          "function" == typeof e &&
          void 0 !== e.prototype &&
          "function" == typeof e.prototype.mountComponent &&
          "function" == typeof e.prototype.receiveComponent
        );
      }
      function o(e, n) {
        var s;
        if (null === e || !1 === e) s = u.create(o);
        else if ("object" == typeof e) {
          var c = e,
            m = c.type;
          if ("function" != typeof m && "string" != typeof m) {
            var v = "";
            "production" !== t.env.NODE_ENV &&
              (void 0 === m ||
                ("object" == typeof m &&
                  null !== m &&
                  0 === Object.keys(m).length)) &&
              (v +=
                " You likely forgot to export your component from the file it's defined in."),
              (v += r(c._owner)),
              "production" !== t.env.NODE_ENV
                ? p(
                    !1,
                    "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",
                    null == m ? m : typeof m,
                    v
                  )
                : a("130", null == m ? m : typeof m, v);
          }
          "string" == typeof c.type
            ? (s = l.createInternalComponent(c))
            : i(c.type)
            ? ((s = new c.type(c)),
              s.getHostNode || (s.getHostNode = s.getNativeNode))
            : (s = new f(c));
        } else
          "string" == typeof e || "number" == typeof e
            ? (s = l.createInstanceForText(e))
            : "production" !== t.env.NODE_ENV
            ? p(!1, "Encountered invalid React node of type %s", typeof e)
            : a("131", typeof e);
        return (
          "production" !== t.env.NODE_ENV &&
            "production" !== t.env.NODE_ENV &&
            d(
              "function" == typeof s.mountComponent &&
                "function" == typeof s.receiveComponent &&
                "function" == typeof s.getHostNode &&
                "function" == typeof s.unmountComponent,
              "Only React Components can be mounted."
            ),
          (s._mountIndex = 0),
          (s._mountImage = null),
          "production" !== t.env.NODE_ENV && (s._debugID = n ? h() : 0),
          "production" !== t.env.NODE_ENV &&
            Object.preventExtensions &&
            Object.preventExtensions(s),
          s
        );
      }
      var a = n(3),
        s = n(5),
        c = n(149),
        u = n(78),
        l = n(79),
        h = n(152),
        p = n(1),
        d = n(2),
        f = function (e) {
          this.construct(e);
        };
      s(f.prototype, c, { _instantiateReactComponent: o }), (e.exports = o);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(3),
        i = n(18),
        o = n(1),
        a = {
          HOST: 0,
          COMPOSITE: 1,
          EMPTY: 2,
          getType: function (e) {
            return null === e || !1 === e
              ? a.EMPTY
              : i.isValidElement(e)
              ? "function" == typeof e.type
                ? a.COMPOSITE
                : a.HOST
              : void ("production" !== t.env.NODE_ENV
                  ? o(!1, "Unexpected node: %s", e)
                  : r("26", e));
          },
        };
      e.exports = a;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var n = {};
      "production" !== t.env.NODE_ENV && Object.freeze(n), (e.exports = n);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r,
      i = {
        injectEmptyComponentFactory: function (e) {
          r = e;
        },
      },
      o = {
        create: function (e) {
          return r(e);
        },
      };
    (o.injection = i), (e.exports = o);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return (
          c ||
            ("production" !== t.env.NODE_ENV
              ? s(!1, "There is no registered component for the tag %s", e.type)
              : a("111", e.type)),
          new c(e)
        );
      }
      function i(e) {
        return new u(e);
      }
      function o(e) {
        return e instanceof u;
      }
      var a = n(3),
        s = n(1),
        c = null,
        u = null,
        l = {
          injectGenericComponentClass: function (e) {
            c = e;
          },
          injectTextComponentClass: function (e) {
            u = e;
          },
        },
        h = {
          createInternalComponent: r,
          createInstanceForText: i,
          isTextComponent: o,
          injection: l,
        };
      e.exports = h;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        return e && "object" == typeof e && null != e.key
          ? h.escape(e.key)
          : t.toString(36);
      }
      function i(e, n, o, v) {
        var g = typeof e;
        if (
          (("undefined" !== g && "boolean" !== g) || (e = null),
          null === e ||
            "string" === g ||
            "number" === g ||
            ("object" === g && e.$$typeof === c))
        )
          return o(v, e, "" === n ? d + r(e, 0) : n), 1;
        var y,
          _,
          b = 0,
          x = "" === n ? d : n + f;
        if (Array.isArray(e))
          for (var E = 0; E < e.length; E++)
            (y = e[E]), (_ = x + r(y, E)), (b += i(y, _, o, v));
        else {
          var w = u(e);
          if (w) {
            var M,
              T = w.call(e);
            if (w !== e.entries)
              for (var S = 0; !(M = T.next()).done; )
                (y = M.value), (_ = x + r(y, S++)), (b += i(y, _, o, v));
            else {
              if ("production" !== t.env.NODE_ENV) {
                var N = "";
                if (s.current) {
                  var C = s.current.getName();
                  C && (N = " Check the render method of `" + C + "`.");
                }
                "production" !== t.env.NODE_ENV &&
                  p(
                    m,
                    "Using Maps as children is not yet fully supported. It is an experimental feature that might be removed. Convert it to a sequence / iterable of keyed ReactElements instead.%s",
                    N
                  ),
                  (m = !0);
              }
              for (; !(M = T.next()).done; ) {
                var A = M.value;
                A &&
                  ((y = A[1]),
                  (_ = x + h.escape(A[0]) + f + r(y, 0)),
                  (b += i(y, _, o, v)));
              }
            }
          } else if ("object" === g) {
            var R = "";
            if (
              "production" !== t.env.NODE_ENV &&
              ((R =
                " If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons."),
              e._isReactElement &&
                (R =
                  " It looks like you're using an element created by a different version of React. Make sure to use only one copy of React."),
              s.current)
            ) {
              var P = s.current.getName();
              P && (R += " Check the render method of `" + P + "`.");
            }
            var O = String(e);
            "production" !== t.env.NODE_ENV
              ? l(
                  !1,
                  "Objects are not valid as a React child (found: %s).%s",
                  "[object Object]" === O
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : O,
                  R
                )
              : a(
                  "31",
                  "[object Object]" === O
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : O,
                  R
                );
          }
        }
        return b;
      }
      function o(e, t, n) {
        return null == e ? 0 : i(e, "", t, n);
      }
      var a = n(3),
        s = n(9),
        c = n(153),
        u = n(154),
        l = n(1),
        h = n(48),
        p = n(2),
        d = ".",
        f = ":",
        m = !1;
      e.exports = o;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(10),
        i = {
          listen: function (e, t, n) {
            return e.addEventListener
              ? (e.addEventListener(t, n, !1),
                {
                  remove: function () {
                    e.removeEventListener(t, n, !1);
                  },
                })
              : e.attachEvent
              ? (e.attachEvent("on" + t, n),
                {
                  remove: function () {
                    e.detachEvent("on" + t, n);
                  },
                })
              : void 0;
          },
          capture: function (e, n, i) {
            return e.addEventListener
              ? (e.addEventListener(n, i, !0),
                {
                  remove: function () {
                    e.removeEventListener(n, i, !0);
                  },
                })
              : ("production" !== t.env.NODE_ENV &&
                  console.error(
                    "Attempted to listen to events during the capture phase on a browser that does not support the capture phase. Your application will not receive some events."
                  ),
                { remove: r });
          },
          registerDefault: function () {},
        };
      e.exports = i;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return o(document.documentElement, e);
    }
    var i = n(166),
      o = n(168),
      a = n(69),
      s = n(83),
      c = {
        hasSelectionCapabilities: function (e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return (
            t &&
            (("input" === t && "text" === e.type) ||
              "textarea" === t ||
              "true" === e.contentEditable)
          );
        },
        getSelectionInformation: function () {
          var e = s();
          return {
            focusedElem: e,
            selectionRange: c.hasSelectionCapabilities(e)
              ? c.getSelection(e)
              : null,
          };
        },
        restoreSelection: function (e) {
          var t = s(),
            n = e.focusedElem,
            i = e.selectionRange;
          t !== n &&
            r(n) &&
            (c.hasSelectionCapabilities(n) && c.setSelection(n, i), a(n));
        },
        getSelection: function (e) {
          var t;
          if ("selectionStart" in e)
            t = { start: e.selectionStart, end: e.selectionEnd };
          else if (
            document.selection &&
            e.nodeName &&
            "input" === e.nodeName.toLowerCase()
          ) {
            var n = document.selection.createRange();
            n.parentElement() === e &&
              (t = {
                start: -n.moveStart("character", -e.value.length),
                end: -n.moveEnd("character", -e.value.length),
              });
          } else t = i.getOffsets(e);
          return t || { start: 0, end: 0 };
        },
        setSelection: function (e, t) {
          var n = t.start,
            r = t.end;
          if ((void 0 === r && (r = n), "selectionStart" in e))
            (e.selectionStart = n),
              (e.selectionEnd = Math.min(r, e.value.length));
          else if (
            document.selection &&
            e.nodeName &&
            "input" === e.nodeName.toLowerCase()
          ) {
            var o = e.createTextRange();
            o.collapse(!0),
              o.moveStart("character", n),
              o.moveEnd("character", r - n),
              o.select();
          } else i.setOffsets(e, t);
        },
      };
    e.exports = c;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      if (
        void 0 ===
        (e = e || ("undefined" != typeof document ? document : void 0))
      )
        return null;
      try {
        return e.activeElement || e.body;
      } catch (t) {
        return e.body;
      }
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        for (var n = Math.min(e.length, t.length), r = 0; r < n; r++)
          if (e.charAt(r) !== t.charAt(r)) return r;
        return e.length === t.length ? -1 : n;
      }
      function i(e) {
        return e ? (e.nodeType === B ? e.documentElement : e.firstChild) : null;
      }
      function o(e) {
        return (e.getAttribute && e.getAttribute(k)) || "";
      }
      function a(e, t, n, r, i) {
        var o;
        if (M.logTopLevelRenders) {
          var a = e._currentElement.props.child,
            s = a.type;
          (o =
            "React mount: " +
            ("string" == typeof s ? s : s.displayName || s.name)),
            console.time(o);
        }
        var c = C.mountComponent(e, n, null, E(e, t), i, 0);
        o && console.timeEnd(o),
          (e._renderedComponent._topLevelWrapper = e),
          W._mountImageIntoNode(c, t, e, r, n);
      }
      function s(e, t, n, r) {
        var i = R.ReactReconcileTransaction.getPooled(!n && w.useCreateElement);
        i.perform(a, null, e, t, i, n, r),
          R.ReactReconcileTransaction.release(i);
      }
      function c(e, n, r) {
        for (
          "production" !== t.env.NODE_ENV && S.debugTool.onBeginFlush(),
            C.unmountComponent(e, r),
            "production" !== t.env.NODE_ENV && S.debugTool.onEndFlush(),
            n.nodeType === B && (n = n.documentElement);
          n.lastChild;

        )
          n.removeChild(n.lastChild);
      }
      function u(e) {
        var t = i(e);
        if (t) {
          var n = x.getInstanceFromNode(t);
          return !(!n || !n._hostParent);
        }
      }
      function l(e) {
        var t = i(e);
        return !(!t || !p(t) || x.getInstanceFromNode(t));
      }
      function h(e) {
        return !(
          !e ||
          (e.nodeType !== V && e.nodeType !== B && e.nodeType !== z)
        );
      }
      function p(e) {
        return h(e) && (e.hasAttribute(F) || e.hasAttribute(k));
      }
      function d(e) {
        var t = i(e),
          n = t && x.getInstanceFromNode(t);
        return n && !n._hostParent ? n : null;
      }
      function f(e) {
        var t = d(e);
        return t ? t._hostContainerInfo._topLevelWrapper : null;
      }
      var m = n(3),
        v = n(21),
        g = n(15),
        y = n(18),
        _ = n(33),
        b = n(9),
        x = n(4),
        E = n(183),
        w = n(184),
        M = n(64),
        T = n(25),
        S = n(8),
        N = n(185),
        C = n(20),
        A = n(49),
        R = n(11),
        P = n(77),
        O = n(75),
        D = n(1),
        L = n(31),
        I = n(47),
        U = n(2),
        k = g.ID_ATTRIBUTE_NAME,
        F = g.ROOT_ATTRIBUTE_NAME,
        V = 1,
        B = 9,
        z = 11,
        H = {},
        j = 1,
        G = function () {
          this.rootID = j++;
        };
      (G.prototype.isReactComponent = {}),
        "production" !== t.env.NODE_ENV && (G.displayName = "TopLevelWrapper"),
        (G.prototype.render = function () {
          return this.props.child;
        }),
        (G.isReactTopLevelWrapper = !0);
      var W = {
        TopLevelWrapper: G,
        _instancesByReactRootID: H,
        scrollMonitor: function (e, t) {
          t();
        },
        _updateRootComponent: function (e, t, n, r, i) {
          return (
            W.scrollMonitor(r, function () {
              A.enqueueElementInternal(e, t, n),
                i && A.enqueueCallbackInternal(e, i);
            }),
            e
          );
        },
        _renderNewRootComponent: function (e, n, r, i) {
          "production" !== t.env.NODE_ENV &&
            U(
              null == b.current,
              "_renderNewRootComponent(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. Check the render method of %s.",
              (b.current && b.current.getName()) || "ReactCompositeComponent"
            ),
            h(n) ||
              ("production" !== t.env.NODE_ENV
                ? D(
                    !1,
                    "_registerComponent(...): Target container is not a DOM element."
                  )
                : m("37")),
            _.ensureScrollValueMonitoring();
          var o = O(e, !1);
          R.batchedUpdates(s, o, n, r, i);
          var a = o._instance.rootID;
          return (H[a] = o), o;
        },
        renderSubtreeIntoContainer: function (e, n, r, i) {
          return (
            (null != e && T.has(e)) ||
              ("production" !== t.env.NODE_ENV
                ? D(!1, "parentComponent must be a valid React Component")
                : m("38")),
            W._renderSubtreeIntoContainer(e, n, r, i)
          );
        },
        _renderSubtreeIntoContainer: function (e, n, r, a) {
          A.validateCallback(a, "ReactDOM.render"),
            y.isValidElement(n) ||
              ("production" !== t.env.NODE_ENV
                ? D(
                    !1,
                    "ReactDOM.render(): Invalid component element.%s",
                    "string" == typeof n
                      ? " Instead of passing a string like 'div', pass React.createElement('div') or <div />."
                      : "function" == typeof n
                      ? " Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />."
                      : null != n && void 0 !== n.props
                      ? " This may be caused by unintentionally loading two independent copies of React."
                      : ""
                  )
                : m(
                    "39",
                    "string" == typeof n
                      ? " Instead of passing a string like 'div', pass React.createElement('div') or <div />."
                      : "function" == typeof n
                      ? " Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />."
                      : null != n && void 0 !== n.props
                      ? " This may be caused by unintentionally loading two independent copies of React."
                      : ""
                  )),
            "production" !== t.env.NODE_ENV &&
              U(
                !r || !r.tagName || "BODY" !== r.tagName.toUpperCase(),
                "render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app."
              );
          var s,
            c = y.createElement(G, { child: n });
          if (e) {
            var l = T.get(e);
            s = l._processChildContext(l._context);
          } else s = P;
          var h = f(r);
          if (h) {
            var p = h._currentElement,
              d = p.props.child;
            if (I(d, n)) {
              var v = h._renderedComponent.getPublicInstance(),
                g =
                  a &&
                  function () {
                    a.call(v);
                  };
              return W._updateRootComponent(h, c, s, r, g), v;
            }
            W.unmountComponentAtNode(r);
          }
          var _ = i(r),
            b = _ && !!o(_),
            x = u(r);
          if (
            "production" !== t.env.NODE_ENV &&
            ("production" !== t.env.NODE_ENV &&
              U(
                !x,
                "render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."
              ),
            !b || _.nextSibling)
          )
            for (var E = _; E; ) {
              if (o(E)) {
                "production" !== t.env.NODE_ENV &&
                  U(
                    !1,
                    "render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup."
                  );
                break;
              }
              E = E.nextSibling;
            }
          var w = b && !h && !x,
            M = W._renderNewRootComponent(
              c,
              r,
              w,
              s
            )._renderedComponent.getPublicInstance();
          return a && a.call(M), M;
        },
        render: function (e, t, n) {
          return W._renderSubtreeIntoContainer(null, e, t, n);
        },
        unmountComponentAtNode: function (e) {
          "production" !== t.env.NODE_ENV &&
            U(
              null == b.current,
              "unmountComponentAtNode(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. Check the render method of %s.",
              (b.current && b.current.getName()) || "ReactCompositeComponent"
            ),
            h(e) ||
              ("production" !== t.env.NODE_ENV
                ? D(
                    !1,
                    "unmountComponentAtNode(...): Target container is not a DOM element."
                  )
                : m("40")),
            "production" !== t.env.NODE_ENV &&
              "production" !== t.env.NODE_ENV &&
              U(
                !l(e),
                "unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React."
              );
          var n = f(e);
          if (!n) {
            var r = u(e),
              i = 1 === e.nodeType && e.hasAttribute(F);
            return (
              "production" !== t.env.NODE_ENV &&
                "production" !== t.env.NODE_ENV &&
                U(
                  !r,
                  "unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s",
                  i
                    ? "You may have accidentally passed in a React root node instead of its container."
                    : "Instead, have the parent component update its state and rerender in order to remove this component."
                ),
              !1
            );
          }
          return (
            delete H[n._instance.rootID], R.batchedUpdates(c, n, e, !1), !0
          );
        },
        _mountImageIntoNode: function (e, n, o, a, s) {
          if (
            (h(n) ||
              ("production" !== t.env.NODE_ENV
                ? D(
                    !1,
                    "mountComponentIntoNode(...): Target container is not valid."
                  )
                : m("41")),
            a)
          ) {
            var c = i(n);
            if (N.canReuseMarkup(e, c)) return void x.precacheNode(o, c);
            var u = c.getAttribute(N.CHECKSUM_ATTR_NAME);
            c.removeAttribute(N.CHECKSUM_ATTR_NAME);
            var l = c.outerHTML;
            c.setAttribute(N.CHECKSUM_ATTR_NAME, u);
            var p = e;
            if ("production" !== t.env.NODE_ENV) {
              var d;
              n.nodeType === V
                ? ((d = document.createElement("div")),
                  (d.innerHTML = e),
                  (p = d.innerHTML))
                : ((d = document.createElement("iframe")),
                  document.body.appendChild(d),
                  d.contentDocument.write(e),
                  (p = d.contentDocument.documentElement.outerHTML),
                  document.body.removeChild(d));
            }
            var f = r(p, l),
              g =
                " (client) " +
                p.substring(f - 20, f + 20) +
                "\n (server) " +
                l.substring(f - 20, f + 20);
            n.nodeType === B &&
              ("production" !== t.env.NODE_ENV
                ? D(
                    !1,
                    "You're trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s",
                    g
                  )
                : m("42", g)),
              "production" !== t.env.NODE_ENV &&
                "production" !== t.env.NODE_ENV &&
                U(
                  !1,
                  "React attempted to reuse markup in a container but the checksum was invalid. This generally means that you are using server rendering and the markup generated on the server was not what the client was expecting. React injected new markup to compensate which works but you have lost many of the benefits of server rendering. Instead, figure out why the markup being generated is different on the client or server:\n%s",
                  g
                );
          }
          if (
            (n.nodeType === B &&
              ("production" !== t.env.NODE_ENV
                ? D(
                    !1,
                    "You're trying to render a component to the document but you didn't use server rendering. We can't do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering."
                  )
                : m("43")),
            s.useCreateElement)
          ) {
            for (; n.lastChild; ) n.removeChild(n.lastChild);
            v.insertTreeBefore(n, e, null);
          } else L(n, e), x.precacheNode(o, n.firstChild);
          if ("production" !== t.env.NODE_ENV) {
            var y = x.getInstanceFromNode(n.firstChild);
            0 !== y._debugID &&
              S.debugTool.onHostOperation({
                instanceID: y._debugID,
                type: "mount",
                payload: e.toString(),
              });
          }
        },
      };
      e.exports = W;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      for (var t; (t = e._renderedNodeType) === i.COMPOSITE; )
        e = e._renderedComponent;
      return t === i.HOST
        ? e._renderedComponent
        : t === i.EMPTY
        ? null
        : void 0;
    }
    var i = n(76);
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var i = n(87),
      o = r(i),
      a = n(104),
      s = n(193),
      c = r(s);
    (0, a.render)(
      o.default.createElement(c.default, null),
      document.getElementById("main")
    );
  },
  function (e, t, n) {
    "use strict";
    e.exports = n(18);
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return ("" + e).replace(b, "$&/");
    }
    function i(e, t) {
      (this.func = e), (this.context = t), (this.count = 0);
    }
    function o(e, t, n) {
      var r = e.func,
        i = e.context;
      r.call(i, t, e.count++);
    }
    function a(e, t, n) {
      if (null == e) return e;
      var r = i.getPooled(t, n);
      g(e, o, r), i.release(r);
    }
    function s(e, t, n, r) {
      (this.result = e),
        (this.keyPrefix = t),
        (this.func = n),
        (this.context = r),
        (this.count = 0);
    }
    function c(e, t, n) {
      var i = e.result,
        o = e.keyPrefix,
        a = e.func,
        s = e.context,
        c = a.call(s, t, e.count++);
      Array.isArray(c)
        ? u(c, i, n, v.thatReturnsArgument)
        : null != c &&
          (m.isValidElement(c) &&
            (c = m.cloneAndReplaceKey(
              c,
              o + (!c.key || (t && t.key === c.key) ? "" : r(c.key) + "/") + n
            )),
          i.push(c));
    }
    function u(e, t, n, i, o) {
      var a = "";
      null != n && (a = r(n) + "/");
      var u = s.getPooled(t, a, i, o);
      g(e, c, u), s.release(u);
    }
    function l(e, t, n) {
      if (null == e) return e;
      var r = [];
      return u(e, r, null, t, n), r;
    }
    function h(e, t, n) {
      return null;
    }
    function p(e, t) {
      return g(e, h, null);
    }
    function d(e) {
      var t = [];
      return u(e, t, null, v.thatReturnsArgument), t;
    }
    var f = n(89),
      m = n(16),
      v = n(34),
      g = n(90),
      y = f.twoArgumentPooler,
      _ = f.fourArgumentPooler,
      b = /\/+/g;
    (i.prototype.destructor = function () {
      (this.func = null), (this.context = null), (this.count = 0);
    }),
      f.addPoolingTo(i, y),
      (s.prototype.destructor = function () {
        (this.result = null),
          (this.keyPrefix = null),
          (this.func = null),
          (this.context = null),
          (this.count = 0);
      }),
      f.addPoolingTo(s, _);
    var x = {
      forEach: a,
      map: l,
      mapIntoWithKeyPrefixInternal: u,
      count: p,
      toArray: d,
    };
    e.exports = x;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(19),
        i = n(13),
        o = function (e) {
          var t = this;
          if (t.instancePool.length) {
            var n = t.instancePool.pop();
            return t.call(n, e), n;
          }
          return new t(e);
        },
        a = function (e, t) {
          var n = this;
          if (n.instancePool.length) {
            var r = n.instancePool.pop();
            return n.call(r, e, t), r;
          }
          return new n(e, t);
        },
        s = function (e, t, n) {
          var r = this;
          if (r.instancePool.length) {
            var i = r.instancePool.pop();
            return r.call(i, e, t, n), i;
          }
          return new r(e, t, n);
        },
        c = function (e, t, n, r) {
          var i = this;
          if (i.instancePool.length) {
            var o = i.instancePool.pop();
            return i.call(o, e, t, n, r), o;
          }
          return new i(e, t, n, r);
        },
        u = function (e) {
          var n = this;
          e instanceof n ||
            ("production" !== t.env.NODE_ENV
              ? i(
                  !1,
                  "Trying to release an instance into a pool of a different type."
                )
              : r("25")),
            e.destructor(),
            n.instancePool.length < n.poolSize && n.instancePool.push(e);
        },
        l = o,
        h = function (e, t) {
          var n = e;
          return (
            (n.instancePool = []),
            (n.getPooled = t || l),
            n.poolSize || (n.poolSize = 10),
            (n.release = u),
            n
          );
        },
        p = {
          addPoolingTo: h,
          oneArgumentPooler: o,
          twoArgumentPooler: a,
          threeArgumentPooler: s,
          fourArgumentPooler: c,
        };
      e.exports = p;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        return e && "object" == typeof e && null != e.key
          ? h.escape(e.key)
          : t.toString(36);
      }
      function i(e, n, o, v) {
        var g = typeof e;
        if (
          (("undefined" !== g && "boolean" !== g) || (e = null),
          null === e ||
            "string" === g ||
            "number" === g ||
            ("object" === g && e.$$typeof === c))
        )
          return o(v, e, "" === n ? d + r(e, 0) : n), 1;
        var y,
          _,
          b = 0,
          x = "" === n ? d : n + f;
        if (Array.isArray(e))
          for (var E = 0; E < e.length; E++)
            (y = e[E]), (_ = x + r(y, E)), (b += i(y, _, o, v));
        else {
          var w = u(e);
          if (w) {
            var M,
              T = w.call(e);
            if (w !== e.entries)
              for (var S = 0; !(M = T.next()).done; )
                (y = M.value), (_ = x + r(y, S++)), (b += i(y, _, o, v));
            else {
              if ("production" !== t.env.NODE_ENV) {
                var N = "";
                if (s.current) {
                  var C = s.current.getName();
                  C && (N = " Check the render method of `" + C + "`.");
                }
                "production" !== t.env.NODE_ENV &&
                  p(
                    m,
                    "Using Maps as children is not yet fully supported. It is an experimental feature that might be removed. Convert it to a sequence / iterable of keyed ReactElements instead.%s",
                    N
                  ),
                  (m = !0);
              }
              for (; !(M = T.next()).done; ) {
                var A = M.value;
                A &&
                  ((y = A[1]),
                  (_ = x + h.escape(A[0]) + f + r(y, 0)),
                  (b += i(y, _, o, v)));
              }
            }
          } else if ("object" === g) {
            var R = "";
            if (
              "production" !== t.env.NODE_ENV &&
              ((R =
                " If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons."),
              e._isReactElement &&
                (R =
                  " It looks like you're using an element created by a different version of React. Make sure to use only one copy of React."),
              s.current)
            ) {
              var P = s.current.getName();
              P && (R += " Check the render method of `" + P + "`.");
            }
            var O = String(e);
            "production" !== t.env.NODE_ENV
              ? l(
                  !1,
                  "Objects are not valid as a React child (found: %s).%s",
                  "[object Object]" === O
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : O,
                  R
                )
              : a(
                  "31",
                  "[object Object]" === O
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : O,
                  R
                );
          }
        }
        return b;
      }
      function o(e, t, n) {
        return null == e ? 0 : i(e, "", t, n);
      }
      var a = n(19),
        s = n(9),
        c = n(55),
        u = n(56),
        l = n(13),
        h = n(91),
        p = n(12),
        d = ".",
        f = ":",
        m = !1;
      e.exports = o;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = { "=": "=0", ":": "=2" };
      return (
        "$" +
        ("" + e).replace(/[=:]/g, function (e) {
          return t[e];
        })
      );
    }
    function i(e) {
      var t = /(=0|=2)/g,
        n = { "=0": "=", "=2": ":" };
      return (
        "" + ("." === e[0] && "$" === e[1] ? e.substring(2) : e.substring(1))
      ).replace(t, function (e) {
        return n[e];
      });
    }
    var o = { escape: r, unescape: i };
    e.exports = o;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(16),
        i = r.createFactory;
      if ("production" !== t.env.NODE_ENV) {
        i = n(57).createFactory;
      }
      var o = {
        a: i("a"),
        abbr: i("abbr"),
        address: i("address"),
        area: i("area"),
        article: i("article"),
        aside: i("aside"),
        audio: i("audio"),
        b: i("b"),
        base: i("base"),
        bdi: i("bdi"),
        bdo: i("bdo"),
        big: i("big"),
        blockquote: i("blockquote"),
        body: i("body"),
        br: i("br"),
        button: i("button"),
        canvas: i("canvas"),
        caption: i("caption"),
        cite: i("cite"),
        code: i("code"),
        col: i("col"),
        colgroup: i("colgroup"),
        data: i("data"),
        datalist: i("datalist"),
        dd: i("dd"),
        del: i("del"),
        details: i("details"),
        dfn: i("dfn"),
        dialog: i("dialog"),
        div: i("div"),
        dl: i("dl"),
        dt: i("dt"),
        em: i("em"),
        embed: i("embed"),
        fieldset: i("fieldset"),
        figcaption: i("figcaption"),
        figure: i("figure"),
        footer: i("footer"),
        form: i("form"),
        h1: i("h1"),
        h2: i("h2"),
        h3: i("h3"),
        h4: i("h4"),
        h5: i("h5"),
        h6: i("h6"),
        head: i("head"),
        header: i("header"),
        hgroup: i("hgroup"),
        hr: i("hr"),
        html: i("html"),
        i: i("i"),
        iframe: i("iframe"),
        img: i("img"),
        input: i("input"),
        ins: i("ins"),
        kbd: i("kbd"),
        keygen: i("keygen"),
        label: i("label"),
        legend: i("legend"),
        li: i("li"),
        link: i("link"),
        main: i("main"),
        map: i("map"),
        mark: i("mark"),
        menu: i("menu"),
        menuitem: i("menuitem"),
        meta: i("meta"),
        meter: i("meter"),
        nav: i("nav"),
        noscript: i("noscript"),
        object: i("object"),
        ol: i("ol"),
        optgroup: i("optgroup"),
        option: i("option"),
        output: i("output"),
        p: i("p"),
        param: i("param"),
        picture: i("picture"),
        pre: i("pre"),
        progress: i("progress"),
        q: i("q"),
        rp: i("rp"),
        rt: i("rt"),
        ruby: i("ruby"),
        s: i("s"),
        samp: i("samp"),
        script: i("script"),
        section: i("section"),
        select: i("select"),
        small: i("small"),
        source: i("source"),
        span: i("span"),
        strong: i("strong"),
        style: i("style"),
        sub: i("sub"),
        summary: i("summary"),
        sup: i("sup"),
        table: i("table"),
        tbody: i("tbody"),
        td: i("td"),
        textarea: i("textarea"),
        tfoot: i("tfoot"),
        th: i("th"),
        thead: i("thead"),
        time: i("time"),
        title: i("title"),
        tr: i("tr"),
        track: i("track"),
        u: i("u"),
        ul: i("ul"),
        var: i("var"),
        video: i("video"),
        wbr: i("wbr"),
        circle: i("circle"),
        clipPath: i("clipPath"),
        defs: i("defs"),
        ellipse: i("ellipse"),
        g: i("g"),
        image: i("image"),
        line: i("line"),
        linearGradient: i("linearGradient"),
        mask: i("mask"),
        path: i("path"),
        pattern: i("pattern"),
        polygon: i("polygon"),
        polyline: i("polyline"),
        radialGradient: i("radialGradient"),
        rect: i("rect"),
        stop: i("stop"),
        svg: i("svg"),
        text: i("text"),
        tspan: i("tspan"),
      };
      e.exports = o;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, r, h, p, d, f) {
        for (var m in e)
          if (e.hasOwnProperty(m)) {
            var v;
            try {
              "function" != typeof e[m] &&
                ("production" !== t.env.NODE_ENV
                  ? c(
                      !1,
                      "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
                      p || "React class",
                      a[h],
                      m
                    )
                  : o("84", p || "React class", a[h], m)),
                (v = e[m](r, m, p, h, null, s));
            } catch (e) {
              v = e;
            }
            if (
              ("production" !== t.env.NODE_ENV &&
                u(
                  !v || v instanceof Error,
                  "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",
                  p || "React class",
                  a[h],
                  m,
                  typeof v
                ),
              v instanceof Error && !(v.message in l))
            ) {
              l[v.message] = !0;
              var g = "";
              "production" !== t.env.NODE_ENV &&
                (i || (i = n(7)),
                null !== f
                  ? (g = i.getStackAddendumByID(f))
                  : null !== d && (g = i.getCurrentStackAddendum(d))),
                "production" !== t.env.NODE_ENV &&
                  u(!1, "Failed %s type: %s%s", h, v.message, g);
            }
          }
      }
      var i,
        o = n(19),
        a = n(94),
        s = n(95),
        c = n(13),
        u = n(12);
      void 0 !== t && t.env && "test" === t.env.NODE_ENV && (i = n(7));
      var l = {};
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var n = {};
      "production" !== t.env.NODE_ENV &&
        (n = {
          prop: "prop",
          context: "context",
          childContext: "child context",
        }),
        (e.exports = n);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  },
  function (e, t, n) {
    "use strict";
    var r = n(16),
      i = r.isValidElement,
      o = n(97);
    e.exports = o(i);
  },
  function (e, t, n) {
    "use strict";
    var r = n(98);
    e.exports = function (e) {
      return r(e, !1);
    };
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(34),
        i = n(13),
        o = n(12),
        a = n(58),
        s = n(99);
      e.exports = function (e, n) {
        function c(e) {
          var t = e && ((T && e[T]) || e[S]);
          if ("function" == typeof t) return t;
        }
        function u(e, t) {
          return e === t ? 0 !== e || 1 / e == 1 / t : e !== e && t !== t;
        }
        function l(e) {
          (this.message = e), (this.stack = "");
        }
        function h(e) {
          function r(r, u, h, p, d, f, m) {
            if (((p = p || N), (f = f || h), m !== a))
              if (n)
                i(
                  !1,
                  "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
                );
              else if (
                "production" !== t.env.NODE_ENV &&
                "undefined" != typeof console
              ) {
                var v = p + ":" + h;
                !s[v] &&
                  c < 3 &&
                  (o(
                    !1,
                    "You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.",
                    f,
                    p
                  ),
                  (s[v] = !0),
                  c++);
              }
            return null == u[h]
              ? r
                ? new l(
                    null === u[h]
                      ? "The " +
                        d +
                        " `" +
                        f +
                        "` is marked as required in `" +
                        p +
                        "`, but its value is `null`."
                      : "The " +
                        d +
                        " `" +
                        f +
                        "` is marked as required in `" +
                        p +
                        "`, but its value is `undefined`."
                  )
                : null
              : e(u, h, p, d, f);
          }
          if ("production" !== t.env.NODE_ENV)
            var s = {},
              c = 0;
          var u = r.bind(null, !1);
          return (u.isRequired = r.bind(null, !0)), u;
        }
        function p(e) {
          function t(t, n, r, i, o, a) {
            var s = t[n];
            if (x(s) !== e)
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  E(s) +
                  "` supplied to `" +
                  r +
                  "`, expected `" +
                  e +
                  "`."
              );
            return null;
          }
          return h(t);
        }
        function d(e) {
          function t(t, n, r, i, o) {
            if ("function" != typeof e)
              return new l(
                "Property `" +
                  o +
                  "` of component `" +
                  r +
                  "` has invalid PropType notation inside arrayOf."
              );
            var s = t[n];
            if (!Array.isArray(s)) {
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  x(s) +
                  "` supplied to `" +
                  r +
                  "`, expected an array."
              );
            }
            for (var c = 0; c < s.length; c++) {
              var u = e(s, c, r, i, o + "[" + c + "]", a);
              if (u instanceof Error) return u;
            }
            return null;
          }
          return h(t);
        }
        function f(e) {
          function t(t, n, r, i, o) {
            if (!(t[n] instanceof e)) {
              var a = e.name || N;
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  M(t[n]) +
                  "` supplied to `" +
                  r +
                  "`, expected instance of `" +
                  a +
                  "`."
              );
            }
            return null;
          }
          return h(t);
        }
        function m(e) {
          function n(t, n, r, i, o) {
            for (var a = t[n], s = 0; s < e.length; s++)
              if (u(a, e[s])) return null;
            return new l(
              "Invalid " +
                i +
                " `" +
                o +
                "` of value `" +
                a +
                "` supplied to `" +
                r +
                "`, expected one of " +
                JSON.stringify(e) +
                "."
            );
          }
          return Array.isArray(e)
            ? h(n)
            : ("production" !== t.env.NODE_ENV &&
                o(
                  !1,
                  "Invalid argument supplied to oneOf, expected an instance of array."
                ),
              r.thatReturnsNull);
        }
        function v(e) {
          function t(t, n, r, i, o) {
            if ("function" != typeof e)
              return new l(
                "Property `" +
                  o +
                  "` of component `" +
                  r +
                  "` has invalid PropType notation inside objectOf."
              );
            var s = t[n],
              c = x(s);
            if ("object" !== c)
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  c +
                  "` supplied to `" +
                  r +
                  "`, expected an object."
              );
            for (var u in s)
              if (s.hasOwnProperty(u)) {
                var h = e(s, u, r, i, o + "." + u, a);
                if (h instanceof Error) return h;
              }
            return null;
          }
          return h(t);
        }
        function g(e) {
          function n(t, n, r, i, o) {
            for (var s = 0; s < e.length; s++) {
              if (null == (0, e[s])(t, n, r, i, o, a)) return null;
            }
            return new l(
              "Invalid " + i + " `" + o + "` supplied to `" + r + "`."
            );
          }
          if (!Array.isArray(e))
            return (
              "production" !== t.env.NODE_ENV &&
                o(
                  !1,
                  "Invalid argument supplied to oneOfType, expected an instance of array."
                ),
              r.thatReturnsNull
            );
          for (var i = 0; i < e.length; i++) {
            var s = e[i];
            if ("function" != typeof s)
              return (
                o(
                  !1,
                  "Invalid argument supplid to oneOfType. Expected an array of check functions, but received %s at index %s.",
                  w(s),
                  i
                ),
                r.thatReturnsNull
              );
          }
          return h(n);
        }
        function y(e) {
          function t(t, n, r, i, o) {
            var s = t[n],
              c = x(s);
            if ("object" !== c)
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  c +
                  "` supplied to `" +
                  r +
                  "`, expected `object`."
              );
            for (var u in e) {
              var h = e[u];
              if (h) {
                var p = h(s, u, r, i, o + "." + u, a);
                if (p) return p;
              }
            }
            return null;
          }
          return h(t);
        }
        function _(t) {
          switch (typeof t) {
            case "number":
            case "string":
            case "undefined":
              return !0;
            case "boolean":
              return !t;
            case "object":
              if (Array.isArray(t)) return t.every(_);
              if (null === t || e(t)) return !0;
              var n = c(t);
              if (!n) return !1;
              var r,
                i = n.call(t);
              if (n !== t.entries) {
                for (; !(r = i.next()).done; ) if (!_(r.value)) return !1;
              } else
                for (; !(r = i.next()).done; ) {
                  var o = r.value;
                  if (o && !_(o[1])) return !1;
                }
              return !0;
            default:
              return !1;
          }
        }
        function b(e, t) {
          return (
            "symbol" === e ||
            "Symbol" === t["@@toStringTag"] ||
            ("function" == typeof Symbol && t instanceof Symbol)
          );
        }
        function x(e) {
          var t = typeof e;
          return Array.isArray(e)
            ? "array"
            : e instanceof RegExp
            ? "object"
            : b(t, e)
            ? "symbol"
            : t;
        }
        function E(e) {
          if (void 0 === e || null === e) return "" + e;
          var t = x(e);
          if ("object" === t) {
            if (e instanceof Date) return "date";
            if (e instanceof RegExp) return "regexp";
          }
          return t;
        }
        function w(e) {
          var t = E(e);
          switch (t) {
            case "array":
            case "object":
              return "an " + t;
            case "boolean":
            case "date":
            case "regexp":
              return "a " + t;
            default:
              return t;
          }
        }
        function M(e) {
          return e.constructor && e.constructor.name ? e.constructor.name : N;
        }
        var T = "function" == typeof Symbol && Symbol.iterator,
          S = "@@iterator",
          N = "<<anonymous>>",
          C = {
            array: p("array"),
            bool: p("boolean"),
            func: p("function"),
            number: p("number"),
            object: p("object"),
            string: p("string"),
            symbol: p("symbol"),
            any: (function () {
              return h(r.thatReturnsNull);
            })(),
            arrayOf: d,
            element: (function () {
              function t(t, n, r, i, o) {
                var a = t[n];
                if (!e(a)) {
                  return new l(
                    "Invalid " +
                      i +
                      " `" +
                      o +
                      "` of type `" +
                      x(a) +
                      "` supplied to `" +
                      r +
                      "`, expected a single ReactElement."
                  );
                }
                return null;
              }
              return h(t);
            })(),
            instanceOf: f,
            node: (function () {
              function e(e, t, n, r, i) {
                return _(e[t])
                  ? null
                  : new l(
                      "Invalid " +
                        r +
                        " `" +
                        i +
                        "` supplied to `" +
                        n +
                        "`, expected a ReactNode."
                    );
              }
              return h(e);
            })(),
            objectOf: v,
            oneOf: m,
            oneOfType: g,
            shape: y,
          };
        return (
          (l.prototype = Error.prototype),
          (C.checkPropTypes = s),
          (C.PropTypes = C),
          C
        );
      };
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n, r, c, u) {
        if ("production" !== t.env.NODE_ENV)
          for (var l in e)
            if (e.hasOwnProperty(l)) {
              var h;
              try {
                i(
                  "function" == typeof e[l],
                  "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
                  c || "React class",
                  r,
                  l
                ),
                  (h = e[l](n, l, c, r, null, a));
              } catch (e) {
                h = e;
              }
              if (
                (o(
                  !h || h instanceof Error,
                  "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",
                  c || "React class",
                  r,
                  l,
                  typeof h
                ),
                h instanceof Error && !(h.message in s))
              ) {
                s[h.message] = !0;
                var p = u ? u() : "";
                o(!1, "Failed %s type: %s%s", r, h.message, null != p ? p : "");
              }
            }
      }
      if ("production" !== t.env.NODE_ENV)
        var i = n(13),
          o = n(12),
          a = n(58),
          s = {};
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = "15.6.1";
  },
  function (e, t, n) {
    "use strict";
    var r = n(52),
      i = r.Component,
      o = n(16),
      a = o.isValidElement,
      s = n(53),
      c = n(102);
    e.exports = c(i, a, s);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return e;
      }
      function i(e, n, i) {
        function h(e, n, r) {
          for (var i in n)
            n.hasOwnProperty(i) &&
              "production" !== t.env.NODE_ENV &&
              c(
                "function" == typeof n[i],
                "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
                e.displayName || "ReactClass",
                u[r],
                i
              );
        }
        function p(e, t) {
          var n = E.hasOwnProperty(t) ? E[t] : null;
          S.hasOwnProperty(t) &&
            s(
              "OVERRIDE_BASE" === n,
              "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",
              t
            ),
            e &&
              s(
                "DEFINE_MANY" === n || "DEFINE_MANY_MERGED" === n,
                "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",
                t
              );
        }
        function d(e, r) {
          if (r) {
            s(
              "function" != typeof r,
              "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."
            ),
              s(
                !n(r),
                "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object."
              );
            var i = e.prototype,
              o = i.__reactAutoBindPairs;
            r.hasOwnProperty(l) && w.mixins(e, r.mixins);
            for (var a in r)
              if (r.hasOwnProperty(a) && a !== l) {
                var u = r[a],
                  h = i.hasOwnProperty(a);
                if ((p(h, a), w.hasOwnProperty(a))) w[a](e, u);
                else {
                  var d = E.hasOwnProperty(a),
                    f = "function" == typeof u,
                    m = f && !d && !h && !1 !== r.autobind;
                  if (m) o.push(a, u), (i[a] = u);
                  else if (h) {
                    var y = E[a];
                    s(
                      d && ("DEFINE_MANY_MERGED" === y || "DEFINE_MANY" === y),
                      "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",
                      y,
                      a
                    ),
                      "DEFINE_MANY_MERGED" === y
                        ? (i[a] = v(i[a], u))
                        : "DEFINE_MANY" === y && (i[a] = g(i[a], u));
                  } else
                    (i[a] = u),
                      "production" !== t.env.NODE_ENV &&
                        "function" == typeof u &&
                        r.displayName &&
                        (i[a].displayName = r.displayName + "_" + a);
                }
              }
          } else if ("production" !== t.env.NODE_ENV) {
            var _ = typeof r,
              b = "object" === _ && null !== r;
            "production" !== t.env.NODE_ENV &&
              c(
                b,
                "%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.",
                e.displayName || "ReactClass",
                null === r ? null : _
              );
          }
        }
        function f(e, t) {
          if (t)
            for (var n in t) {
              var r = t[n];
              if (t.hasOwnProperty(n)) {
                var i = n in w;
                s(
                  !i,
                  'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',
                  n
                );
                var o = n in e;
                s(
                  !o,
                  "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",
                  n
                ),
                  (e[n] = r);
              }
            }
        }
        function m(e, t) {
          s(
            e && t && "object" == typeof e && "object" == typeof t,
            "mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects."
          );
          for (var n in t)
            t.hasOwnProperty(n) &&
              (s(
                void 0 === e[n],
                "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",
                n
              ),
              (e[n] = t[n]));
          return e;
        }
        function v(e, t) {
          return function () {
            var n = e.apply(this, arguments),
              r = t.apply(this, arguments);
            if (null == n) return r;
            if (null == r) return n;
            var i = {};
            return m(i, n), m(i, r), i;
          };
        }
        function g(e, t) {
          return function () {
            e.apply(this, arguments), t.apply(this, arguments);
          };
        }
        function y(e, n) {
          var r = n.bind(e);
          if ("production" !== t.env.NODE_ENV) {
            (r.__reactBoundContext = e),
              (r.__reactBoundMethod = n),
              (r.__reactBoundArguments = null);
            var i = e.constructor.displayName,
              o = r.bind;
            r.bind = function (a) {
              for (
                var s = arguments.length, u = Array(s > 1 ? s - 1 : 0), l = 1;
                l < s;
                l++
              )
                u[l - 1] = arguments[l];
              if (a !== e && null !== a)
                "production" !== t.env.NODE_ENV &&
                  c(
                    !1,
                    "bind(): React component methods may only be bound to the component instance. See %s",
                    i
                  );
              else if (!u.length)
                return (
                  "production" !== t.env.NODE_ENV &&
                    c(
                      !1,
                      "bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s",
                      i
                    ),
                  r
                );
              var h = o.apply(r, arguments);
              return (
                (h.__reactBoundContext = e),
                (h.__reactBoundMethod = n),
                (h.__reactBoundArguments = u),
                h
              );
            };
          }
          return r;
        }
        function _(e) {
          for (var t = e.__reactAutoBindPairs, n = 0; n < t.length; n += 2) {
            var r = t[n],
              i = t[n + 1];
            e[r] = y(e, i);
          }
        }
        function b(e) {
          var n = r(function (e, r, o) {
            "production" !== t.env.NODE_ENV &&
              c(
                this instanceof n,
                "Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory"
              ),
              this.__reactAutoBindPairs.length && _(this),
              (this.props = e),
              (this.context = r),
              (this.refs = a),
              (this.updater = o || i),
              (this.state = null);
            var u = this.getInitialState ? this.getInitialState() : null;
            "production" !== t.env.NODE_ENV &&
              void 0 === u &&
              this.getInitialState._isMockFunction &&
              (u = null),
              s(
                "object" == typeof u && !Array.isArray(u),
                "%s.getInitialState(): must return an object or null",
                n.displayName || "ReactCompositeComponent"
              ),
              (this.state = u);
          });
          (n.prototype = new N()),
            (n.prototype.constructor = n),
            (n.prototype.__reactAutoBindPairs = []),
            x.forEach(d.bind(null, n)),
            d(n, M),
            d(n, e),
            d(n, T),
            n.getDefaultProps && (n.defaultProps = n.getDefaultProps()),
            "production" !== t.env.NODE_ENV &&
              (n.getDefaultProps &&
                (n.getDefaultProps.isReactClassApproved = {}),
              n.prototype.getInitialState &&
                (n.prototype.getInitialState.isReactClassApproved = {})),
            s(
              n.prototype.render,
              "createClass(...): Class specification must implement a `render` method."
            ),
            "production" !== t.env.NODE_ENV &&
              (c(
                !n.prototype.componentShouldUpdate,
                "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.",
                e.displayName || "A component"
              ),
              c(
                !n.prototype.componentWillRecieveProps,
                "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
                e.displayName || "A component"
              ));
          for (var o in E) n.prototype[o] || (n.prototype[o] = null);
          return n;
        }
        var x = [],
          E = {
            mixins: "DEFINE_MANY",
            statics: "DEFINE_MANY",
            propTypes: "DEFINE_MANY",
            contextTypes: "DEFINE_MANY",
            childContextTypes: "DEFINE_MANY",
            getDefaultProps: "DEFINE_MANY_MERGED",
            getInitialState: "DEFINE_MANY_MERGED",
            getChildContext: "DEFINE_MANY_MERGED",
            render: "DEFINE_ONCE",
            componentWillMount: "DEFINE_MANY",
            componentDidMount: "DEFINE_MANY",
            componentWillReceiveProps: "DEFINE_MANY",
            shouldComponentUpdate: "DEFINE_ONCE",
            componentWillUpdate: "DEFINE_MANY",
            componentDidUpdate: "DEFINE_MANY",
            componentWillUnmount: "DEFINE_MANY",
            updateComponent: "OVERRIDE_BASE",
          },
          w = {
            displayName: function (e, t) {
              e.displayName = t;
            },
            mixins: function (e, t) {
              if (t) for (var n = 0; n < t.length; n++) d(e, t[n]);
            },
            childContextTypes: function (e, n) {
              "production" !== t.env.NODE_ENV && h(e, n, "childContext"),
                (e.childContextTypes = o({}, e.childContextTypes, n));
            },
            contextTypes: function (e, n) {
              "production" !== t.env.NODE_ENV && h(e, n, "context"),
                (e.contextTypes = o({}, e.contextTypes, n));
            },
            getDefaultProps: function (e, t) {
              e.getDefaultProps
                ? (e.getDefaultProps = v(e.getDefaultProps, t))
                : (e.getDefaultProps = t);
            },
            propTypes: function (e, n) {
              "production" !== t.env.NODE_ENV && h(e, n, "prop"),
                (e.propTypes = o({}, e.propTypes, n));
            },
            statics: function (e, t) {
              f(e, t);
            },
            autobind: function () {},
          },
          M = {
            componentDidMount: function () {
              this.__isMounted = !0;
            },
          },
          T = {
            componentWillUnmount: function () {
              this.__isMounted = !1;
            },
          },
          S = {
            replaceState: function (e, t) {
              this.updater.enqueueReplaceState(this, e, t);
            },
            isMounted: function () {
              return (
                "production" !== t.env.NODE_ENV &&
                  (c(
                    this.__didWarnIsMounted,
                    "%s: isMounted is deprecated. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.",
                    (this.constructor && this.constructor.displayName) ||
                      this.name ||
                      "Component"
                  ),
                  (this.__didWarnIsMounted = !0)),
                !!this.__isMounted
              );
            },
          },
          N = function () {};
        return o(N.prototype, e.prototype, S), b;
      }
      var o = n(26),
        a = n(54),
        s = n(13);
      if ("production" !== t.env.NODE_ENV) var c = n(12);
      var u,
        l = "mixins";
      (u =
        "production" !== t.env.NODE_ENV
          ? { prop: "prop", context: "context", childContext: "child context" }
          : {}),
        (e.exports = i);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return (
          o.isValidElement(e) ||
            ("production" !== t.env.NODE_ENV
              ? a(
                  !1,
                  "React.Children.only expected to receive a single React element child."
                )
              : i("143")),
          e
        );
      }
      var i = n(19),
        o = n(16),
        a = n(13);
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    e.exports = n(105);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(4),
        i = n(106),
        o = n(84),
        a = n(20),
        s = n(11),
        c = n(187),
        u = n(188),
        l = n(85),
        h = n(189),
        p = n(2);
      i.inject();
      var d = {
        findDOMNode: u,
        render: o.render,
        unmountComponentAtNode: o.unmountComponentAtNode,
        version: c,
        unstable_batchedUpdates: s.batchedUpdates,
        unstable_renderSubtreeIntoContainer: h,
      };
      if (
        ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
          "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject &&
          __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
            ComponentTree: {
              getClosestInstanceFromNode: r.getClosestInstanceFromNode,
              getNodeFromInstance: function (e) {
                return (
                  e._renderedComponent && (e = l(e)),
                  e ? r.getNodeFromInstance(e) : null
                );
              },
            },
            Mount: o,
            Reconciler: a,
          }),
        "production" !== t.env.NODE_ENV)
      ) {
        if (n(6).canUseDOM && window.top === window.self) {
          if (
            "undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
            ((navigator.userAgent.indexOf("Chrome") > -1 &&
              -1 === navigator.userAgent.indexOf("Edge")) ||
              navigator.userAgent.indexOf("Firefox") > -1)
          ) {
            var f =
              -1 === window.location.protocol.indexOf("http") &&
              -1 === navigator.userAgent.indexOf("Firefox");
            console.debug(
              "Download the React DevTools " +
                (f ? "and use an HTTP server (instead of a file: URL) " : "") +
                "for a better development experience: https://fb.me/react-devtools"
            );
          }
          var m = function () {};
          "production" !== t.env.NODE_ENV &&
            p(
              -1 !== (m.name || m.toString()).indexOf("testFn"),
              "It looks like you're using a minified copy of the development build of React. When deploying React apps to production, make sure to use the production build which skips development warnings and is faster. See https://fb.me/react-minification for more details."
            );
          var v = document.documentMode && document.documentMode < 8;
          "production" !== t.env.NODE_ENV &&
            p(
              !v,
              'Internet Explorer is running in compatibility mode; please add the following tag to your HTML to prevent this from happening: <meta http-equiv="X-UA-Compatible" content="IE=edge" />'
            );
          for (
            var g = [
                Array.isArray,
                Array.prototype.every,
                Array.prototype.forEach,
                Array.prototype.indexOf,
                Array.prototype.map,
                Date.now,
                Function.prototype.bind,
                Object.keys,
                String.prototype.trim,
              ],
              y = 0;
            y < g.length;
            y++
          )
            if (!g[y]) {
              "production" !== t.env.NODE_ENV &&
                p(
                  !1,
                  "One or more ES5 shims expected by React are not available: https://fb.me/react-warning-polyfills"
                );
              break;
            }
        }
      }
      if ("production" !== t.env.NODE_ENV) {
        var _ = n(8),
          b = n(190),
          x = n(191),
          E = n(192);
        _.debugTool.addHook(b), _.debugTool.addHook(x), _.debugTool.addHook(E);
      }
      e.exports = d;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r() {
      w ||
        ((w = !0),
        y.EventEmitter.injectReactEventListener(g),
        y.EventPluginHub.injectEventPluginOrder(s),
        y.EventPluginUtils.injectComponentTree(p),
        y.EventPluginUtils.injectTreeTraversal(f),
        y.EventPluginHub.injectEventPluginsByName({
          SimpleEventPlugin: E,
          EnterLeaveEventPlugin: c,
          ChangeEventPlugin: a,
          SelectEventPlugin: x,
          BeforeInputEventPlugin: o,
        }),
        y.HostComponent.injectGenericComponentClass(h),
        y.HostComponent.injectTextComponentClass(m),
        y.DOMProperty.injectDOMPropertyConfig(i),
        y.DOMProperty.injectDOMPropertyConfig(u),
        y.DOMProperty.injectDOMPropertyConfig(b),
        y.EmptyComponent.injectEmptyComponentFactory(function (e) {
          return new d(e);
        }),
        y.Updates.injectReconcileTransaction(_),
        y.Updates.injectBatchingStrategy(v),
        y.Component.injectEnvironment(l));
    }
    var i = n(107),
      o = n(108),
      a = n(112),
      s = n(120),
      c = n(121),
      u = n(122),
      l = n(123),
      h = n(129),
      p = n(4),
      d = n(158),
      f = n(159),
      m = n(160),
      v = n(161),
      g = n(162),
      y = n(164),
      _ = n(165),
      b = n(171),
      x = n(172),
      E = n(173),
      w = !1;
    e.exports = { inject: r };
  },
  function (e, t, n) {
    "use strict";
    var r = {
      Properties: {
        "aria-current": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        "aria-hidden": 0,
        "aria-invalid": 0,
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0,
      },
      DOMAttributeNames: {},
      DOMPropertyNames: {},
    };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return (e.ctrlKey || e.altKey || e.metaKey) && !(e.ctrlKey && e.altKey);
    }
    function i(e) {
      switch (e) {
        case "topCompositionStart":
          return T.compositionStart;
        case "topCompositionEnd":
          return T.compositionEnd;
        case "topCompositionUpdate":
          return T.compositionUpdate;
      }
    }
    function o(e, t) {
      return "topKeyDown" === e && t.keyCode === y;
    }
    function a(e, t) {
      switch (e) {
        case "topKeyUp":
          return -1 !== g.indexOf(t.keyCode);
        case "topKeyDown":
          return t.keyCode !== y;
        case "topKeyPress":
        case "topMouseDown":
        case "topBlur":
          return !0;
        default:
          return !1;
      }
    }
    function s(e) {
      var t = e.detail;
      return "object" == typeof t && "data" in t ? t.data : null;
    }
    function c(e, t, n, r) {
      var c, u;
      if (
        (_
          ? (c = i(e))
          : N
          ? a(e, n) && (c = T.compositionEnd)
          : o(e, n) && (c = T.compositionStart),
        !c)
      )
        return null;
      E &&
        (N || c !== T.compositionStart
          ? c === T.compositionEnd && N && (u = N.getData())
          : (N = f.getPooled(r)));
      var l = m.getPooled(c, t, n, r);
      if (u) l.data = u;
      else {
        var h = s(n);
        null !== h && (l.data = h);
      }
      return p.accumulateTwoPhaseDispatches(l), l;
    }
    function u(e, t) {
      switch (e) {
        case "topCompositionEnd":
          return s(t);
        case "topKeyPress":
          return t.which !== w ? null : ((S = !0), M);
        case "topTextInput":
          var n = t.data;
          return n === M && S ? null : n;
        default:
          return null;
      }
    }
    function l(e, t) {
      if (N) {
        if ("topCompositionEnd" === e || (!_ && a(e, t))) {
          var n = N.getData();
          return f.release(N), (N = null), n;
        }
        return null;
      }
      switch (e) {
        case "topPaste":
          return null;
        case "topKeyPress":
          return t.which && !r(t) ? String.fromCharCode(t.which) : null;
        case "topCompositionEnd":
          return E ? null : t.data;
        default:
          return null;
      }
    }
    function h(e, t, n, r) {
      var i;
      if (!(i = x ? u(e, n) : l(e, n))) return null;
      var o = v.getPooled(T.beforeInput, t, n, r);
      return (o.data = i), p.accumulateTwoPhaseDispatches(o), o;
    }
    var p = n(22),
      d = n(6),
      f = n(109),
      m = n(110),
      v = n(111),
      g = [9, 13, 27, 32],
      y = 229,
      _ = d.canUseDOM && "CompositionEvent" in window,
      b = null;
    d.canUseDOM && "documentMode" in document && (b = document.documentMode);
    var x =
        d.canUseDOM &&
        "TextEvent" in window &&
        !b &&
        !(function () {
          var e = window.opera;
          return (
            "object" == typeof e &&
            "function" == typeof e.version &&
            parseInt(e.version(), 10) <= 12
          );
        })(),
      E = d.canUseDOM && (!_ || (b && b > 8 && b <= 11)),
      w = 32,
      M = String.fromCharCode(w),
      T = {
        beforeInput: {
          phasedRegistrationNames: {
            bubbled: "onBeforeInput",
            captured: "onBeforeInputCapture",
          },
          dependencies: [
            "topCompositionEnd",
            "topKeyPress",
            "topTextInput",
            "topPaste",
          ],
        },
        compositionEnd: {
          phasedRegistrationNames: {
            bubbled: "onCompositionEnd",
            captured: "onCompositionEndCapture",
          },
          dependencies: [
            "topBlur",
            "topCompositionEnd",
            "topKeyDown",
            "topKeyPress",
            "topKeyUp",
            "topMouseDown",
          ],
        },
        compositionStart: {
          phasedRegistrationNames: {
            bubbled: "onCompositionStart",
            captured: "onCompositionStartCapture",
          },
          dependencies: [
            "topBlur",
            "topCompositionStart",
            "topKeyDown",
            "topKeyPress",
            "topKeyUp",
            "topMouseDown",
          ],
        },
        compositionUpdate: {
          phasedRegistrationNames: {
            bubbled: "onCompositionUpdate",
            captured: "onCompositionUpdateCapture",
          },
          dependencies: [
            "topBlur",
            "topCompositionUpdate",
            "topKeyDown",
            "topKeyPress",
            "topKeyUp",
            "topMouseDown",
          ],
        },
      },
      S = !1,
      N = null,
      C = {
        eventTypes: T,
        extractEvents: function (e, t, n, r) {
          return [c(e, t, n, r), h(e, t, n, r)];
        },
      };
    e.exports = C;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      (this._root = e),
        (this._startText = this.getText()),
        (this._fallbackText = null);
    }
    var i = n(5),
      o = n(17),
      a = n(62);
    i(r.prototype, {
      destructor: function () {
        (this._root = null),
          (this._startText = null),
          (this._fallbackText = null);
      },
      getText: function () {
        return "value" in this._root ? this._root.value : this._root[a()];
      },
      getData: function () {
        if (this._fallbackText) return this._fallbackText;
        var e,
          t,
          n = this._startText,
          r = n.length,
          i = this.getText(),
          o = i.length;
        for (e = 0; e < r && n[e] === i[e]; e++);
        var a = r - e;
        for (t = 1; t <= a && n[r - t] === i[o - t]; t++);
        var s = t > 1 ? 1 - t : void 0;
        return (this._fallbackText = i.slice(e, s)), this._fallbackText;
      },
    }),
      o.addPoolingTo(r),
      (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(14),
      o = { data: null };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(14),
      o = { data: null };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n) {
      var r = S.getPooled(P.change, e, t, n);
      return (r.type = "change"), E.accumulateTwoPhaseDispatches(r), r;
    }
    function i(e) {
      var t = e.nodeName && e.nodeName.toLowerCase();
      return "select" === t || ("input" === t && "file" === e.type);
    }
    function o(e) {
      var t = r(D, e, C(e));
      T.batchedUpdates(a, t);
    }
    function a(e) {
      x.enqueueEvents(e), x.processEventQueue(!1);
    }
    function s(e, t) {
      (O = e), (D = t), O.attachEvent("onchange", o);
    }
    function c() {
      O && (O.detachEvent("onchange", o), (O = null), (D = null));
    }
    function u(e, t) {
      var n = N.updateValueIfChanged(e),
        r = !0 === t.simulated && U._allowSimulatedPassThrough;
      if (n || r) return e;
    }
    function l(e, t) {
      if ("topChange" === e) return t;
    }
    function h(e, t, n) {
      "topFocus" === e ? (c(), s(t, n)) : "topBlur" === e && c();
    }
    function p(e, t) {
      (O = e), (D = t), O.attachEvent("onpropertychange", f);
    }
    function d() {
      O && (O.detachEvent("onpropertychange", f), (O = null), (D = null));
    }
    function f(e) {
      "value" === e.propertyName && u(D, e) && o(e);
    }
    function m(e, t, n) {
      "topFocus" === e ? (d(), p(t, n)) : "topBlur" === e && d();
    }
    function v(e, t, n) {
      if ("topSelectionChange" === e || "topKeyUp" === e || "topKeyDown" === e)
        return u(D, n);
    }
    function g(e) {
      var t = e.nodeName;
      return (
        t &&
        "input" === t.toLowerCase() &&
        ("checkbox" === e.type || "radio" === e.type)
      );
    }
    function y(e, t, n) {
      if ("topClick" === e) return u(t, n);
    }
    function _(e, t, n) {
      if ("topInput" === e || "topChange" === e) return u(t, n);
    }
    function b(e, t) {
      if (null != e) {
        var n = e._wrapperState || t._wrapperState;
        if (n && n.controlled && "number" === t.type) {
          var r = "" + t.value;
          t.getAttribute("value") !== r && t.setAttribute("value", r);
        }
      }
    }
    var x = n(23),
      E = n(22),
      w = n(6),
      M = n(4),
      T = n(11),
      S = n(14),
      N = n(65),
      C = n(38),
      A = n(39),
      R = n(66),
      P = {
        change: {
          phasedRegistrationNames: {
            bubbled: "onChange",
            captured: "onChangeCapture",
          },
          dependencies: [
            "topBlur",
            "topChange",
            "topClick",
            "topFocus",
            "topInput",
            "topKeyDown",
            "topKeyUp",
            "topSelectionChange",
          ],
        },
      },
      O = null,
      D = null,
      L = !1;
    w.canUseDOM &&
      (L =
        A("change") && (!document.documentMode || document.documentMode > 8));
    var I = !1;
    w.canUseDOM &&
      (I =
        A("input") &&
        (!("documentMode" in document) || document.documentMode > 9));
    var U = {
      eventTypes: P,
      _allowSimulatedPassThrough: !0,
      _isInputEventSupported: I,
      extractEvents: function (e, t, n, o) {
        var a,
          s,
          c = t ? M.getNodeFromInstance(t) : window;
        if (
          (i(c)
            ? L
              ? (a = l)
              : (s = h)
            : R(c)
            ? I
              ? (a = _)
              : ((a = v), (s = m))
            : g(c) && (a = y),
          a)
        ) {
          var u = a(e, t, n);
          if (u) {
            return r(u, n, o);
          }
        }
        s && s(e, c, t), "topBlur" === e && b(t, c);
      },
    };
    e.exports = U;
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n) {
      "function" == typeof e
        ? e(t.getPublicInstance())
        : o.addComponentAsRefTo(t, e, n);
    }
    function i(e, t, n) {
      "function" == typeof e ? e(null) : o.removeComponentAsRefFrom(t, e, n);
    }
    var o = n(114),
      a = {};
    (a.attachRefs = function (e, t) {
      if (null !== t && "object" == typeof t) {
        var n = t.ref;
        null != n && r(n, e, t._owner);
      }
    }),
      (a.shouldUpdateRefs = function (e, t) {
        var n = null,
          r = null;
        null !== e && "object" == typeof e && ((n = e.ref), (r = e._owner));
        var i = null,
          o = null;
        return (
          null !== t && "object" == typeof t && ((i = t.ref), (o = t._owner)),
          n !== i || ("string" == typeof i && o !== r)
        );
      }),
      (a.detachRefs = function (e, t) {
        if (null !== t && "object" == typeof t) {
          var n = t.ref;
          null != n && i(n, e, t._owner);
        }
      }),
      (e.exports = a);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return !(
          !e ||
          "function" != typeof e.attachRef ||
          "function" != typeof e.detachRef
        );
      }
      var i = n(3),
        o = n(1),
        a = {
          addComponentAsRefTo: function (e, n, a) {
            r(a) ||
              ("production" !== t.env.NODE_ENV
                ? o(
                    !1,
                    "addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner)."
                  )
                : i("119")),
              a.attachRef(n, e);
          },
          removeComponentAsRefFrom: function (e, n, a) {
            r(a) ||
              ("production" !== t.env.NODE_ENV
                ? o(
                    !1,
                    "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner)."
                  )
                : i("120"));
            var s = a.getPublicInstance();
            s && s.refs[n] === e.getPublicInstance() && a.detachRef(n);
          },
        };
      e.exports = a;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n, r, i, o, a, s, c) {
        try {
          n.call(r, i, o, a, s, c);
        } catch (n) {
          "production" !== t.env.NODE_ENV &&
            x(
              w[e],
              "Exception thrown by hook while handling %s: %s",
              e,
              n + "\n" + n.stack
            ),
            (w[e] = !0);
        }
      }
      function i(e, t, n, i, o, a) {
        for (var s = 0; s < E.length; s++) {
          var c = E[s],
            u = c[e];
          u && r(e, u, c, t, n, i, o, a);
        }
      }
      function o() {
        y.purgeUnmountedComponents(), g.clearHistory();
      }
      function a(e) {
        return e.reduce(function (e, t) {
          var n = y.getOwnerID(t),
            r = y.getParentID(t);
          return (
            (e[t] = {
              displayName: y.getDisplayName(t),
              text: y.getText(t),
              updateCount: y.getUpdateCount(t),
              childIDs: y.getChildIDs(t),
              ownerID: n || (r && y.getOwnerID(r)) || 0,
              parentID: r,
            }),
            e
          );
        }, {});
      }
      function s() {
        var e = A,
          t = C,
          n = g.getHistory();
        if (0 === N) return (A = 0), (C = []), void o();
        if (t.length || n.length) {
          var r = y.getRegisteredIDs();
          T.push({
            duration: b() - e,
            measurements: t || [],
            operations: n || [],
            treeSnapshot: a(r),
          });
        }
        o(), (A = b()), (C = []);
      }
      function c(e) {
        (arguments.length > 1 &&
          void 0 !== arguments[1] &&
          arguments[1] &&
          0 === e) ||
          e ||
          ("production" !== t.env.NODE_ENV &&
            x(!1, "ReactDebugTool: debugID may not be empty."));
      }
      function u(e, n) {
        0 !== N &&
          (D &&
            !L &&
            ("production" !== t.env.NODE_ENV &&
              x(
                !1,
                "There is an internal error in the React performance measurement code. Did not expect %s timer to start while %s timer is still in progress for %s instance.",
                n,
                D || "no",
                e === R ? "the same" : "another"
              ),
            (L = !0)),
          (P = b()),
          (O = 0),
          (R = e),
          (D = n));
      }
      function l(e, n) {
        0 !== N &&
          (D === n ||
            L ||
            ("production" !== t.env.NODE_ENV &&
              x(
                !1,
                "There is an internal error in the React performance measurement code. We did not expect %s timer to stop while %s timer is still in progress for %s instance. Please report this as a bug in React.",
                n,
                D || "no",
                e === R ? "the same" : "another"
              ),
            (L = !0)),
          M && C.push({ timerType: n, instanceID: e, duration: b() - P - O }),
          (P = 0),
          (O = 0),
          (R = null),
          (D = null));
      }
      function h() {
        var e = {
          startTime: P,
          nestedFlushStartTime: b(),
          debugID: R,
          timerType: D,
        };
        S.push(e), (P = 0), (O = 0), (R = null), (D = null);
      }
      function p() {
        var e = S.pop(),
          t = e.startTime,
          n = e.nestedFlushStartTime,
          r = e.debugID,
          i = e.timerType,
          o = b() - n;
        (P = t), (O += o), (R = r), (D = i);
      }
      function d(e) {
        if (!M || !U) return !1;
        var t = y.getElement(e);
        return (
          null != t && "object" == typeof t && !("string" == typeof t.type)
        );
      }
      function f(e, t) {
        if (d(e)) {
          var n = e + "::" + t;
          (I = b()), performance.mark(n);
        }
      }
      function m(e, t) {
        if (d(e)) {
          var n = e + "::" + t,
            r = y.getDisplayName(e) || "Unknown";
          if (b() - I > 0.1) {
            var i = r + " [" + t + "]";
            performance.measure(i, n);
          }
          performance.clearMarks(n), i && performance.clearMeasures(i);
        }
      }
      var v = n(116),
        g = n(117),
        y = n(7),
        _ = n(6),
        b = n(118),
        x = n(2),
        E = [],
        w = {},
        M = !1,
        T = [],
        S = [],
        N = 0,
        C = [],
        A = 0,
        R = null,
        P = 0,
        O = 0,
        D = null,
        L = !1,
        I = 0,
        U =
          "undefined" != typeof performance &&
          "function" == typeof performance.mark &&
          "function" == typeof performance.clearMarks &&
          "function" == typeof performance.measure &&
          "function" == typeof performance.clearMeasures,
        k = {
          addHook: function (e) {
            E.push(e);
          },
          removeHook: function (e) {
            for (var t = 0; t < E.length; t++)
              E[t] === e && (E.splice(t, 1), t--);
          },
          isProfiling: function () {
            return M;
          },
          beginProfiling: function () {
            M || ((M = !0), (T.length = 0), s(), k.addHook(g));
          },
          endProfiling: function () {
            M && ((M = !1), s(), k.removeHook(g));
          },
          getFlushHistory: function () {
            return T;
          },
          onBeginFlush: function () {
            N++, s(), h(), i("onBeginFlush");
          },
          onEndFlush: function () {
            s(), N--, p(), i("onEndFlush");
          },
          onBeginLifeCycleTimer: function (e, t) {
            c(e), i("onBeginLifeCycleTimer", e, t), f(e, t), u(e, t);
          },
          onEndLifeCycleTimer: function (e, t) {
            c(e), l(e, t), m(e, t), i("onEndLifeCycleTimer", e, t);
          },
          onBeginProcessingChildContext: function () {
            i("onBeginProcessingChildContext");
          },
          onEndProcessingChildContext: function () {
            i("onEndProcessingChildContext");
          },
          onHostOperation: function (e) {
            c(e.instanceID), i("onHostOperation", e);
          },
          onSetState: function () {
            i("onSetState");
          },
          onSetChildren: function (e, t) {
            c(e), t.forEach(c), i("onSetChildren", e, t);
          },
          onBeforeMountComponent: function (e, t, n) {
            c(e), c(n, !0), i("onBeforeMountComponent", e, t, n), f(e, "mount");
          },
          onMountComponent: function (e) {
            c(e), m(e, "mount"), i("onMountComponent", e);
          },
          onBeforeUpdateComponent: function (e, t) {
            c(e), i("onBeforeUpdateComponent", e, t), f(e, "update");
          },
          onUpdateComponent: function (e) {
            c(e), m(e, "update"), i("onUpdateComponent", e);
          },
          onBeforeUnmountComponent: function (e) {
            c(e), i("onBeforeUnmountComponent", e), f(e, "unmount");
          },
          onUnmountComponent: function (e) {
            c(e), m(e, "unmount"), i("onUnmountComponent", e);
          },
          onTestEvent: function () {
            i("onTestEvent");
          },
        };
      (k.addDevtool = k.addHook),
        (k.removeDevtool = k.removeHook),
        k.addHook(v),
        k.addHook(y),
        /[?&]react_perf\b/.test((_.canUseDOM && window.location.href) || "") &&
          k.beginProfiling(),
        (e.exports = k);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(2);
      if ("production" !== t.env.NODE_ENV)
        var i = !1,
          o = function () {
            "production" !== t.env.NODE_ENV &&
              r(
                !i,
                "setState(...): Cannot call setState() inside getChildContext()"
              );
          };
      var a = {
        onBeginProcessingChildContext: function () {
          i = !0;
        },
        onEndProcessingChildContext: function () {
          i = !1;
        },
        onSetState: function () {
          o();
        },
      };
      e.exports = a;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = [],
      i = {
        onHostOperation: function (e) {
          r.push(e);
        },
        clearHistory: function () {
          i._preventClearing || (r = []);
        },
        getHistory: function () {
          return r;
        },
      };
    e.exports = i;
  },
  function (e, t, n) {
    "use strict";
    var r,
      i = n(119);
    (r = i.now
      ? function () {
          return i.now();
        }
      : function () {
          return Date.now();
        }),
      (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    var r,
      i = n(6);
    i.canUseDOM &&
      (r =
        window.performance || window.msPerformance || window.webkitPerformance),
      (e.exports = r || {});
  },
  function (e, t, n) {
    "use strict";
    var r = [
      "ResponderEventPlugin",
      "SimpleEventPlugin",
      "TapEventPlugin",
      "EnterLeaveEventPlugin",
      "ChangeEventPlugin",
      "SelectEventPlugin",
      "BeforeInputEventPlugin",
    ];
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r = n(22),
      i = n(4),
      o = n(30),
      a = {
        mouseEnter: {
          registrationName: "onMouseEnter",
          dependencies: ["topMouseOut", "topMouseOver"],
        },
        mouseLeave: {
          registrationName: "onMouseLeave",
          dependencies: ["topMouseOut", "topMouseOver"],
        },
      },
      s = {
        eventTypes: a,
        extractEvents: function (e, t, n, s) {
          if ("topMouseOver" === e && (n.relatedTarget || n.fromElement))
            return null;
          if ("topMouseOut" !== e && "topMouseOver" !== e) return null;
          var c;
          if (s.window === s) c = s;
          else {
            var u = s.ownerDocument;
            c = u ? u.defaultView || u.parentWindow : window;
          }
          var l, h;
          if ("topMouseOut" === e) {
            l = t;
            var p = n.relatedTarget || n.toElement;
            h = p ? i.getClosestInstanceFromNode(p) : null;
          } else (l = null), (h = t);
          if (l === h) return null;
          var d = null == l ? c : i.getNodeFromInstance(l),
            f = null == h ? c : i.getNodeFromInstance(h),
            m = o.getPooled(a.mouseLeave, l, n, s);
          (m.type = "mouseleave"), (m.target = d), (m.relatedTarget = f);
          var v = o.getPooled(a.mouseEnter, h, n, s);
          return (
            (v.type = "mouseenter"),
            (v.target = f),
            (v.relatedTarget = d),
            r.accumulateEnterLeaveDispatches(m, v, l, h),
            [m, v]
          );
        },
      };
    e.exports = s;
  },
  function (e, t, n) {
    "use strict";
    var r = n(15),
      i = r.injection.MUST_USE_PROPERTY,
      o = r.injection.HAS_BOOLEAN_VALUE,
      a = r.injection.HAS_NUMERIC_VALUE,
      s = r.injection.HAS_POSITIVE_NUMERIC_VALUE,
      c = r.injection.HAS_OVERLOADED_BOOLEAN_VALUE,
      u = {
        isCustomAttribute: RegExp.prototype.test.bind(
          new RegExp("^(data|aria)-[" + r.ATTRIBUTE_NAME_CHAR + "]*$")
        ),
        Properties: {
          accept: 0,
          acceptCharset: 0,
          accessKey: 0,
          action: 0,
          allowFullScreen: o,
          allowTransparency: 0,
          alt: 0,
          as: 0,
          async: o,
          autoComplete: 0,
          autoPlay: o,
          capture: o,
          cellPadding: 0,
          cellSpacing: 0,
          charSet: 0,
          challenge: 0,
          checked: i | o,
          cite: 0,
          classID: 0,
          className: 0,
          cols: s,
          colSpan: 0,
          content: 0,
          contentEditable: 0,
          contextMenu: 0,
          controls: o,
          coords: 0,
          crossOrigin: 0,
          data: 0,
          dateTime: 0,
          default: o,
          defer: o,
          dir: 0,
          disabled: o,
          download: c,
          draggable: 0,
          encType: 0,
          form: 0,
          formAction: 0,
          formEncType: 0,
          formMethod: 0,
          formNoValidate: o,
          formTarget: 0,
          frameBorder: 0,
          headers: 0,
          height: 0,
          hidden: o,
          high: 0,
          href: 0,
          hrefLang: 0,
          htmlFor: 0,
          httpEquiv: 0,
          icon: 0,
          id: 0,
          inputMode: 0,
          integrity: 0,
          is: 0,
          keyParams: 0,
          keyType: 0,
          kind: 0,
          label: 0,
          lang: 0,
          list: 0,
          loop: o,
          low: 0,
          manifest: 0,
          marginHeight: 0,
          marginWidth: 0,
          max: 0,
          maxLength: 0,
          media: 0,
          mediaGroup: 0,
          method: 0,
          min: 0,
          minLength: 0,
          multiple: i | o,
          muted: i | o,
          name: 0,
          nonce: 0,
          noValidate: o,
          open: o,
          optimum: 0,
          pattern: 0,
          placeholder: 0,
          playsInline: o,
          poster: 0,
          preload: 0,
          profile: 0,
          radioGroup: 0,
          readOnly: o,
          referrerPolicy: 0,
          rel: 0,
          required: o,
          reversed: o,
          role: 0,
          rows: s,
          rowSpan: a,
          sandbox: 0,
          scope: 0,
          scoped: o,
          scrolling: 0,
          seamless: o,
          selected: i | o,
          shape: 0,
          size: s,
          sizes: 0,
          span: s,
          spellCheck: 0,
          src: 0,
          srcDoc: 0,
          srcLang: 0,
          srcSet: 0,
          start: a,
          step: 0,
          style: 0,
          summary: 0,
          tabIndex: 0,
          target: 0,
          title: 0,
          type: 0,
          useMap: 0,
          value: 0,
          width: 0,
          wmode: 0,
          wrap: 0,
          about: 0,
          datatype: 0,
          inlist: 0,
          prefix: 0,
          property: 0,
          resource: 0,
          typeof: 0,
          vocab: 0,
          autoCapitalize: 0,
          autoCorrect: 0,
          autoSave: 0,
          color: 0,
          itemProp: 0,
          itemScope: o,
          itemType: 0,
          itemID: 0,
          itemRef: 0,
          results: 0,
          security: 0,
          unselectable: 0,
        },
        DOMAttributeNames: {
          acceptCharset: "accept-charset",
          className: "class",
          htmlFor: "for",
          httpEquiv: "http-equiv",
        },
        DOMPropertyNames: {},
        DOMMutationMethods: {
          value: function (e, t) {
            if (null == t) return e.removeAttribute("value");
            "number" !== e.type || !1 === e.hasAttribute("value")
              ? e.setAttribute("value", "" + t)
              : e.validity &&
                !e.validity.badInput &&
                e.ownerDocument.activeElement !== e &&
                e.setAttribute("value", "" + t);
          },
        },
      };
    e.exports = u;
  },
  function (e, t, n) {
    "use strict";
    var r = n(41),
      i = n(128),
      o = {
        processChildrenUpdates: i.dangerouslyProcessChildrenUpdates,
        replaceNodeWithMarkup: r.dangerouslyReplaceNodeWithMarkup,
      };
    e.exports = o;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(3),
        i = n(21),
        o = n(6),
        a = n(125),
        s = n(10),
        c = n(1),
        u = {
          dangerouslyReplaceNodeWithMarkup: function (e, n) {
            if (
              (o.canUseDOM ||
                ("production" !== t.env.NODE_ENV
                  ? c(
                      !1,
                      "dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering."
                    )
                  : r("56")),
              n ||
                ("production" !== t.env.NODE_ENV
                  ? c(
                      !1,
                      "dangerouslyReplaceNodeWithMarkup(...): Missing markup."
                    )
                  : r("57")),
              "HTML" === e.nodeName &&
                ("production" !== t.env.NODE_ENV
                  ? c(
                      !1,
                      "dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString()."
                    )
                  : r("58")),
              "string" == typeof n)
            ) {
              var u = a(n, s)[0];
              e.parentNode.replaceChild(u, e);
            } else i.replaceChildWithTree(e, n);
          },
        };
      e.exports = u;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        var t = e.match(l);
        return t && t[1].toLowerCase();
      }
      function i(e, n) {
        var i = u;
        u ||
          ("production" !== t.env.NODE_ENV
            ? c(!1, "createNodesFromMarkup dummy not initialized")
            : c(!1));
        var o = r(e),
          l = o && s(o);
        if (l) {
          i.innerHTML = l[1] + e + l[2];
          for (var h = l[0]; h--; ) i = i.lastChild;
        } else i.innerHTML = e;
        var p = i.getElementsByTagName("script");
        p.length &&
          (n ||
            ("production" !== t.env.NODE_ENV
              ? c(
                  !1,
                  "createNodesFromMarkup(...): Unexpected <script> element rendered."
                )
              : c(!1)),
          a(p).forEach(n));
        for (var d = Array.from(i.childNodes); i.lastChild; )
          i.removeChild(i.lastChild);
        return d;
      }
      var o = n(6),
        a = n(126),
        s = n(127),
        c = n(1),
        u = o.canUseDOM ? document.createElement("div") : null,
        l = /^\s*<(\w+)/;
      e.exports = i;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        var n = e.length;
        if (
          ((Array.isArray(e) ||
            ("object" != typeof e && "function" != typeof e)) &&
            ("production" !== t.env.NODE_ENV
              ? a(!1, "toArray: Array-like object expected")
              : a(!1)),
          "number" != typeof n &&
            ("production" !== t.env.NODE_ENV
              ? a(!1, "toArray: Object needs a length property")
              : a(!1)),
          0 === n ||
            n - 1 in e ||
            ("production" !== t.env.NODE_ENV
              ? a(!1, "toArray: Object should have keys for indices")
              : a(!1)),
          "function" == typeof e.callee &&
            ("production" !== t.env.NODE_ENV
              ? a(
                  !1,
                  "toArray: Object can't be `arguments`. Use rest params (function(...args) {}) or Array.from() instead."
                )
              : a(!1)),
          e.hasOwnProperty)
        )
          try {
            return Array.prototype.slice.call(e);
          } catch (e) {}
        for (var r = Array(n), i = 0; i < n; i++) r[i] = e[i];
        return r;
      }
      function i(e) {
        return (
          !!e &&
          ("object" == typeof e || "function" == typeof e) &&
          "length" in e &&
          !("setInterval" in e) &&
          "number" != typeof e.nodeType &&
          (Array.isArray(e) || "callee" in e || "item" in e)
        );
      }
      function o(e) {
        return i(e) ? (Array.isArray(e) ? e.slice() : r(e)) : [e];
      }
      var a = n(1);
      e.exports = o;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return (
          a ||
            ("production" !== t.env.NODE_ENV
              ? o(!1, "Markup wrapping node not initialized")
              : o(!1)),
          p.hasOwnProperty(e) || (e = "*"),
          s.hasOwnProperty(e) ||
            ((a.innerHTML = "*" === e ? "<link />" : "<" + e + "></" + e + ">"),
            (s[e] = !a.firstChild)),
          s[e] ? p[e] : null
        );
      }
      var i = n(6),
        o = n(1),
        a = i.canUseDOM ? document.createElement("div") : null,
        s = {},
        c = [1, '<select multiple="true">', "</select>"],
        u = [1, "<table>", "</table>"],
        l = [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        h = [1, '<svg xmlns="http://www.w3.org/2000/svg">', "</svg>"],
        p = {
          "*": [1, "?<div>", "</div>"],
          area: [1, "<map>", "</map>"],
          col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
          legend: [1, "<fieldset>", "</fieldset>"],
          param: [1, "<object>", "</object>"],
          tr: [2, "<table><tbody>", "</tbody></table>"],
          optgroup: c,
          option: c,
          caption: u,
          colgroup: u,
          tbody: u,
          tfoot: u,
          thead: u,
          td: l,
          th: l,
        };
      [
        "circle",
        "clipPath",
        "defs",
        "ellipse",
        "g",
        "image",
        "line",
        "linearGradient",
        "mask",
        "path",
        "pattern",
        "polygon",
        "polyline",
        "radialGradient",
        "rect",
        "stop",
        "text",
        "tspan",
      ].forEach(function (e) {
        (p[e] = h), (s[e] = !0);
      }),
        (e.exports = r);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = n(41),
      i = n(4),
      o = {
        dangerouslyProcessChildrenUpdates: function (e, t) {
          var n = i.getNodeFromInstance(e);
          r.processUpdates(n, t);
        },
      };
    e.exports = o;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        if (e) {
          var t = e._currentElement._owner || null;
          if (t) {
            var n = t.getName();
            if (n) return " This DOM node was rendered by `" + n + "`.";
          }
        }
        return "";
      }
      function i(e) {
        if ("object" == typeof e) {
          if (Array.isArray(e)) return "[" + e.map(i).join(", ") + "]";
          var t = [];
          for (var n in e)
            if (Object.prototype.hasOwnProperty.call(e, n)) {
              var r = /^[a-z$_][\w$_]*$/i.test(n) ? n : JSON.stringify(n);
              t.push(r + ": " + i(e[n]));
            }
          return "{" + t.join(", ") + "}";
        }
        return "string" == typeof e
          ? JSON.stringify(e)
          : "function" == typeof e
          ? "[function object]"
          : String(e);
      }
      function o(e, n, r) {
        if (null != e && null != n && !H(e, n)) {
          var o,
            a = r._tag,
            s = r._currentElement._owner;
          s && (o = s.getName());
          var c = o + "|" + a;
          te.hasOwnProperty(c) ||
            ((te[c] = !0),
            "production" !== t.env.NODE_ENV &&
              W(
                !1,
                "`%s` was passed a style object that has previously been mutated. Mutating `style` is deprecated. Consider cloning it beforehand. Check the `render` %s. Previous style: %s. Mutated style: %s.",
                a,
                s ? "of `" + o + "`" : "using <" + a + ">",
                i(e),
                i(n)
              ));
        }
      }
      function a(e, n) {
        n &&
          (ae[e._tag] &&
            (null != n.children || null != n.dangerouslySetInnerHTML) &&
            ("production" !== t.env.NODE_ENV
              ? B(
                  !1,
                  "%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s",
                  e._tag,
                  e._currentElement._owner
                    ? " Check the render method of " +
                        e._currentElement._owner.getName() +
                        "."
                    : ""
                )
              : y(
                  "137",
                  e._tag,
                  e._currentElement._owner
                    ? " Check the render method of " +
                        e._currentElement._owner.getName() +
                        "."
                    : ""
                )),
          null != n.dangerouslySetInnerHTML &&
            (null != n.children &&
              ("production" !== t.env.NODE_ENV
                ? B(
                    !1,
                    "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
                  )
                : y("60")),
            ("object" == typeof n.dangerouslySetInnerHTML &&
              Q in n.dangerouslySetInnerHTML) ||
              ("production" !== t.env.NODE_ENV
                ? B(
                    !1,
                    "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information."
                  )
                : y("61"))),
          "production" !== t.env.NODE_ENV &&
            ("production" !== t.env.NODE_ENV &&
              W(
                null == n.innerHTML,
                "Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."
              ),
            "production" !== t.env.NODE_ENV &&
              W(
                n.suppressContentEditableWarning ||
                  !n.contentEditable ||
                  null == n.children,
                "A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."
              ),
            "production" !== t.env.NODE_ENV &&
              W(
                null == n.onFocusIn && null == n.onFocusOut,
                "React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."
              )),
          null != n.style &&
            "object" != typeof n.style &&
            ("production" !== t.env.NODE_ENV
              ? B(
                  !1,
                  "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s",
                  r(e)
                )
              : y("62", r(e))));
      }
      function s(e, n, r, i) {
        if (!(i instanceof k)) {
          "production" !== t.env.NODE_ENV &&
            "production" !== t.env.NODE_ENV &&
            W(
              "onScroll" !== n || z("scroll", !0),
              "This browser doesn't support the `onScroll` event"
            );
          var o = e._hostContainerInfo,
            a = o._node && o._node.nodeType === ee,
            s = a ? o._node : o._ownerDocument;
          Z(n, s),
            i
              .getReactMountReady()
              .enqueue(c, { inst: e, registrationName: n, listener: r });
        }
      }
      function c() {
        var e = this;
        S.putListener(e.inst, e.registrationName, e.listener);
      }
      function u() {
        var e = this;
        P.postMountWrapper(e);
      }
      function l() {
        var e = this;
        L.postMountWrapper(e);
      }
      function h() {
        var e = this;
        O.postMountWrapper(e);
      }
      function p() {
        j.track(this);
      }
      function d() {
        var e = this;
        e._rootNodeID ||
          ("production" !== t.env.NODE_ENV
            ? B(!1, "Must be mounted to trap events")
            : y("63"));
        var n = Y(e);
        switch (
          (n ||
            ("production" !== t.env.NODE_ENV
              ? B(!1, "trapBubbledEvent(...): Requires node to be rendered.")
              : y("64")),
          e._tag)
        ) {
          case "iframe":
          case "object":
            e._wrapperState.listeners = [
              C.trapBubbledEvent("topLoad", "load", n),
            ];
            break;
          case "video":
          case "audio":
            e._wrapperState.listeners = [];
            for (var r in re)
              re.hasOwnProperty(r) &&
                e._wrapperState.listeners.push(C.trapBubbledEvent(r, re[r], n));
            break;
          case "source":
            e._wrapperState.listeners = [
              C.trapBubbledEvent("topError", "error", n),
            ];
            break;
          case "img":
            e._wrapperState.listeners = [
              C.trapBubbledEvent("topError", "error", n),
              C.trapBubbledEvent("topLoad", "load", n),
            ];
            break;
          case "form":
            e._wrapperState.listeners = [
              C.trapBubbledEvent("topReset", "reset", n),
              C.trapBubbledEvent("topSubmit", "submit", n),
            ];
            break;
          case "input":
          case "select":
          case "textarea":
            e._wrapperState.listeners = [
              C.trapBubbledEvent("topInvalid", "invalid", n),
            ];
        }
      }
      function f() {
        D.postUpdateWrapper(this);
      }
      function m(e) {
        ue.call(ce, e) ||
          (se.test(e) ||
            ("production" !== t.env.NODE_ENV
              ? B(!1, "Invalid tag: %s", e)
              : y("65", e)),
          (ce[e] = !0));
      }
      function v(e, t) {
        return e.indexOf("-") >= 0 || null != t.is;
      }
      function g(e) {
        var n = e.type;
        m(n),
          (this._currentElement = e),
          (this._tag = n.toLowerCase()),
          (this._namespaceURI = null),
          (this._renderedChildren = null),
          (this._previousStyle = null),
          (this._previousStyleCopy = null),
          (this._hostNode = null),
          (this._hostParent = null),
          (this._rootNodeID = 0),
          (this._domID = 0),
          (this._hostContainerInfo = null),
          (this._wrapperState = null),
          (this._topLevelWrapper = null),
          (this._flags = 0),
          "production" !== t.env.NODE_ENV &&
            ((this._ancestorInfo = null), ne.call(this, null));
      }
      var y = n(3),
        _ = n(5),
        b = n(130),
        x = n(131),
        E = n(21),
        w = n(42),
        M = n(15),
        T = n(71),
        S = n(23),
        N = n(28),
        C = n(33),
        A = n(59),
        R = n(4),
        P = n(141),
        O = n(145),
        D = n(74),
        L = n(146),
        I = n(8),
        U = n(147),
        k = n(156),
        F = n(10),
        V = n(32),
        B = n(1),
        z = n(39),
        H = n(46),
        j = n(65),
        G = n(50),
        W = n(2),
        q = A,
        X = S.deleteListener,
        Y = R.getNodeFromInstance,
        Z = C.listenTo,
        K = N.registrationNameModules,
        J = { string: !0, number: !0 },
        Q = "__html",
        $ = {
          children: null,
          dangerouslySetInnerHTML: null,
          suppressContentEditableWarning: null,
        },
        ee = 11,
        te = {},
        ne = F;
      "production" !== t.env.NODE_ENV &&
        (ne = function (e) {
          var t = null != this._contentDebugID,
            n = this._debugID,
            r = -n;
          if (null == e)
            return (
              t && I.debugTool.onUnmountComponent(this._contentDebugID),
              void (this._contentDebugID = null)
            );
          G(null, String(e), this, this._ancestorInfo),
            (this._contentDebugID = r),
            t
              ? (I.debugTool.onBeforeUpdateComponent(r, e),
                I.debugTool.onUpdateComponent(r))
              : (I.debugTool.onBeforeMountComponent(r, e, n),
                I.debugTool.onMountComponent(r),
                I.debugTool.onSetChildren(n, [r]));
        });
      var re = {
          topAbort: "abort",
          topCanPlay: "canplay",
          topCanPlayThrough: "canplaythrough",
          topDurationChange: "durationchange",
          topEmptied: "emptied",
          topEncrypted: "encrypted",
          topEnded: "ended",
          topError: "error",
          topLoadedData: "loadeddata",
          topLoadedMetadata: "loadedmetadata",
          topLoadStart: "loadstart",
          topPause: "pause",
          topPlay: "play",
          topPlaying: "playing",
          topProgress: "progress",
          topRateChange: "ratechange",
          topSeeked: "seeked",
          topSeeking: "seeking",
          topStalled: "stalled",
          topSuspend: "suspend",
          topTimeUpdate: "timeupdate",
          topVolumeChange: "volumechange",
          topWaiting: "waiting",
        },
        ie = {
          area: !0,
          base: !0,
          br: !0,
          col: !0,
          embed: !0,
          hr: !0,
          img: !0,
          input: !0,
          keygen: !0,
          link: !0,
          meta: !0,
          param: !0,
          source: !0,
          track: !0,
          wbr: !0,
        },
        oe = { listing: !0, pre: !0, textarea: !0 },
        ae = _({ menuitem: !0 }, ie),
        se = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
        ce = {},
        ue = {}.hasOwnProperty,
        le = 1;
      (g.displayName = "ReactDOMComponent"),
        (g.Mixin = {
          mountComponent: function (e, n, r, i) {
            (this._rootNodeID = le++),
              (this._domID = r._idCounter++),
              (this._hostParent = n),
              (this._hostContainerInfo = r);
            var o = this._currentElement.props;
            switch (this._tag) {
              case "audio":
              case "form":
              case "iframe":
              case "img":
              case "link":
              case "object":
              case "source":
              case "video":
                (this._wrapperState = { listeners: null }),
                  e.getReactMountReady().enqueue(d, this);
                break;
              case "input":
                P.mountWrapper(this, o, n),
                  (o = P.getHostProps(this, o)),
                  e.getReactMountReady().enqueue(p, this),
                  e.getReactMountReady().enqueue(d, this);
                break;
              case "option":
                O.mountWrapper(this, o, n), (o = O.getHostProps(this, o));
                break;
              case "select":
                D.mountWrapper(this, o, n),
                  (o = D.getHostProps(this, o)),
                  e.getReactMountReady().enqueue(d, this);
                break;
              case "textarea":
                L.mountWrapper(this, o, n),
                  (o = L.getHostProps(this, o)),
                  e.getReactMountReady().enqueue(p, this),
                  e.getReactMountReady().enqueue(d, this);
            }
            a(this, o);
            var s, c;
            if (
              (null != n
                ? ((s = n._namespaceURI), (c = n._tag))
                : r._tag && ((s = r._namespaceURI), (c = r._tag)),
              (null == s || (s === w.svg && "foreignobject" === c)) &&
                (s = w.html),
              s === w.html &&
                ("svg" === this._tag
                  ? (s = w.svg)
                  : "math" === this._tag && (s = w.mathml)),
              (this._namespaceURI = s),
              "production" !== t.env.NODE_ENV)
            ) {
              var f;
              null != n
                ? (f = n._ancestorInfo)
                : r._tag && (f = r._ancestorInfo),
                f && G(this._tag, null, this, f),
                (this._ancestorInfo = G.updatedAncestorInfo(
                  f,
                  this._tag,
                  this
                ));
            }
            var m;
            if (e.useCreateElement) {
              var v,
                g = r._ownerDocument;
              if (s === w.html)
                if ("script" === this._tag) {
                  var y = g.createElement("div"),
                    _ = this._currentElement.type;
                  (y.innerHTML = "<" + _ + "></" + _ + ">"),
                    (v = y.removeChild(y.firstChild));
                } else
                  v = o.is
                    ? g.createElement(this._currentElement.type, o.is)
                    : g.createElement(this._currentElement.type);
              else v = g.createElementNS(s, this._currentElement.type);
              R.precacheNode(this, v),
                (this._flags |= q.hasCachedChildNodes),
                this._hostParent || T.setAttributeForRoot(v),
                this._updateDOMProperties(null, o, e);
              var x = E(v);
              this._createInitialChildren(e, o, i, x), (m = x);
            } else {
              var M = this._createOpenTagMarkupAndPutListeners(e, o),
                S = this._createContentMarkup(e, o, i);
              m =
                !S && ie[this._tag]
                  ? M + "/>"
                  : M + ">" + S + "</" + this._currentElement.type + ">";
            }
            switch (this._tag) {
              case "input":
                e.getReactMountReady().enqueue(u, this),
                  o.autoFocus &&
                    e.getReactMountReady().enqueue(b.focusDOMComponent, this);
                break;
              case "textarea":
                e.getReactMountReady().enqueue(l, this),
                  o.autoFocus &&
                    e.getReactMountReady().enqueue(b.focusDOMComponent, this);
                break;
              case "select":
              case "button":
                o.autoFocus &&
                  e.getReactMountReady().enqueue(b.focusDOMComponent, this);
                break;
              case "option":
                e.getReactMountReady().enqueue(h, this);
            }
            return m;
          },
          _createOpenTagMarkupAndPutListeners: function (e, n) {
            var r = "<" + this._currentElement.type;
            for (var i in n)
              if (n.hasOwnProperty(i)) {
                var o = n[i];
                if (null != o)
                  if (K.hasOwnProperty(i)) o && s(this, i, o, e);
                  else {
                    "style" === i &&
                      (o &&
                        ("production" !== t.env.NODE_ENV &&
                          (this._previousStyle = o),
                        (o = this._previousStyleCopy = _({}, n.style))),
                      (o = x.createMarkupForStyles(o, this)));
                    var a = null;
                    null != this._tag && v(this._tag, n)
                      ? $.hasOwnProperty(i) ||
                        (a = T.createMarkupForCustomAttribute(i, o))
                      : (a = T.createMarkupForProperty(i, o)),
                      a && (r += " " + a);
                  }
              }
            return e.renderToStaticMarkup
              ? r
              : (this._hostParent || (r += " " + T.createMarkupForRoot()),
                (r += " " + T.createMarkupForID(this._domID)));
          },
          _createContentMarkup: function (e, n, r) {
            var i = "",
              o = n.dangerouslySetInnerHTML;
            if (null != o) null != o.__html && (i = o.__html);
            else {
              var a = J[typeof n.children] ? n.children : null,
                s = null != a ? null : n.children;
              if (null != a)
                (i = V(a)), "production" !== t.env.NODE_ENV && ne.call(this, a);
              else if (null != s) {
                var c = this.mountChildren(s, e, r);
                i = c.join("");
              }
            }
            return oe[this._tag] && "\n" === i.charAt(0) ? "\n" + i : i;
          },
          _createInitialChildren: function (e, n, r, i) {
            var o = n.dangerouslySetInnerHTML;
            if (null != o) null != o.__html && E.queueHTML(i, o.__html);
            else {
              var a = J[typeof n.children] ? n.children : null,
                s = null != a ? null : n.children;
              if (null != a)
                "" !== a &&
                  ("production" !== t.env.NODE_ENV && ne.call(this, a),
                  E.queueText(i, a));
              else if (null != s)
                for (
                  var c = this.mountChildren(s, e, r), u = 0;
                  u < c.length;
                  u++
                )
                  E.queueChild(i, c[u]);
            }
          },
          receiveComponent: function (e, t, n) {
            var r = this._currentElement;
            (this._currentElement = e), this.updateComponent(t, r, e, n);
          },
          updateComponent: function (e, t, n, r) {
            var i = t.props,
              o = this._currentElement.props;
            switch (this._tag) {
              case "input":
                (i = P.getHostProps(this, i)), (o = P.getHostProps(this, o));
                break;
              case "option":
                (i = O.getHostProps(this, i)), (o = O.getHostProps(this, o));
                break;
              case "select":
                (i = D.getHostProps(this, i)), (o = D.getHostProps(this, o));
                break;
              case "textarea":
                (i = L.getHostProps(this, i)), (o = L.getHostProps(this, o));
            }
            switch (
              (a(this, o),
              this._updateDOMProperties(i, o, e),
              this._updateDOMChildren(i, o, e, r),
              this._tag)
            ) {
              case "input":
                P.updateWrapper(this);
                break;
              case "textarea":
                L.updateWrapper(this);
                break;
              case "select":
                e.getReactMountReady().enqueue(f, this);
            }
          },
          _updateDOMProperties: function (e, n, r) {
            var i, a, c;
            for (i in e)
              if (!n.hasOwnProperty(i) && e.hasOwnProperty(i) && null != e[i])
                if ("style" === i) {
                  var u = this._previousStyleCopy;
                  for (a in u)
                    u.hasOwnProperty(a) && ((c = c || {}), (c[a] = ""));
                  this._previousStyleCopy = null;
                } else
                  K.hasOwnProperty(i)
                    ? e[i] && X(this, i)
                    : v(this._tag, e)
                    ? $.hasOwnProperty(i) ||
                      T.deleteValueForAttribute(Y(this), i)
                    : (M.properties[i] || M.isCustomAttribute(i)) &&
                      T.deleteValueForProperty(Y(this), i);
            for (i in n) {
              var l = n[i],
                h =
                  "style" === i
                    ? this._previousStyleCopy
                    : null != e
                    ? e[i]
                    : void 0;
              if (n.hasOwnProperty(i) && l !== h && (null != l || null != h))
                if ("style" === i)
                  if (
                    (l
                      ? ("production" !== t.env.NODE_ENV &&
                          (o(
                            this._previousStyleCopy,
                            this._previousStyle,
                            this
                          ),
                          (this._previousStyle = l)),
                        (l = this._previousStyleCopy = _({}, l)))
                      : (this._previousStyleCopy = null),
                    h)
                  ) {
                    for (a in h)
                      !h.hasOwnProperty(a) ||
                        (l && l.hasOwnProperty(a)) ||
                        ((c = c || {}), (c[a] = ""));
                    for (a in l)
                      l.hasOwnProperty(a) &&
                        h[a] !== l[a] &&
                        ((c = c || {}), (c[a] = l[a]));
                  } else c = l;
                else if (K.hasOwnProperty(i))
                  l ? s(this, i, l, r) : h && X(this, i);
                else if (v(this._tag, n))
                  $.hasOwnProperty(i) || T.setValueForAttribute(Y(this), i, l);
                else if (M.properties[i] || M.isCustomAttribute(i)) {
                  var p = Y(this);
                  null != l
                    ? T.setValueForProperty(p, i, l)
                    : T.deleteValueForProperty(p, i);
                }
            }
            c && x.setValueForStyles(Y(this), c, this);
          },
          _updateDOMChildren: function (e, n, r, i) {
            var o = J[typeof e.children] ? e.children : null,
              a = J[typeof n.children] ? n.children : null,
              s = e.dangerouslySetInnerHTML && e.dangerouslySetInnerHTML.__html,
              c = n.dangerouslySetInnerHTML && n.dangerouslySetInnerHTML.__html,
              u = null != o ? null : e.children,
              l = null != a ? null : n.children,
              h = null != o || null != s,
              p = null != a || null != c;
            null != u && null == l
              ? this.updateChildren(null, r, i)
              : h &&
                !p &&
                (this.updateTextContent(""),
                "production" !== t.env.NODE_ENV &&
                  I.debugTool.onSetChildren(this._debugID, [])),
              null != a
                ? o !== a &&
                  (this.updateTextContent("" + a),
                  "production" !== t.env.NODE_ENV && ne.call(this, a))
                : null != c
                ? (s !== c && this.updateMarkup("" + c),
                  "production" !== t.env.NODE_ENV &&
                    I.debugTool.onSetChildren(this._debugID, []))
                : null != l &&
                  ("production" !== t.env.NODE_ENV && ne.call(this, null),
                  this.updateChildren(l, r, i));
          },
          getHostNode: function () {
            return Y(this);
          },
          unmountComponent: function (e) {
            switch (this._tag) {
              case "audio":
              case "form":
              case "iframe":
              case "img":
              case "link":
              case "object":
              case "source":
              case "video":
                var n = this._wrapperState.listeners;
                if (n) for (var r = 0; r < n.length; r++) n[r].remove();
                break;
              case "input":
              case "textarea":
                j.stopTracking(this);
                break;
              case "html":
              case "head":
              case "body":
                "production" !== t.env.NODE_ENV
                  ? B(
                      !1,
                      "<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.",
                      this._tag
                    )
                  : y("66", this._tag);
            }
            this.unmountChildren(e),
              R.uncacheNode(this),
              S.deleteAllListeners(this),
              (this._rootNodeID = 0),
              (this._domID = 0),
              (this._wrapperState = null),
              "production" !== t.env.NODE_ENV && ne.call(this, null);
          },
          getPublicInstance: function () {
            return Y(this);
          },
        }),
        _(g.prototype, g.Mixin, U.Mixin),
        (e.exports = g);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = n(4),
      i = n(69),
      o = {
        focusDOMComponent: function () {
          i(r.getNodeFromInstance(this));
        },
      };
    e.exports = o;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(70),
        i = n(6),
        o = n(8),
        a = n(132),
        s = n(134),
        c = n(135),
        u = n(137),
        l = n(2),
        h = u(function (e) {
          return c(e);
        }),
        p = !1,
        d = "cssFloat";
      if (i.canUseDOM) {
        var f = document.createElement("div").style;
        try {
          f.font = "";
        } catch (e) {
          p = !0;
        }
        void 0 === document.documentElement.style.cssFloat &&
          (d = "styleFloat");
      }
      if ("production" !== t.env.NODE_ENV)
        var m = /^(?:webkit|moz|o)[A-Z]/,
          v = /;\s*$/,
          g = {},
          y = {},
          _ = !1,
          b = function (e, n) {
            (g.hasOwnProperty(e) && g[e]) ||
              ((g[e] = !0),
              "production" !== t.env.NODE_ENV &&
                l(
                  !1,
                  "Unsupported style property %s. Did you mean %s?%s",
                  e,
                  a(e),
                  M(n)
                ));
          },
          x = function (e, n) {
            (g.hasOwnProperty(e) && g[e]) ||
              ((g[e] = !0),
              "production" !== t.env.NODE_ENV &&
                l(
                  !1,
                  "Unsupported vendor-prefixed style property %s. Did you mean %s?%s",
                  e,
                  e.charAt(0).toUpperCase() + e.slice(1),
                  M(n)
                ));
          },
          E = function (e, n, r) {
            (y.hasOwnProperty(n) && y[n]) ||
              ((y[n] = !0),
              "production" !== t.env.NODE_ENV &&
                l(
                  !1,
                  'Style property values shouldn\'t contain a semicolon.%s Try "%s: %s" instead.',
                  M(r),
                  e,
                  n.replace(v, "")
                ));
          },
          w = function (e, n, r) {
            _ ||
              ((_ = !0),
              "production" !== t.env.NODE_ENV &&
                l(
                  !1,
                  "`NaN` is an invalid value for the `%s` css style property.%s",
                  e,
                  M(r)
                ));
          },
          M = function (e) {
            if (e) {
              var t = e.getName();
              if (t) return " Check the render method of `" + t + "`.";
            }
            return "";
          },
          T = function (e, t, n) {
            var r;
            n && (r = n._currentElement._owner),
              e.indexOf("-") > -1
                ? b(e, r)
                : m.test(e)
                ? x(e, r)
                : v.test(t) && E(e, t, r),
              "number" == typeof t && isNaN(t) && w(e, 0, r);
          };
      var S = {
        createMarkupForStyles: function (e, n) {
          var r = "";
          for (var i in e)
            if (e.hasOwnProperty(i)) {
              var o = 0 === i.indexOf("--"),
                a = e[i];
              "production" !== t.env.NODE_ENV && (o || T(i, a, n)),
                null != a && ((r += h(i) + ":"), (r += s(i, a, n, o) + ";"));
            }
          return r || null;
        },
        setValueForStyles: function (e, n, i) {
          "production" !== t.env.NODE_ENV &&
            o.debugTool.onHostOperation({
              instanceID: i._debugID,
              type: "update styles",
              payload: n,
            });
          var a = e.style;
          for (var c in n)
            if (n.hasOwnProperty(c)) {
              var u = 0 === c.indexOf("--");
              "production" !== t.env.NODE_ENV && (u || T(c, n[c], i));
              var l = s(c, n[c], i, u);
              if ((("float" !== c && "cssFloat" !== c) || (c = d), u))
                a.setProperty(c, l);
              else if (l) a[c] = l;
              else {
                var h = p && r.shorthandPropertyExpansions[c];
                if (h) for (var f in h) a[f] = "";
                else a[c] = "";
              }
            }
        },
      };
      e.exports = S;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return i(e.replace(o, "ms-"));
    }
    var i = n(133),
      o = /^-ms-/;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return e.replace(i, function (e, t) {
        return t.toUpperCase();
      });
    }
    var i = /-(.)/g;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n, r, i) {
        if (null == n || "boolean" == typeof n || "" === n) return "";
        var c = isNaN(n);
        if (i || c || 0 === n || (a.hasOwnProperty(e) && a[e])) return "" + n;
        if ("string" == typeof n) {
          if ("production" !== t.env.NODE_ENV && r && "0" !== n) {
            var u = r._currentElement._owner,
              l = u ? u.getName() : null;
            l && !s[l] && (s[l] = {});
            var h = !1;
            if (l) {
              var p = s[l];
              (h = p[e]), h || (p[e] = !0);
            }
            h ||
              ("production" !== t.env.NODE_ENV &&
                o(
                  !1,
                  "a `%s` tag (owner: `%s`) was passed a numeric string value for CSS property `%s` (value: `%s`) which will be treated as a unitless number in a future version of React.",
                  r._currentElement.type,
                  l || "unknown",
                  e,
                  n
                ));
          }
          n = n.trim();
        }
        return n + "px";
      }
      var i = n(70),
        o = n(2),
        a = i.isUnitlessNumber,
        s = {};
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return i(e).replace(o, "-ms-");
    }
    var i = n(136),
      o = /^ms-/;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return e.replace(i, "-$1").toLowerCase();
    }
    var i = /([A-Z])/g;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = {};
      return function (n) {
        return t.hasOwnProperty(n) || (t[n] = e.call(this, n)), t[n];
      };
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return '"' + i(e) + '"';
    }
    var i = n(32);
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      i.enqueueEvents(e), i.processEventQueue(!1);
    }
    var i = n(23),
      o = {
        handleTopLevel: function (e, t, n, o) {
          r(i.extractEvents(e, t, n, o));
        },
      };
    e.exports = o;
  },
  function (e, t, n) {
    "use strict";
    function r(e, t) {
      var n = {};
      return (
        (n[e.toLowerCase()] = t.toLowerCase()),
        (n["Webkit" + e] = "webkit" + t),
        (n["Moz" + e] = "moz" + t),
        (n["ms" + e] = "MS" + t),
        (n["O" + e] = "o" + t.toLowerCase()),
        n
      );
    }
    function i(e) {
      if (s[e]) return s[e];
      if (!a[e]) return e;
      var t = a[e];
      for (var n in t) if (t.hasOwnProperty(n) && n in c) return (s[e] = t[n]);
      return "";
    }
    var o = n(6),
      a = {
        animationend: r("Animation", "AnimationEnd"),
        animationiteration: r("Animation", "AnimationIteration"),
        animationstart: r("Animation", "AnimationStart"),
        transitionend: r("Transition", "TransitionEnd"),
      },
      s = {},
      c = {};
    o.canUseDOM &&
      ((c = document.createElement("div").style),
      "AnimationEvent" in window ||
        (delete a.animationend.animation,
        delete a.animationiteration.animation,
        delete a.animationstart.animation),
      "TransitionEvent" in window || delete a.transitionend.transition),
      (e.exports = i);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r() {
        this._rootNodeID && b.updateWrapper(this);
      }
      function i(e) {
        return "checkbox" === e.type || "radio" === e.type
          ? null != e.checked
          : null != e.value;
      }
      function o(e) {
        var n = this._currentElement.props,
          i = u.executeOnChange(n, e);
        h.asap(r, this);
        var o = n.name;
        if ("radio" === n.type && null != o) {
          for (var s = l.getNodeFromInstance(this), c = s; c.parentNode; )
            c = c.parentNode;
          for (
            var d = c.querySelectorAll(
                "input[name=" + JSON.stringify("" + o) + '][type="radio"]'
              ),
              f = 0;
            f < d.length;
            f++
          ) {
            var m = d[f];
            if (m !== s && m.form === s.form) {
              var v = l.getInstanceFromNode(m);
              v ||
                ("production" !== t.env.NODE_ENV
                  ? p(
                      !1,
                      "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported."
                    )
                  : a("90")),
                h.asap(r, v);
            }
          }
        }
        return i;
      }
      var a = n(3),
        s = n(5),
        c = n(71),
        u = n(44),
        l = n(4),
        h = n(11),
        p = n(1),
        d = n(2),
        f = !1,
        m = !1,
        v = !1,
        g = !1,
        y = !1,
        _ = !1,
        b = {
          getHostProps: function (e, t) {
            var n = u.getValue(t),
              r = u.getChecked(t);
            return s(
              { type: void 0, step: void 0, min: void 0, max: void 0 },
              t,
              {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: null != n ? n : e._wrapperState.initialValue,
                checked: null != r ? r : e._wrapperState.initialChecked,
                onChange: e._wrapperState.onChange,
              }
            );
          },
          mountWrapper: function (e, n) {
            if ("production" !== t.env.NODE_ENV) {
              u.checkPropTypes("input", n, e._currentElement._owner);
              var r = e._currentElement._owner;
              void 0 === n.valueLink ||
                f ||
                ("production" !== t.env.NODE_ENV &&
                  d(
                    !1,
                    "`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead."
                  ),
                (f = !0)),
                void 0 === n.checkedLink ||
                  m ||
                  ("production" !== t.env.NODE_ENV &&
                    d(
                      !1,
                      "`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead."
                    ),
                  (m = !0)),
                void 0 === n.checked ||
                  void 0 === n.defaultChecked ||
                  g ||
                  ("production" !== t.env.NODE_ENV &&
                    d(
                      !1,
                      "%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://fb.me/react-controlled-components",
                      (r && r.getName()) || "A component",
                      n.type
                    ),
                  (g = !0)),
                void 0 === n.value ||
                  void 0 === n.defaultValue ||
                  v ||
                  ("production" !== t.env.NODE_ENV &&
                    d(
                      !1,
                      "%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://fb.me/react-controlled-components",
                      (r && r.getName()) || "A component",
                      n.type
                    ),
                  (v = !0));
            }
            var a = n.defaultValue;
            e._wrapperState = {
              initialChecked: null != n.checked ? n.checked : n.defaultChecked,
              initialValue: null != n.value ? n.value : a,
              listeners: null,
              onChange: o.bind(e),
              controlled: i(n),
            };
          },
          updateWrapper: function (e) {
            var n = e._currentElement.props;
            if ("production" !== t.env.NODE_ENV) {
              var r = i(n),
                o = e._currentElement._owner;
              e._wrapperState.controlled ||
                !r ||
                _ ||
                ("production" !== t.env.NODE_ENV &&
                  d(
                    !1,
                    "%s is changing an uncontrolled input of type %s to be controlled. Input elements should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components",
                    (o && o.getName()) || "A component",
                    n.type
                  ),
                (_ = !0)),
                !e._wrapperState.controlled ||
                  r ||
                  y ||
                  ("production" !== t.env.NODE_ENV &&
                    d(
                      !1,
                      "%s is changing a controlled input of type %s to be uncontrolled. Input elements should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components",
                      (o && o.getName()) || "A component",
                      n.type
                    ),
                  (y = !0));
            }
            var a = n.checked;
            null != a &&
              c.setValueForProperty(
                l.getNodeFromInstance(e),
                "checked",
                a || !1
              );
            var s = l.getNodeFromInstance(e),
              h = u.getValue(n);
            if (null != h)
              if (0 === h && "" === s.value) s.value = "0";
              else if ("number" === n.type) {
                var p = parseFloat(s.value, 10) || 0;
                (h != p || (h == p && s.value != h)) && (s.value = "" + h);
              } else s.value !== "" + h && (s.value = "" + h);
            else
              null == n.value &&
                null != n.defaultValue &&
                s.defaultValue !== "" + n.defaultValue &&
                (s.defaultValue = "" + n.defaultValue),
                null == n.checked &&
                  null != n.defaultChecked &&
                  (s.defaultChecked = !!n.defaultChecked);
          },
          postMountWrapper: function (e) {
            var t = e._currentElement.props,
              n = l.getNodeFromInstance(e);
            switch (t.type) {
              case "submit":
              case "reset":
                break;
              case "color":
              case "date":
              case "datetime":
              case "datetime-local":
              case "month":
              case "time":
              case "week":
                (n.value = ""), (n.value = n.defaultValue);
                break;
              default:
                n.value = n.value;
            }
            var r = n.name;
            "" !== r && (n.name = ""),
              (n.defaultChecked = !n.defaultChecked),
              (n.defaultChecked = !n.defaultChecked),
              "" !== r && (n.name = r);
          },
        };
      e.exports = b;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = n(143);
    e.exports = function (e) {
      return r(e, !1);
    };
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(10),
        i = n(1),
        o = n(2),
        a = n(73),
        s = n(144);
      e.exports = function (e, n) {
        function c(e) {
          var t = e && ((T && e[T]) || e[S]);
          if ("function" == typeof t) return t;
        }
        function u(e, t) {
          return e === t ? 0 !== e || 1 / e == 1 / t : e !== e && t !== t;
        }
        function l(e) {
          (this.message = e), (this.stack = "");
        }
        function h(e) {
          function r(r, u, h, p, d, f, m) {
            if (((p = p || N), (f = f || h), m !== a))
              if (n)
                i(
                  !1,
                  "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
                );
              else if (
                "production" !== t.env.NODE_ENV &&
                "undefined" != typeof console
              ) {
                var v = p + ":" + h;
                !s[v] &&
                  c < 3 &&
                  (o(
                    !1,
                    "You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.",
                    f,
                    p
                  ),
                  (s[v] = !0),
                  c++);
              }
            return null == u[h]
              ? r
                ? new l(
                    null === u[h]
                      ? "The " +
                        d +
                        " `" +
                        f +
                        "` is marked as required in `" +
                        p +
                        "`, but its value is `null`."
                      : "The " +
                        d +
                        " `" +
                        f +
                        "` is marked as required in `" +
                        p +
                        "`, but its value is `undefined`."
                  )
                : null
              : e(u, h, p, d, f);
          }
          if ("production" !== t.env.NODE_ENV)
            var s = {},
              c = 0;
          var u = r.bind(null, !1);
          return (u.isRequired = r.bind(null, !0)), u;
        }
        function p(e) {
          function t(t, n, r, i, o, a) {
            var s = t[n];
            if (x(s) !== e)
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  E(s) +
                  "` supplied to `" +
                  r +
                  "`, expected `" +
                  e +
                  "`."
              );
            return null;
          }
          return h(t);
        }
        function d(e) {
          function t(t, n, r, i, o) {
            if ("function" != typeof e)
              return new l(
                "Property `" +
                  o +
                  "` of component `" +
                  r +
                  "` has invalid PropType notation inside arrayOf."
              );
            var s = t[n];
            if (!Array.isArray(s)) {
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  x(s) +
                  "` supplied to `" +
                  r +
                  "`, expected an array."
              );
            }
            for (var c = 0; c < s.length; c++) {
              var u = e(s, c, r, i, o + "[" + c + "]", a);
              if (u instanceof Error) return u;
            }
            return null;
          }
          return h(t);
        }
        function f(e) {
          function t(t, n, r, i, o) {
            if (!(t[n] instanceof e)) {
              var a = e.name || N;
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  M(t[n]) +
                  "` supplied to `" +
                  r +
                  "`, expected instance of `" +
                  a +
                  "`."
              );
            }
            return null;
          }
          return h(t);
        }
        function m(e) {
          function n(t, n, r, i, o) {
            for (var a = t[n], s = 0; s < e.length; s++)
              if (u(a, e[s])) return null;
            return new l(
              "Invalid " +
                i +
                " `" +
                o +
                "` of value `" +
                a +
                "` supplied to `" +
                r +
                "`, expected one of " +
                JSON.stringify(e) +
                "."
            );
          }
          return Array.isArray(e)
            ? h(n)
            : ("production" !== t.env.NODE_ENV &&
                o(
                  !1,
                  "Invalid argument supplied to oneOf, expected an instance of array."
                ),
              r.thatReturnsNull);
        }
        function v(e) {
          function t(t, n, r, i, o) {
            if ("function" != typeof e)
              return new l(
                "Property `" +
                  o +
                  "` of component `" +
                  r +
                  "` has invalid PropType notation inside objectOf."
              );
            var s = t[n],
              c = x(s);
            if ("object" !== c)
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  c +
                  "` supplied to `" +
                  r +
                  "`, expected an object."
              );
            for (var u in s)
              if (s.hasOwnProperty(u)) {
                var h = e(s, u, r, i, o + "." + u, a);
                if (h instanceof Error) return h;
              }
            return null;
          }
          return h(t);
        }
        function g(e) {
          function n(t, n, r, i, o) {
            for (var s = 0; s < e.length; s++) {
              if (null == (0, e[s])(t, n, r, i, o, a)) return null;
            }
            return new l(
              "Invalid " + i + " `" + o + "` supplied to `" + r + "`."
            );
          }
          if (!Array.isArray(e))
            return (
              "production" !== t.env.NODE_ENV &&
                o(
                  !1,
                  "Invalid argument supplied to oneOfType, expected an instance of array."
                ),
              r.thatReturnsNull
            );
          for (var i = 0; i < e.length; i++) {
            var s = e[i];
            if ("function" != typeof s)
              return (
                o(
                  !1,
                  "Invalid argument supplid to oneOfType. Expected an array of check functions, but received %s at index %s.",
                  w(s),
                  i
                ),
                r.thatReturnsNull
              );
          }
          return h(n);
        }
        function y(e) {
          function t(t, n, r, i, o) {
            var s = t[n],
              c = x(s);
            if ("object" !== c)
              return new l(
                "Invalid " +
                  i +
                  " `" +
                  o +
                  "` of type `" +
                  c +
                  "` supplied to `" +
                  r +
                  "`, expected `object`."
              );
            for (var u in e) {
              var h = e[u];
              if (h) {
                var p = h(s, u, r, i, o + "." + u, a);
                if (p) return p;
              }
            }
            return null;
          }
          return h(t);
        }
        function _(t) {
          switch (typeof t) {
            case "number":
            case "string":
            case "undefined":
              return !0;
            case "boolean":
              return !t;
            case "object":
              if (Array.isArray(t)) return t.every(_);
              if (null === t || e(t)) return !0;
              var n = c(t);
              if (!n) return !1;
              var r,
                i = n.call(t);
              if (n !== t.entries) {
                for (; !(r = i.next()).done; ) if (!_(r.value)) return !1;
              } else
                for (; !(r = i.next()).done; ) {
                  var o = r.value;
                  if (o && !_(o[1])) return !1;
                }
              return !0;
            default:
              return !1;
          }
        }
        function b(e, t) {
          return (
            "symbol" === e ||
            "Symbol" === t["@@toStringTag"] ||
            ("function" == typeof Symbol && t instanceof Symbol)
          );
        }
        function x(e) {
          var t = typeof e;
          return Array.isArray(e)
            ? "array"
            : e instanceof RegExp
            ? "object"
            : b(t, e)
            ? "symbol"
            : t;
        }
        function E(e) {
          if (void 0 === e || null === e) return "" + e;
          var t = x(e);
          if ("object" === t) {
            if (e instanceof Date) return "date";
            if (e instanceof RegExp) return "regexp";
          }
          return t;
        }
        function w(e) {
          var t = E(e);
          switch (t) {
            case "array":
            case "object":
              return "an " + t;
            case "boolean":
            case "date":
            case "regexp":
              return "a " + t;
            default:
              return t;
          }
        }
        function M(e) {
          return e.constructor && e.constructor.name ? e.constructor.name : N;
        }
        var T = "function" == typeof Symbol && Symbol.iterator,
          S = "@@iterator",
          N = "<<anonymous>>",
          C = {
            array: p("array"),
            bool: p("boolean"),
            func: p("function"),
            number: p("number"),
            object: p("object"),
            string: p("string"),
            symbol: p("symbol"),
            any: (function () {
              return h(r.thatReturnsNull);
            })(),
            arrayOf: d,
            element: (function () {
              function t(t, n, r, i, o) {
                var a = t[n];
                if (!e(a)) {
                  return new l(
                    "Invalid " +
                      i +
                      " `" +
                      o +
                      "` of type `" +
                      x(a) +
                      "` supplied to `" +
                      r +
                      "`, expected a single ReactElement."
                  );
                }
                return null;
              }
              return h(t);
            })(),
            instanceOf: f,
            node: (function () {
              function e(e, t, n, r, i) {
                return _(e[t])
                  ? null
                  : new l(
                      "Invalid " +
                        r +
                        " `" +
                        i +
                        "` supplied to `" +
                        n +
                        "`, expected a ReactNode."
                    );
              }
              return h(e);
            })(),
            objectOf: v,
            oneOf: m,
            oneOfType: g,
            shape: y,
          };
        return (
          (l.prototype = Error.prototype),
          (C.checkPropTypes = s),
          (C.PropTypes = C),
          C
        );
      };
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n, r, c, u) {
        if ("production" !== t.env.NODE_ENV)
          for (var l in e)
            if (e.hasOwnProperty(l)) {
              var h;
              try {
                i(
                  "function" == typeof e[l],
                  "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
                  c || "React class",
                  r,
                  l
                ),
                  (h = e[l](n, l, c, r, null, a));
              } catch (e) {
                h = e;
              }
              if (
                (o(
                  !h || h instanceof Error,
                  "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",
                  c || "React class",
                  r,
                  l,
                  typeof h
                ),
                h instanceof Error && !(h.message in s))
              ) {
                s[h.message] = !0;
                var p = u ? u() : "";
                o(!1, "Failed %s type: %s%s", r, h.message, null != p ? p : "");
              }
            }
      }
      if ("production" !== t.env.NODE_ENV)
        var i = n(1),
          o = n(2),
          a = n(73),
          s = {};
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        var n = "";
        return (
          o.Children.forEach(e, function (e) {
            null != e &&
              ("string" == typeof e || "number" == typeof e
                ? (n += e)
                : u ||
                  ((u = !0),
                  "production" !== t.env.NODE_ENV &&
                    c(
                      !1,
                      "Only strings and numbers are supported as <option> children."
                    )));
          }),
          n
        );
      }
      var i = n(5),
        o = n(18),
        a = n(4),
        s = n(74),
        c = n(2),
        u = !1,
        l = {
          mountWrapper: function (e, n, i) {
            "production" !== t.env.NODE_ENV &&
              "production" !== t.env.NODE_ENV &&
              c(
                null == n.selected,
                "Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."
              );
            var o = null;
            if (null != i) {
              var a = i;
              "optgroup" === a._tag && (a = a._hostParent),
                null != a &&
                  "select" === a._tag &&
                  (o = s.getSelectValueContext(a));
            }
            var u = null;
            if (null != o) {
              var l;
              if (
                ((l = null != n.value ? n.value + "" : r(n.children)),
                (u = !1),
                Array.isArray(o))
              ) {
                for (var h = 0; h < o.length; h++)
                  if ("" + o[h] === l) {
                    u = !0;
                    break;
                  }
              } else u = "" + o === l;
            }
            e._wrapperState = { selected: u };
          },
          postMountWrapper: function (e) {
            var t = e._currentElement.props;
            if (null != t.value) {
              a.getNodeFromInstance(e).setAttribute("value", t.value);
            }
          },
          getHostProps: function (e, t) {
            var n = i({ selected: void 0, children: void 0 }, t);
            null != e._wrapperState.selected &&
              (n.selected = e._wrapperState.selected);
            var o = r(t.children);
            return o && (n.children = o), n;
          },
        };
      e.exports = l;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r() {
        this._rootNodeID && f.updateWrapper(this);
      }
      function i(e) {
        var t = this._currentElement.props,
          n = s.executeOnChange(t, e);
        return u.asap(r, this), n;
      }
      var o = n(3),
        a = n(5),
        s = n(44),
        c = n(4),
        u = n(11),
        l = n(1),
        h = n(2),
        p = !1,
        d = !1,
        f = {
          getHostProps: function (e, n) {
            return (
              null != n.dangerouslySetInnerHTML &&
                ("production" !== t.env.NODE_ENV
                  ? l(
                      !1,
                      "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                    )
                  : o("91")),
              a({}, n, {
                value: void 0,
                defaultValue: void 0,
                children: "" + e._wrapperState.initialValue,
                onChange: e._wrapperState.onChange,
              })
            );
          },
          mountWrapper: function (e, n) {
            "production" !== t.env.NODE_ENV &&
              (s.checkPropTypes("textarea", n, e._currentElement._owner),
              void 0 === n.valueLink ||
                p ||
                ("production" !== t.env.NODE_ENV &&
                  h(
                    !1,
                    "`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead."
                  ),
                (p = !0)),
              void 0 === n.value ||
                void 0 === n.defaultValue ||
                d ||
                ("production" !== t.env.NODE_ENV &&
                  h(
                    !1,
                    "Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://fb.me/react-controlled-components"
                  ),
                (d = !0)));
            var r = s.getValue(n),
              a = r;
            if (null == r) {
              var c = n.defaultValue,
                u = n.children;
              null != u &&
                ("production" !== t.env.NODE_ENV &&
                  "production" !== t.env.NODE_ENV &&
                  h(
                    !1,
                    "Use the `defaultValue` or `value` props instead of setting children on <textarea>."
                  ),
                null != c &&
                  ("production" !== t.env.NODE_ENV
                    ? l(
                        !1,
                        "If you supply `defaultValue` on a <textarea>, do not pass children."
                      )
                    : o("92")),
                Array.isArray(u) &&
                  (u.length <= 1 ||
                    ("production" !== t.env.NODE_ENV
                      ? l(!1, "<textarea> can only have at most one child.")
                      : o("93")),
                  (u = u[0])),
                (c = "" + u)),
                null == c && (c = ""),
                (a = c);
            }
            e._wrapperState = {
              initialValue: "" + a,
              listeners: null,
              onChange: i.bind(e),
            };
          },
          updateWrapper: function (e) {
            var t = e._currentElement.props,
              n = c.getNodeFromInstance(e),
              r = s.getValue(t);
            if (null != r) {
              var i = "" + r;
              i !== n.value && (n.value = i),
                null == t.defaultValue && (n.defaultValue = i);
            }
            null != t.defaultValue && (n.defaultValue = t.defaultValue);
          },
          postMountWrapper: function (e) {
            var t = c.getNodeFromInstance(e),
              n = t.textContent;
            n === e._wrapperState.initialValue && (t.value = n);
          },
        };
      e.exports = f;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t, n) {
        return {
          type: "INSERT_MARKUP",
          content: e,
          fromIndex: null,
          fromNode: null,
          toIndex: n,
          afterNode: t,
        };
      }
      function i(e, t, n) {
        return {
          type: "MOVE_EXISTING",
          content: null,
          fromIndex: e._mountIndex,
          fromNode: m.getHostNode(e),
          toIndex: n,
          afterNode: t,
        };
      }
      function o(e, t) {
        return {
          type: "REMOVE_NODE",
          content: null,
          fromIndex: e._mountIndex,
          fromNode: t,
          toIndex: null,
          afterNode: null,
        };
      }
      function a(e) {
        return {
          type: "SET_MARKUP",
          content: e,
          fromIndex: null,
          fromNode: null,
          toIndex: null,
          afterNode: null,
        };
      }
      function s(e) {
        return {
          type: "TEXT_CONTENT",
          content: e,
          fromIndex: null,
          fromNode: null,
          toIndex: null,
          afterNode: null,
        };
      }
      function c(e, t) {
        return t && ((e = e || []), e.push(t)), e;
      }
      function u(e, t) {
        h.processChildrenUpdates(e, t);
      }
      var l = n(3),
        h = n(45),
        p = n(25),
        d = n(8),
        f = n(9),
        m = n(20),
        v = n(148),
        g = n(10),
        y = n(155),
        _ = n(1),
        b = g;
      if ("production" !== t.env.NODE_ENV) {
        var x = function (e) {
          if (!e._debugID) {
            var t;
            (t = p.get(e)) && (e = t);
          }
          return e._debugID;
        };
        b = function (e) {
          var t = x(this);
          0 !== t &&
            d.debugTool.onSetChildren(
              t,
              e
                ? Object.keys(e).map(function (t) {
                    return e[t]._debugID;
                  })
                : []
            );
        };
      }
      var E = {
        Mixin: {
          _reconcilerInstantiateChildren: function (e, n, r) {
            if ("production" !== t.env.NODE_ENV) {
              var i = x(this);
              if (this._currentElement)
                try {
                  return (
                    (f.current = this._currentElement._owner),
                    v.instantiateChildren(e, n, r, i)
                  );
                } finally {
                  f.current = null;
                }
            }
            return v.instantiateChildren(e, n, r);
          },
          _reconcilerUpdateChildren: function (e, n, r, i, o, a) {
            var s,
              c = 0;
            if (
              "production" !== t.env.NODE_ENV &&
              ((c = x(this)), this._currentElement)
            ) {
              try {
                (f.current = this._currentElement._owner), (s = y(n, c));
              } finally {
                f.current = null;
              }
              return (
                v.updateChildren(
                  e,
                  s,
                  r,
                  i,
                  o,
                  this,
                  this._hostContainerInfo,
                  a,
                  c
                ),
                s
              );
            }
            return (
              (s = y(n, c)),
              v.updateChildren(
                e,
                s,
                r,
                i,
                o,
                this,
                this._hostContainerInfo,
                a,
                c
              ),
              s
            );
          },
          mountChildren: function (e, n, r) {
            var i = this._reconcilerInstantiateChildren(e, n, r);
            this._renderedChildren = i;
            var o = [],
              a = 0;
            for (var s in i)
              if (i.hasOwnProperty(s)) {
                var c = i[s],
                  u = 0;
                "production" !== t.env.NODE_ENV && (u = x(this));
                var l = m.mountComponent(
                  c,
                  n,
                  this,
                  this._hostContainerInfo,
                  r,
                  u
                );
                (c._mountIndex = a++), o.push(l);
              }
            return "production" !== t.env.NODE_ENV && b.call(this, i), o;
          },
          updateTextContent: function (e) {
            var n = this._renderedChildren;
            v.unmountChildren(n, !1);
            for (var r in n)
              n.hasOwnProperty(r) &&
                ("production" !== t.env.NODE_ENV
                  ? _(!1, "updateTextContent called on non-empty component.")
                  : l("118"));
            u(this, [s(e)]);
          },
          updateMarkup: function (e) {
            var n = this._renderedChildren;
            v.unmountChildren(n, !1);
            for (var r in n)
              n.hasOwnProperty(r) &&
                ("production" !== t.env.NODE_ENV
                  ? _(!1, "updateTextContent called on non-empty component.")
                  : l("118"));
            u(this, [a(e)]);
          },
          updateChildren: function (e, t, n) {
            this._updateChildren(e, t, n);
          },
          _updateChildren: function (e, n, r) {
            var i = this._renderedChildren,
              o = {},
              a = [],
              s = this._reconcilerUpdateChildren(i, e, a, o, n, r);
            if (s || i) {
              var l,
                h = null,
                p = 0,
                d = 0,
                f = 0,
                v = null;
              for (l in s)
                if (s.hasOwnProperty(l)) {
                  var g = i && i[l],
                    y = s[l];
                  g === y
                    ? ((h = c(h, this.moveChild(g, v, p, d))),
                      (d = Math.max(g._mountIndex, d)),
                      (g._mountIndex = p))
                    : (g && (d = Math.max(g._mountIndex, d)),
                      (h = c(h, this._mountChildAtIndex(y, a[f], v, p, n, r))),
                      f++),
                    p++,
                    (v = m.getHostNode(y));
                }
              for (l in o)
                o.hasOwnProperty(l) &&
                  (h = c(h, this._unmountChild(i[l], o[l])));
              h && u(this, h),
                (this._renderedChildren = s),
                "production" !== t.env.NODE_ENV && b.call(this, s);
            }
          },
          unmountChildren: function (e) {
            var t = this._renderedChildren;
            v.unmountChildren(t, e), (this._renderedChildren = null);
          },
          moveChild: function (e, t, n, r) {
            if (e._mountIndex < r) return i(e, t, n);
          },
          createChild: function (e, t, n) {
            return r(n, t, e._mountIndex);
          },
          removeChild: function (e, t) {
            return o(e, t);
          },
          _mountChildAtIndex: function (e, t, n, r, i, o) {
            return (e._mountIndex = r), this.createChild(e, n, t);
          },
          _unmountChild: function (e, t) {
            var n = this.removeChild(e, t);
            return (e._mountIndex = null), n;
          },
        },
      };
      e.exports = E;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, r, o, c) {
        var u = void 0 === e[o];
        "production" !== t.env.NODE_ENV &&
          (i || (i = n(7)),
          u ||
            ("production" !== t.env.NODE_ENV &&
              l(
                !1,
                "flattenChildren(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.%s",
                s.unescape(o),
                i.getStackAddendumByID(c)
              ))),
          null != r && u && (e[o] = a(r, !0));
      }
      var i,
        o = n(20),
        a = n(75),
        s = n(48),
        c = n(47),
        u = n(80),
        l = n(2);
      void 0 !== t && t.env && "test" === t.env.NODE_ENV && (i = n(7));
      var h = {
        instantiateChildren: function (e, n, i, o) {
          if (null == e) return null;
          var a = {};
          return (
            "production" !== t.env.NODE_ENV
              ? u(
                  e,
                  function (e, t, n) {
                    return r(e, t, n, o);
                  },
                  a
                )
              : u(e, r, a),
            a
          );
        },
        updateChildren: function (e, t, n, r, i, s, u, l, h) {
          if (t || e) {
            var p, d;
            for (p in t)
              if (t.hasOwnProperty(p)) {
                d = e && e[p];
                var f = d && d._currentElement,
                  m = t[p];
                if (null != d && c(f, m))
                  o.receiveComponent(d, m, i, l), (t[p] = d);
                else {
                  d && ((r[p] = o.getHostNode(d)), o.unmountComponent(d, !1));
                  var v = a(m, !0);
                  t[p] = v;
                  var g = o.mountComponent(v, i, s, u, l, h);
                  n.push(g);
                }
              }
            for (p in e)
              !e.hasOwnProperty(p) ||
                (t && t.hasOwnProperty(p)) ||
                ((d = e[p]),
                (r[p] = o.getHostNode(d)),
                o.unmountComponent(d, !1));
          }
        },
        unmountChildren: function (e, t) {
          for (var n in e)
            if (e.hasOwnProperty(n)) {
              var r = e[n];
              o.unmountComponent(r, t);
            }
        },
      };
      e.exports = h;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {}
      function i(e, n) {
        "production" !== t.env.NODE_ENV &&
          ("production" !== t.env.NODE_ENV &&
            w(
              null === n || !1 === n || l.isValidElement(n),
              "%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.",
              e.displayName || e.name || "Component"
            ),
          "production" !== t.env.NODE_ENV &&
            w(
              !e.childContextTypes,
              "%s(...): childContextTypes cannot be defined on a functional component.",
              e.displayName || e.name || "Component"
            ));
      }
      function o(e) {
        return !(!e.prototype || !e.prototype.isReactComponent);
      }
      function a(e) {
        return !(!e.prototype || !e.prototype.isPureReactComponent);
      }
      function s(e, t, n) {
        if (0 === t) return e();
        m.debugTool.onBeginLifeCycleTimer(t, n);
        try {
          return e();
        } finally {
          m.debugTool.onEndLifeCycleTimer(t, n);
        }
      }
      var c = n(3),
        u = n(5),
        l = n(18),
        h = n(45),
        p = n(9),
        d = n(37),
        f = n(25),
        m = n(8),
        v = n(76),
        g = n(20);
      if ("production" !== t.env.NODE_ENV) var y = n(150);
      var _ = n(77),
        b = n(1),
        x = n(46),
        E = n(47),
        w = n(2),
        M = { ImpureClass: 0, PureClass: 1, StatelessFunctional: 2 };
      r.prototype.render = function () {
        var e = f.get(this)._currentElement.type,
          t = e(this.props, this.context, this.updater);
        return i(e, t), t;
      };
      var T = 1,
        S = {
          construct: function (e) {
            (this._currentElement = e),
              (this._rootNodeID = 0),
              (this._compositeType = null),
              (this._instance = null),
              (this._hostParent = null),
              (this._hostContainerInfo = null),
              (this._updateBatchNumber = null),
              (this._pendingElement = null),
              (this._pendingStateQueue = null),
              (this._pendingReplaceState = !1),
              (this._pendingForceUpdate = !1),
              (this._renderedNodeType = null),
              (this._renderedComponent = null),
              (this._context = null),
              (this._mountOrder = 0),
              (this._topLevelWrapper = null),
              (this._pendingCallbacks = null),
              (this._calledComponentWillUnmount = !1),
              "production" !== t.env.NODE_ENV &&
                (this._warnedAboutRefsInRender = !1);
          },
          mountComponent: function (e, n, u, h) {
            var p = this;
            (this._context = h),
              (this._mountOrder = T++),
              (this._hostParent = n),
              (this._hostContainerInfo = u);
            var d,
              m = this._currentElement.props,
              v = this._processContext(h),
              g = this._currentElement.type,
              y = e.getUpdateQueue(),
              x = o(g),
              E = this._constructComponent(x, m, v, y);
            if (
              (x || (null != E && null != E.render)
                ? a(g)
                  ? (this._compositeType = M.PureClass)
                  : (this._compositeType = M.ImpureClass)
                : ((d = E),
                  i(g, d),
                  null === E ||
                    !1 === E ||
                    l.isValidElement(E) ||
                    ("production" !== t.env.NODE_ENV
                      ? b(
                          !1,
                          "%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.",
                          g.displayName || g.name || "Component"
                        )
                      : c("105", g.displayName || g.name || "Component")),
                  (E = new r(g)),
                  (this._compositeType = M.StatelessFunctional)),
              "production" !== t.env.NODE_ENV)
            ) {
              null == E.render &&
                "production" !== t.env.NODE_ENV &&
                w(
                  !1,
                  "%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.",
                  g.displayName || g.name || "Component"
                );
              var S = E.props !== m,
                N = g.displayName || g.name || "Component";
              "production" !== t.env.NODE_ENV &&
                w(
                  void 0 === E.props || !S,
                  "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.",
                  N,
                  N
                );
            }
            (E.props = m),
              (E.context = v),
              (E.refs = _),
              (E.updater = y),
              (this._instance = E),
              f.set(E, this),
              "production" !== t.env.NODE_ENV &&
                ("production" !== t.env.NODE_ENV &&
                  w(
                    !E.getInitialState ||
                      E.getInitialState.isReactClassApproved ||
                      E.state,
                    "getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?",
                    this.getName() || "a component"
                  ),
                "production" !== t.env.NODE_ENV &&
                  w(
                    !E.getDefaultProps ||
                      E.getDefaultProps.isReactClassApproved,
                    "getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.",
                    this.getName() || "a component"
                  ),
                "production" !== t.env.NODE_ENV &&
                  w(
                    !E.propTypes,
                    "propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.",
                    this.getName() || "a component"
                  ),
                "production" !== t.env.NODE_ENV &&
                  w(
                    !E.contextTypes,
                    "contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.",
                    this.getName() || "a component"
                  ),
                "production" !== t.env.NODE_ENV &&
                  w(
                    "function" != typeof E.componentShouldUpdate,
                    "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.",
                    this.getName() || "A component"
                  ),
                "production" !== t.env.NODE_ENV &&
                  w(
                    "function" != typeof E.componentDidUnmount,
                    "%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?",
                    this.getName() || "A component"
                  ),
                "production" !== t.env.NODE_ENV &&
                  w(
                    "function" != typeof E.componentWillRecieveProps,
                    "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
                    this.getName() || "A component"
                  ));
            var C = E.state;
            void 0 === C && (E.state = C = null),
              ("object" != typeof C || Array.isArray(C)) &&
                ("production" !== t.env.NODE_ENV
                  ? b(
                      !1,
                      "%s.state: must be set to an object or null",
                      this.getName() || "ReactCompositeComponent"
                    )
                  : c("106", this.getName() || "ReactCompositeComponent")),
              (this._pendingStateQueue = null),
              (this._pendingReplaceState = !1),
              (this._pendingForceUpdate = !1);
            var A;
            return (
              (A = E.unstable_handleError
                ? this.performInitialMountWithErrorHandling(d, n, u, e, h)
                : this.performInitialMount(d, n, u, e, h)),
              E.componentDidMount &&
                ("production" !== t.env.NODE_ENV
                  ? e.getReactMountReady().enqueue(function () {
                      s(
                        function () {
                          return E.componentDidMount();
                        },
                        p._debugID,
                        "componentDidMount"
                      );
                    })
                  : e.getReactMountReady().enqueue(E.componentDidMount, E)),
              A
            );
          },
          _constructComponent: function (e, n, r, i) {
            if ("production" === t.env.NODE_ENV)
              return this._constructComponentWithoutOwner(e, n, r, i);
            p.current = this;
            try {
              return this._constructComponentWithoutOwner(e, n, r, i);
            } finally {
              p.current = null;
            }
          },
          _constructComponentWithoutOwner: function (e, n, r, i) {
            var o = this._currentElement.type;
            return e
              ? "production" !== t.env.NODE_ENV
                ? s(
                    function () {
                      return new o(n, r, i);
                    },
                    this._debugID,
                    "ctor"
                  )
                : new o(n, r, i)
              : "production" !== t.env.NODE_ENV
              ? s(
                  function () {
                    return o(n, r, i);
                  },
                  this._debugID,
                  "render"
                )
              : o(n, r, i);
          },
          performInitialMountWithErrorHandling: function (e, t, n, r, i) {
            var o,
              a = r.checkpoint();
            try {
              o = this.performInitialMount(e, t, n, r, i);
            } catch (s) {
              r.rollback(a),
                this._instance.unstable_handleError(s),
                this._pendingStateQueue &&
                  (this._instance.state = this._processPendingState(
                    this._instance.props,
                    this._instance.context
                  )),
                (a = r.checkpoint()),
                this._renderedComponent.unmountComponent(!0),
                r.rollback(a),
                (o = this.performInitialMount(e, t, n, r, i));
            }
            return o;
          },
          performInitialMount: function (e, n, r, i, o) {
            var a = this._instance,
              c = 0;
            "production" !== t.env.NODE_ENV && (c = this._debugID),
              a.componentWillMount &&
                ("production" !== t.env.NODE_ENV
                  ? s(
                      function () {
                        return a.componentWillMount();
                      },
                      c,
                      "componentWillMount"
                    )
                  : a.componentWillMount(),
                this._pendingStateQueue &&
                  (a.state = this._processPendingState(a.props, a.context))),
              void 0 === e && (e = this._renderValidatedComponent());
            var u = v.getType(e);
            this._renderedNodeType = u;
            var l = this._instantiateReactComponent(e, u !== v.EMPTY);
            this._renderedComponent = l;
            var h = g.mountComponent(
              l,
              i,
              n,
              r,
              this._processChildContext(o),
              c
            );
            if ("production" !== t.env.NODE_ENV && 0 !== c) {
              var p = 0 !== l._debugID ? [l._debugID] : [];
              m.debugTool.onSetChildren(c, p);
            }
            return h;
          },
          getHostNode: function () {
            return g.getHostNode(this._renderedComponent);
          },
          unmountComponent: function (e) {
            if (this._renderedComponent) {
              var n = this._instance;
              if (n.componentWillUnmount && !n._calledComponentWillUnmount)
                if (((n._calledComponentWillUnmount = !0), e)) {
                  var r = this.getName() + ".componentWillUnmount()";
                  d.invokeGuardedCallback(r, n.componentWillUnmount.bind(n));
                } else
                  "production" !== t.env.NODE_ENV
                    ? s(
                        function () {
                          return n.componentWillUnmount();
                        },
                        this._debugID,
                        "componentWillUnmount"
                      )
                    : n.componentWillUnmount();
              this._renderedComponent &&
                (g.unmountComponent(this._renderedComponent, e),
                (this._renderedNodeType = null),
                (this._renderedComponent = null),
                (this._instance = null)),
                (this._pendingStateQueue = null),
                (this._pendingReplaceState = !1),
                (this._pendingForceUpdate = !1),
                (this._pendingCallbacks = null),
                (this._pendingElement = null),
                (this._context = null),
                (this._rootNodeID = 0),
                (this._topLevelWrapper = null),
                f.remove(n);
            }
          },
          _maskContext: function (e) {
            var t = this._currentElement.type,
              n = t.contextTypes;
            if (!n) return _;
            var r = {};
            for (var i in n) r[i] = e[i];
            return r;
          },
          _processContext: function (e) {
            var n = this._maskContext(e);
            if ("production" !== t.env.NODE_ENV) {
              var r = this._currentElement.type;
              r.contextTypes &&
                this._checkContextTypes(r.contextTypes, n, "context");
            }
            return n;
          },
          _processChildContext: function (e) {
            var n,
              r = this._currentElement.type,
              i = this._instance;
            if (i.getChildContext)
              if ("production" !== t.env.NODE_ENV) {
                m.debugTool.onBeginProcessingChildContext();
                try {
                  n = i.getChildContext();
                } finally {
                  m.debugTool.onEndProcessingChildContext();
                }
              } else n = i.getChildContext();
            if (n) {
              "object" != typeof r.childContextTypes &&
                ("production" !== t.env.NODE_ENV
                  ? b(
                      !1,
                      "%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().",
                      this.getName() || "ReactCompositeComponent"
                    )
                  : c("107", this.getName() || "ReactCompositeComponent")),
                "production" !== t.env.NODE_ENV &&
                  this._checkContextTypes(
                    r.childContextTypes,
                    n,
                    "child context"
                  );
              for (var o in n)
                o in r.childContextTypes ||
                  ("production" !== t.env.NODE_ENV
                    ? b(
                        !1,
                        '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
                        this.getName() || "ReactCompositeComponent",
                        o
                      )
                    : c("108", this.getName() || "ReactCompositeComponent", o));
              return u({}, e, n);
            }
            return e;
          },
          _checkContextTypes: function (e, n, r) {
            "production" !== t.env.NODE_ENV &&
              y(e, n, r, this.getName(), null, this._debugID);
          },
          receiveComponent: function (e, t, n) {
            var r = this._currentElement,
              i = this._context;
            (this._pendingElement = null), this.updateComponent(t, r, e, i, n);
          },
          performUpdateIfNecessary: function (e) {
            null != this._pendingElement
              ? g.receiveComponent(this, this._pendingElement, e, this._context)
              : null !== this._pendingStateQueue || this._pendingForceUpdate
              ? this.updateComponent(
                  e,
                  this._currentElement,
                  this._currentElement,
                  this._context,
                  this._context
                )
              : (this._updateBatchNumber = null);
          },
          updateComponent: function (e, n, r, i, o) {
            var a = this._instance;
            null == a &&
              ("production" !== t.env.NODE_ENV
                ? b(
                    !1,
                    "Attempted to update component `%s` that has already been unmounted (or failed to mount).",
                    this.getName() || "ReactCompositeComponent"
                  )
                : c("136", this.getName() || "ReactCompositeComponent"));
            var u,
              l = !1;
            this._context === o
              ? (u = a.context)
              : ((u = this._processContext(o)), (l = !0));
            var h = n.props,
              p = r.props;
            n !== r && (l = !0),
              l &&
                a.componentWillReceiveProps &&
                ("production" !== t.env.NODE_ENV
                  ? s(
                      function () {
                        return a.componentWillReceiveProps(p, u);
                      },
                      this._debugID,
                      "componentWillReceiveProps"
                    )
                  : a.componentWillReceiveProps(p, u));
            var d = this._processPendingState(p, u),
              f = !0;
            this._pendingForceUpdate ||
              (a.shouldComponentUpdate
                ? (f =
                    "production" !== t.env.NODE_ENV
                      ? s(
                          function () {
                            return a.shouldComponentUpdate(p, d, u);
                          },
                          this._debugID,
                          "shouldComponentUpdate"
                        )
                      : a.shouldComponentUpdate(p, d, u))
                : this._compositeType === M.PureClass &&
                  (f = !x(h, p) || !x(a.state, d))),
              "production" !== t.env.NODE_ENV &&
                "production" !== t.env.NODE_ENV &&
                w(
                  void 0 !== f,
                  "%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.",
                  this.getName() || "ReactCompositeComponent"
                ),
              (this._updateBatchNumber = null),
              f
                ? ((this._pendingForceUpdate = !1),
                  this._performComponentUpdate(r, p, d, u, e, o))
                : ((this._currentElement = r),
                  (this._context = o),
                  (a.props = p),
                  (a.state = d),
                  (a.context = u));
          },
          _processPendingState: function (e, t) {
            var n = this._instance,
              r = this._pendingStateQueue,
              i = this._pendingReplaceState;
            if (
              ((this._pendingReplaceState = !1),
              (this._pendingStateQueue = null),
              !r)
            )
              return n.state;
            if (i && 1 === r.length) return r[0];
            for (
              var o = u({}, i ? r[0] : n.state), a = i ? 1 : 0;
              a < r.length;
              a++
            ) {
              var s = r[a];
              u(o, "function" == typeof s ? s.call(n, o, e, t) : s);
            }
            return o;
          },
          _performComponentUpdate: function (e, n, r, i, o, a) {
            var c,
              u,
              l,
              h = this,
              p = this._instance,
              d = Boolean(p.componentDidUpdate);
            d && ((c = p.props), (u = p.state), (l = p.context)),
              p.componentWillUpdate &&
                ("production" !== t.env.NODE_ENV
                  ? s(
                      function () {
                        return p.componentWillUpdate(n, r, i);
                      },
                      this._debugID,
                      "componentWillUpdate"
                    )
                  : p.componentWillUpdate(n, r, i)),
              (this._currentElement = e),
              (this._context = a),
              (p.props = n),
              (p.state = r),
              (p.context = i),
              this._updateRenderedComponent(o, a),
              d &&
                ("production" !== t.env.NODE_ENV
                  ? o.getReactMountReady().enqueue(function () {
                      s(
                        p.componentDidUpdate.bind(p, c, u, l),
                        h._debugID,
                        "componentDidUpdate"
                      );
                    })
                  : o
                      .getReactMountReady()
                      .enqueue(p.componentDidUpdate.bind(p, c, u, l), p));
          },
          _updateRenderedComponent: function (e, n) {
            var r = this._renderedComponent,
              i = r._currentElement,
              o = this._renderValidatedComponent(),
              a = 0;
            if (
              ("production" !== t.env.NODE_ENV && (a = this._debugID), E(i, o))
            )
              g.receiveComponent(r, o, e, this._processChildContext(n));
            else {
              var s = g.getHostNode(r);
              g.unmountComponent(r, !1);
              var c = v.getType(o);
              this._renderedNodeType = c;
              var u = this._instantiateReactComponent(o, c !== v.EMPTY);
              this._renderedComponent = u;
              var l = g.mountComponent(
                u,
                e,
                this._hostParent,
                this._hostContainerInfo,
                this._processChildContext(n),
                a
              );
              if ("production" !== t.env.NODE_ENV && 0 !== a) {
                var h = 0 !== u._debugID ? [u._debugID] : [];
                m.debugTool.onSetChildren(a, h);
              }
              this._replaceNodeWithMarkup(s, l, r);
            }
          },
          _replaceNodeWithMarkup: function (e, t, n) {
            h.replaceNodeWithMarkup(e, t, n);
          },
          _renderValidatedComponentWithoutOwnerOrContext: function () {
            var e,
              n = this._instance;
            return (
              (e =
                "production" !== t.env.NODE_ENV
                  ? s(
                      function () {
                        return n.render();
                      },
                      this._debugID,
                      "render"
                    )
                  : n.render()),
              "production" !== t.env.NODE_ENV &&
                void 0 === e &&
                n.render._isMockFunction &&
                (e = null),
              e
            );
          },
          _renderValidatedComponent: function () {
            var e;
            if (
              "production" !== t.env.NODE_ENV ||
              this._compositeType !== M.StatelessFunctional
            ) {
              p.current = this;
              try {
                e = this._renderValidatedComponentWithoutOwnerOrContext();
              } finally {
                p.current = null;
              }
            } else e = this._renderValidatedComponentWithoutOwnerOrContext();
            return (
              null === e ||
                !1 === e ||
                l.isValidElement(e) ||
                ("production" !== t.env.NODE_ENV
                  ? b(
                      !1,
                      "%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.",
                      this.getName() || "ReactCompositeComponent"
                    )
                  : c("109", this.getName() || "ReactCompositeComponent")),
              e
            );
          },
          attachRef: function (e, n) {
            var r = this.getPublicInstance();
            null == r &&
              ("production" !== t.env.NODE_ENV
                ? b(!1, "Stateless function components cannot have refs.")
                : c("110"));
            var i = n.getPublicInstance();
            if ("production" !== t.env.NODE_ENV) {
              var o = n && n.getName ? n.getName() : "a component";
              "production" !== t.env.NODE_ENV &&
                w(
                  null != i || n._compositeType !== M.StatelessFunctional,
                  'Stateless function components cannot be given refs (See ref "%s" in %s created by %s). Attempts to access this ref will fail.',
                  e,
                  o,
                  this.getName()
                );
            }
            (r.refs === _ ? (r.refs = {}) : r.refs)[e] = i;
          },
          detachRef: function (e) {
            delete this.getPublicInstance().refs[e];
          },
          getName: function () {
            var e = this._currentElement.type,
              t = this._instance && this._instance.constructor;
            return (
              e.displayName ||
              (t && t.displayName) ||
              e.name ||
              (t && t.name) ||
              null
            );
          },
          getPublicInstance: function () {
            var e = this._instance;
            return this._compositeType === M.StatelessFunctional ? null : e;
          },
          _instantiateReactComponent: null,
        };
      e.exports = S;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, r, h, p, d, f) {
        for (var m in e)
          if (e.hasOwnProperty(m)) {
            var v;
            try {
              "function" != typeof e[m] &&
                ("production" !== t.env.NODE_ENV
                  ? c(
                      !1,
                      "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
                      p || "React class",
                      a[h],
                      m
                    )
                  : o("84", p || "React class", a[h], m)),
                (v = e[m](r, m, p, h, null, s));
            } catch (e) {
              v = e;
            }
            if (
              ("production" !== t.env.NODE_ENV &&
                u(
                  !v || v instanceof Error,
                  "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",
                  p || "React class",
                  a[h],
                  m,
                  typeof v
                ),
              v instanceof Error && !(v.message in l))
            ) {
              l[v.message] = !0;
              var g = "";
              "production" !== t.env.NODE_ENV &&
                (i || (i = n(7)),
                null !== f
                  ? (g = i.getStackAddendumByID(f))
                  : null !== d && (g = i.getCurrentStackAddendum(d))),
                "production" !== t.env.NODE_ENV &&
                  u(!1, "Failed %s type: %s%s", h, v.message, g);
            }
          }
      }
      var i,
        o = n(3),
        a = n(151),
        s = n(72),
        c = n(1),
        u = n(2);
      void 0 !== t && t.env && "test" === t.env.NODE_ENV && (i = n(7));
      var l = {};
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var n = {};
      "production" !== t.env.NODE_ENV &&
        (n = {
          prop: "prop",
          context: "context",
          childContext: "child context",
        }),
        (e.exports = n);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r() {
      return i++;
    }
    var i = 1;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r =
      ("function" == typeof Symbol &&
        Symbol.for &&
        Symbol.for("react.element")) ||
      60103;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = e && ((i && e[i]) || e[o]);
      if ("function" == typeof t) return t;
    }
    var i = "function" == typeof Symbol && Symbol.iterator,
      o = "@@iterator";
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, r, i, s) {
        if (e && "object" == typeof e) {
          var u = e,
            l = void 0 === u[i];
          "production" !== t.env.NODE_ENV &&
            (o || (o = n(7)),
            l ||
              ("production" !== t.env.NODE_ENV &&
                c(
                  !1,
                  "flattenChildren(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.%s",
                  a.unescape(i),
                  o.getStackAddendumByID(s)
                ))),
            l && null != r && (u[i] = r);
        }
      }
      function i(e, n) {
        if (null == e) return e;
        var i = {};
        return (
          "production" !== t.env.NODE_ENV
            ? s(
                e,
                function (e, t, i) {
                  return r(e, t, i, n);
                },
                i
              )
            : s(e, r, i),
          i
        );
      }
      var o,
        a = n(48),
        s = n(80),
        c = n(2);
      void 0 !== t && t.env && "test" === t.env.NODE_ENV && (o = n(7)),
        (e.exports = i);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        this.reinitializeTransaction(),
          (this.renderToStaticMarkup = e),
          (this.useCreateElement = !1),
          (this.updateQueue = new c(this));
      }
      var i = n(5),
        o = n(17),
        a = n(29),
        s = n(8),
        c = n(157),
        u = [];
      "production" !== t.env.NODE_ENV &&
        u.push({
          initialize: s.debugTool.onBeginFlush,
          close: s.debugTool.onEndFlush,
        });
      var l = { enqueue: function () {} },
        h = {
          getTransactionWrappers: function () {
            return u;
          },
          getReactMountReady: function () {
            return l;
          },
          getUpdateQueue: function () {
            return this.updateQueue;
          },
          destructor: function () {},
          checkpoint: function () {},
          rollback: function () {},
        };
      i(r.prototype, a, h), o.addPoolingTo(r), (e.exports = r);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function i(e, n) {
        if ("production" !== t.env.NODE_ENV) {
          var r = e.constructor;
          "production" !== t.env.NODE_ENV &&
            a(
              !1,
              "%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op. Please check the code for the %s component.",
              n,
              n,
              (r && (r.displayName || r.name)) || "ReactClass"
            );
        }
      }
      var o = n(49),
        a = n(2),
        s = (function () {
          function e(t) {
            r(this, e), (this.transaction = t);
          }
          return (
            (e.prototype.isMounted = function (e) {
              return !1;
            }),
            (e.prototype.enqueueCallback = function (e, t, n) {
              this.transaction.isInTransaction() && o.enqueueCallback(e, t, n);
            }),
            (e.prototype.enqueueForceUpdate = function (e) {
              this.transaction.isInTransaction()
                ? o.enqueueForceUpdate(e)
                : i(e, "forceUpdate");
            }),
            (e.prototype.enqueueReplaceState = function (e, t) {
              this.transaction.isInTransaction()
                ? o.enqueueReplaceState(e, t)
                : i(e, "replaceState");
            }),
            (e.prototype.enqueueSetState = function (e, t) {
              this.transaction.isInTransaction()
                ? o.enqueueSetState(e, t)
                : i(e, "setState");
            }),
            e
          );
        })();
      e.exports = s;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = n(5),
      i = n(21),
      o = n(4),
      a = function (e) {
        (this._currentElement = null),
          (this._hostNode = null),
          (this._hostParent = null),
          (this._hostContainerInfo = null),
          (this._domID = 0);
      };
    r(a.prototype, {
      mountComponent: function (e, t, n, r) {
        var a = n._idCounter++;
        (this._domID = a),
          (this._hostParent = t),
          (this._hostContainerInfo = n);
        var s = " react-empty: " + this._domID + " ";
        if (e.useCreateElement) {
          var c = n._ownerDocument,
            u = c.createComment(s);
          return o.precacheNode(this, u), i(u);
        }
        return e.renderToStaticMarkup ? "" : "\x3c!--" + s + "--\x3e";
      },
      receiveComponent: function () {},
      getHostNode: function () {
        return o.getNodeFromInstance(this);
      },
      unmountComponent: function () {
        o.uncacheNode(this);
      },
    }),
      (e.exports = a);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n) {
        "_hostNode" in e ||
          ("production" !== t.env.NODE_ENV
            ? u(!1, "getNodeFromInstance: Invalid argument.")
            : c("33")),
          "_hostNode" in n ||
            ("production" !== t.env.NODE_ENV
              ? u(!1, "getNodeFromInstance: Invalid argument.")
              : c("33"));
        for (var r = 0, i = e; i; i = i._hostParent) r++;
        for (var o = 0, a = n; a; a = a._hostParent) o++;
        for (; r - o > 0; ) (e = e._hostParent), r--;
        for (; o - r > 0; ) (n = n._hostParent), o--;
        for (var s = r; s--; ) {
          if (e === n) return e;
          (e = e._hostParent), (n = n._hostParent);
        }
        return null;
      }
      function i(e, n) {
        "_hostNode" in e ||
          ("production" !== t.env.NODE_ENV
            ? u(!1, "isAncestor: Invalid argument.")
            : c("35")),
          "_hostNode" in n ||
            ("production" !== t.env.NODE_ENV
              ? u(!1, "isAncestor: Invalid argument.")
              : c("35"));
        for (; n; ) {
          if (n === e) return !0;
          n = n._hostParent;
        }
        return !1;
      }
      function o(e) {
        return (
          "_hostNode" in e ||
            ("production" !== t.env.NODE_ENV
              ? u(!1, "getParentInstance: Invalid argument.")
              : c("36")),
          e._hostParent
        );
      }
      function a(e, t, n) {
        for (var r = []; e; ) r.push(e), (e = e._hostParent);
        var i;
        for (i = r.length; i-- > 0; ) t(r[i], "captured", n);
        for (i = 0; i < r.length; i++) t(r[i], "bubbled", n);
      }
      function s(e, t, n, i, o) {
        for (var a = e && t ? r(e, t) : null, s = []; e && e !== a; )
          s.push(e), (e = e._hostParent);
        for (var c = []; t && t !== a; ) c.push(t), (t = t._hostParent);
        var u;
        for (u = 0; u < s.length; u++) n(s[u], "bubbled", i);
        for (u = c.length; u-- > 0; ) n(c[u], "captured", o);
      }
      var c = n(3),
        u = n(1);
      e.exports = {
        isAncestor: i,
        getLowestCommonAncestor: r,
        getParentInstance: o,
        traverseTwoPhase: a,
        traverseEnterLeave: s,
      };
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      var r = n(3),
        i = n(5),
        o = n(41),
        a = n(21),
        s = n(4),
        c = n(32),
        u = n(1),
        l = n(50),
        h = function (e) {
          (this._currentElement = e),
            (this._stringText = "" + e),
            (this._hostNode = null),
            (this._hostParent = null),
            (this._domID = 0),
            (this._mountIndex = 0),
            (this._closingComment = null),
            (this._commentNodes = null);
        };
      i(h.prototype, {
        mountComponent: function (e, n, r, i) {
          if ("production" !== t.env.NODE_ENV) {
            var o;
            null != n
              ? (o = n._ancestorInfo)
              : null != r && (o = r._ancestorInfo),
              o && l(null, this._stringText, this, o);
          }
          var u = r._idCounter++,
            h = " react-text: " + u + " ";
          if (((this._domID = u), (this._hostParent = n), e.useCreateElement)) {
            var p = r._ownerDocument,
              d = p.createComment(h),
              f = p.createComment(" /react-text "),
              m = a(p.createDocumentFragment());
            return (
              a.queueChild(m, a(d)),
              this._stringText &&
                a.queueChild(m, a(p.createTextNode(this._stringText))),
              a.queueChild(m, a(f)),
              s.precacheNode(this, d),
              (this._closingComment = f),
              m
            );
          }
          var v = c(this._stringText);
          return e.renderToStaticMarkup
            ? v
            : "\x3c!--" + h + "--\x3e" + v + "\x3c!-- /react-text --\x3e";
        },
        receiveComponent: function (e, t) {
          if (e !== this._currentElement) {
            this._currentElement = e;
            var n = "" + e;
            if (n !== this._stringText) {
              this._stringText = n;
              var r = this.getHostNode();
              o.replaceDelimitedText(r[0], r[1], n);
            }
          }
        },
        getHostNode: function () {
          var e = this._commentNodes;
          if (e) return e;
          if (!this._closingComment)
            for (var n = s.getNodeFromInstance(this), i = n.nextSibling; ; ) {
              if (
                (null == i &&
                  ("production" !== t.env.NODE_ENV
                    ? u(
                        !1,
                        "Missing closing comment for text component %s",
                        this._domID
                      )
                    : r("67", this._domID)),
                8 === i.nodeType && " /react-text " === i.nodeValue)
              ) {
                this._closingComment = i;
                break;
              }
              i = i.nextSibling;
            }
          return (
            (e = [this._hostNode, this._closingComment]),
            (this._commentNodes = e),
            e
          );
        },
        unmountComponent: function () {
          (this._closingComment = null),
            (this._commentNodes = null),
            s.uncacheNode(this);
        },
      }),
        (e.exports = h);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r() {
      this.reinitializeTransaction();
    }
    var i = n(5),
      o = n(11),
      a = n(29),
      s = n(10),
      c = {
        initialize: s,
        close: function () {
          p.isBatchingUpdates = !1;
        },
      },
      u = { initialize: s, close: o.flushBatchedUpdates.bind(o) },
      l = [u, c];
    i(r.prototype, a, {
      getTransactionWrappers: function () {
        return l;
      },
    });
    var h = new r(),
      p = {
        isBatchingUpdates: !1,
        batchedUpdates: function (e, t, n, r, i, o) {
          var a = p.isBatchingUpdates;
          return (
            (p.isBatchingUpdates = !0),
            a ? e(t, n, r, i, o) : h.perform(e, null, t, n, r, i, o)
          );
        },
      };
    e.exports = p;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      for (; e._hostParent; ) e = e._hostParent;
      var t = h.getNodeFromInstance(e),
        n = t.parentNode;
      return h.getClosestInstanceFromNode(n);
    }
    function i(e, t) {
      (this.topLevelType = e), (this.nativeEvent = t), (this.ancestors = []);
    }
    function o(e) {
      var t = d(e.nativeEvent),
        n = h.getClosestInstanceFromNode(t),
        i = n;
      do {
        e.ancestors.push(i), (i = i && r(i));
      } while (i);
      for (var o = 0; o < e.ancestors.length; o++)
        (n = e.ancestors[o]),
          m._handleTopLevel(e.topLevelType, n, e.nativeEvent, d(e.nativeEvent));
    }
    function a(e) {
      e(f(window));
    }
    var s = n(5),
      c = n(81),
      u = n(6),
      l = n(17),
      h = n(4),
      p = n(11),
      d = n(38),
      f = n(163);
    s(i.prototype, {
      destructor: function () {
        (this.topLevelType = null),
          (this.nativeEvent = null),
          (this.ancestors.length = 0);
      },
    }),
      l.addPoolingTo(i, l.twoArgumentPooler);
    var m = {
      _enabled: !0,
      _handleTopLevel: null,
      WINDOW_HANDLE: u.canUseDOM ? window : null,
      setHandleTopLevel: function (e) {
        m._handleTopLevel = e;
      },
      setEnabled: function (e) {
        m._enabled = !!e;
      },
      isEnabled: function () {
        return m._enabled;
      },
      trapBubbledEvent: function (e, t, n) {
        return n ? c.listen(n, t, m.dispatchEvent.bind(null, e)) : null;
      },
      trapCapturedEvent: function (e, t, n) {
        return n ? c.capture(n, t, m.dispatchEvent.bind(null, e)) : null;
      },
      monitorScrollValue: function (e) {
        var t = a.bind(null, e);
        c.listen(window, "scroll", t);
      },
      dispatchEvent: function (e, t) {
        if (m._enabled) {
          var n = i.getPooled(e, t);
          try {
            p.batchedUpdates(o, n);
          } finally {
            i.release(n);
          }
        }
      },
    };
    e.exports = m;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return e.Window && e instanceof e.Window
        ? {
            x: e.pageXOffset || e.document.documentElement.scrollLeft,
            y: e.pageYOffset || e.document.documentElement.scrollTop,
          }
        : { x: e.scrollLeft, y: e.scrollTop };
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r = n(15),
      i = n(23),
      o = n(36),
      a = n(45),
      s = n(78),
      c = n(33),
      u = n(79),
      l = n(11),
      h = {
        Component: a.injection,
        DOMProperty: r.injection,
        EmptyComponent: s.injection,
        EventPluginHub: i.injection,
        EventPluginUtils: o.injection,
        EventEmitter: c.injection,
        HostComponent: u.injection,
        Updates: l.injection,
      };
    e.exports = h;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        this.reinitializeTransaction(),
          (this.renderToStaticMarkup = !1),
          (this.reactMountReady = o.getPooled(null)),
          (this.useCreateElement = e);
      }
      var i = n(5),
        o = n(63),
        a = n(17),
        s = n(33),
        c = n(82),
        u = n(8),
        l = n(29),
        h = n(49),
        p = {
          initialize: c.getSelectionInformation,
          close: c.restoreSelection,
        },
        d = {
          initialize: function () {
            var e = s.isEnabled();
            return s.setEnabled(!1), e;
          },
          close: function (e) {
            s.setEnabled(e);
          },
        },
        f = {
          initialize: function () {
            this.reactMountReady.reset();
          },
          close: function () {
            this.reactMountReady.notifyAll();
          },
        },
        m = [p, d, f];
      "production" !== t.env.NODE_ENV &&
        m.push({
          initialize: u.debugTool.onBeginFlush,
          close: u.debugTool.onEndFlush,
        });
      var v = {
        getTransactionWrappers: function () {
          return m;
        },
        getReactMountReady: function () {
          return this.reactMountReady;
        },
        getUpdateQueue: function () {
          return h;
        },
        checkpoint: function () {
          return this.reactMountReady.checkpoint();
        },
        rollback: function (e) {
          this.reactMountReady.rollback(e);
        },
        destructor: function () {
          o.release(this.reactMountReady), (this.reactMountReady = null);
        },
      };
      i(r.prototype, l, v), a.addPoolingTo(r), (e.exports = r);
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return e === n && t === r;
    }
    function i(e) {
      var t = document.selection,
        n = t.createRange(),
        r = n.text.length,
        i = n.duplicate();
      i.moveToElementText(e), i.setEndPoint("EndToStart", n);
      var o = i.text.length;
      return { start: o, end: o + r };
    }
    function o(e) {
      var t = window.getSelection && window.getSelection();
      if (!t || 0 === t.rangeCount) return null;
      var n = t.anchorNode,
        i = t.anchorOffset,
        o = t.focusNode,
        a = t.focusOffset,
        s = t.getRangeAt(0);
      try {
        s.startContainer.nodeType, s.endContainer.nodeType;
      } catch (e) {
        return null;
      }
      var c = r(t.anchorNode, t.anchorOffset, t.focusNode, t.focusOffset),
        u = c ? 0 : s.toString().length,
        l = s.cloneRange();
      l.selectNodeContents(e), l.setEnd(s.startContainer, s.startOffset);
      var h = r(l.startContainer, l.startOffset, l.endContainer, l.endOffset),
        p = h ? 0 : l.toString().length,
        d = p + u,
        f = document.createRange();
      f.setStart(n, i), f.setEnd(o, a);
      var m = f.collapsed;
      return { start: m ? d : p, end: m ? p : d };
    }
    function a(e, t) {
      var n,
        r,
        i = document.selection.createRange().duplicate();
      void 0 === t.end
        ? ((n = t.start), (r = n))
        : t.start > t.end
        ? ((n = t.end), (r = t.start))
        : ((n = t.start), (r = t.end)),
        i.moveToElementText(e),
        i.moveStart("character", n),
        i.setEndPoint("EndToStart", i),
        i.moveEnd("character", r - n),
        i.select();
    }
    function s(e, t) {
      if (window.getSelection) {
        var n = window.getSelection(),
          r = e[l()].length,
          i = Math.min(t.start, r),
          o = void 0 === t.end ? i : Math.min(t.end, r);
        if (!n.extend && i > o) {
          var a = o;
          (o = i), (i = a);
        }
        var s = u(e, i),
          c = u(e, o);
        if (s && c) {
          var h = document.createRange();
          h.setStart(s.node, s.offset),
            n.removeAllRanges(),
            i > o
              ? (n.addRange(h), n.extend(c.node, c.offset))
              : (h.setEnd(c.node, c.offset), n.addRange(h));
        }
      }
    }
    var c = n(6),
      u = n(167),
      l = n(62),
      h = c.canUseDOM && "selection" in document && !("getSelection" in window),
      p = { getOffsets: h ? i : o, setOffsets: h ? a : s };
    e.exports = p;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      for (; e && e.firstChild; ) e = e.firstChild;
      return e;
    }
    function i(e) {
      for (; e; ) {
        if (e.nextSibling) return e.nextSibling;
        e = e.parentNode;
      }
    }
    function o(e, t) {
      for (var n = r(e), o = 0, a = 0; n; ) {
        if (3 === n.nodeType) {
          if (((a = o + n.textContent.length), o <= t && a >= t))
            return { node: n, offset: t - o };
          o = a;
        }
        n = r(i(n));
      }
    }
    e.exports = o;
  },
  function (e, t, n) {
    "use strict";
    function r(e, t) {
      return (
        !(!e || !t) &&
        (e === t ||
          (!i(e) &&
            (i(t)
              ? r(e, t.parentNode)
              : "contains" in e
              ? e.contains(t)
              : !!e.compareDocumentPosition &&
                !!(16 & e.compareDocumentPosition(t)))))
      );
    }
    var i = n(169);
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      return i(e) && 3 == e.nodeType;
    }
    var i = n(170);
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      var t = e ? e.ownerDocument || e : document,
        n = t.defaultView || window;
      return !(
        !e ||
        !("function" == typeof n.Node
          ? e instanceof n.Node
          : "object" == typeof e &&
            "number" == typeof e.nodeType &&
            "string" == typeof e.nodeName)
      );
    }
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r = {
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
      },
      i = {
        accentHeight: "accent-height",
        accumulate: 0,
        additive: 0,
        alignmentBaseline: "alignment-baseline",
        allowReorder: "allowReorder",
        alphabetic: 0,
        amplitude: 0,
        arabicForm: "arabic-form",
        ascent: 0,
        attributeName: "attributeName",
        attributeType: "attributeType",
        autoReverse: "autoReverse",
        azimuth: 0,
        baseFrequency: "baseFrequency",
        baseProfile: "baseProfile",
        baselineShift: "baseline-shift",
        bbox: 0,
        begin: 0,
        bias: 0,
        by: 0,
        calcMode: "calcMode",
        capHeight: "cap-height",
        clip: 0,
        clipPath: "clip-path",
        clipRule: "clip-rule",
        clipPathUnits: "clipPathUnits",
        colorInterpolation: "color-interpolation",
        colorInterpolationFilters: "color-interpolation-filters",
        colorProfile: "color-profile",
        colorRendering: "color-rendering",
        contentScriptType: "contentScriptType",
        contentStyleType: "contentStyleType",
        cursor: 0,
        cx: 0,
        cy: 0,
        d: 0,
        decelerate: 0,
        descent: 0,
        diffuseConstant: "diffuseConstant",
        direction: 0,
        display: 0,
        divisor: 0,
        dominantBaseline: "dominant-baseline",
        dur: 0,
        dx: 0,
        dy: 0,
        edgeMode: "edgeMode",
        elevation: 0,
        enableBackground: "enable-background",
        end: 0,
        exponent: 0,
        externalResourcesRequired: "externalResourcesRequired",
        fill: 0,
        fillOpacity: "fill-opacity",
        fillRule: "fill-rule",
        filter: 0,
        filterRes: "filterRes",
        filterUnits: "filterUnits",
        floodColor: "flood-color",
        floodOpacity: "flood-opacity",
        focusable: 0,
        fontFamily: "font-family",
        fontSize: "font-size",
        fontSizeAdjust: "font-size-adjust",
        fontStretch: "font-stretch",
        fontStyle: "font-style",
        fontVariant: "font-variant",
        fontWeight: "font-weight",
        format: 0,
        from: 0,
        fx: 0,
        fy: 0,
        g1: 0,
        g2: 0,
        glyphName: "glyph-name",
        glyphOrientationHorizontal: "glyph-orientation-horizontal",
        glyphOrientationVertical: "glyph-orientation-vertical",
        glyphRef: "glyphRef",
        gradientTransform: "gradientTransform",
        gradientUnits: "gradientUnits",
        hanging: 0,
        horizAdvX: "horiz-adv-x",
        horizOriginX: "horiz-origin-x",
        ideographic: 0,
        imageRendering: "image-rendering",
        in: 0,
        in2: 0,
        intercept: 0,
        k: 0,
        k1: 0,
        k2: 0,
        k3: 0,
        k4: 0,
        kernelMatrix: "kernelMatrix",
        kernelUnitLength: "kernelUnitLength",
        kerning: 0,
        keyPoints: "keyPoints",
        keySplines: "keySplines",
        keyTimes: "keyTimes",
        lengthAdjust: "lengthAdjust",
        letterSpacing: "letter-spacing",
        lightingColor: "lighting-color",
        limitingConeAngle: "limitingConeAngle",
        local: 0,
        markerEnd: "marker-end",
        markerMid: "marker-mid",
        markerStart: "marker-start",
        markerHeight: "markerHeight",
        markerUnits: "markerUnits",
        markerWidth: "markerWidth",
        mask: 0,
        maskContentUnits: "maskContentUnits",
        maskUnits: "maskUnits",
        mathematical: 0,
        mode: 0,
        numOctaves: "numOctaves",
        offset: 0,
        opacity: 0,
        operator: 0,
        order: 0,
        orient: 0,
        orientation: 0,
        origin: 0,
        overflow: 0,
        overlinePosition: "overline-position",
        overlineThickness: "overline-thickness",
        paintOrder: "paint-order",
        panose1: "panose-1",
        pathLength: "pathLength",
        patternContentUnits: "patternContentUnits",
        patternTransform: "patternTransform",
        patternUnits: "patternUnits",
        pointerEvents: "pointer-events",
        points: 0,
        pointsAtX: "pointsAtX",
        pointsAtY: "pointsAtY",
        pointsAtZ: "pointsAtZ",
        preserveAlpha: "preserveAlpha",
        preserveAspectRatio: "preserveAspectRatio",
        primitiveUnits: "primitiveUnits",
        r: 0,
        radius: 0,
        refX: "refX",
        refY: "refY",
        renderingIntent: "rendering-intent",
        repeatCount: "repeatCount",
        repeatDur: "repeatDur",
        requiredExtensions: "requiredExtensions",
        requiredFeatures: "requiredFeatures",
        restart: 0,
        result: 0,
        rotate: 0,
        rx: 0,
        ry: 0,
        scale: 0,
        seed: 0,
        shapeRendering: "shape-rendering",
        slope: 0,
        spacing: 0,
        specularConstant: "specularConstant",
        specularExponent: "specularExponent",
        speed: 0,
        spreadMethod: "spreadMethod",
        startOffset: "startOffset",
        stdDeviation: "stdDeviation",
        stemh: 0,
        stemv: 0,
        stitchTiles: "stitchTiles",
        stopColor: "stop-color",
        stopOpacity: "stop-opacity",
        strikethroughPosition: "strikethrough-position",
        strikethroughThickness: "strikethrough-thickness",
        string: 0,
        stroke: 0,
        strokeDasharray: "stroke-dasharray",
        strokeDashoffset: "stroke-dashoffset",
        strokeLinecap: "stroke-linecap",
        strokeLinejoin: "stroke-linejoin",
        strokeMiterlimit: "stroke-miterlimit",
        strokeOpacity: "stroke-opacity",
        strokeWidth: "stroke-width",
        surfaceScale: "surfaceScale",
        systemLanguage: "systemLanguage",
        tableValues: "tableValues",
        targetX: "targetX",
        targetY: "targetY",
        textAnchor: "text-anchor",
        textDecoration: "text-decoration",
        textRendering: "text-rendering",
        textLength: "textLength",
        to: 0,
        transform: 0,
        u1: 0,
        u2: 0,
        underlinePosition: "underline-position",
        underlineThickness: "underline-thickness",
        unicode: 0,
        unicodeBidi: "unicode-bidi",
        unicodeRange: "unicode-range",
        unitsPerEm: "units-per-em",
        vAlphabetic: "v-alphabetic",
        vHanging: "v-hanging",
        vIdeographic: "v-ideographic",
        vMathematical: "v-mathematical",
        values: 0,
        vectorEffect: "vector-effect",
        version: 0,
        vertAdvY: "vert-adv-y",
        vertOriginX: "vert-origin-x",
        vertOriginY: "vert-origin-y",
        viewBox: "viewBox",
        viewTarget: "viewTarget",
        visibility: 0,
        widths: 0,
        wordSpacing: "word-spacing",
        writingMode: "writing-mode",
        x: 0,
        xHeight: "x-height",
        x1: 0,
        x2: 0,
        xChannelSelector: "xChannelSelector",
        xlinkActuate: "xlink:actuate",
        xlinkArcrole: "xlink:arcrole",
        xlinkHref: "xlink:href",
        xlinkRole: "xlink:role",
        xlinkShow: "xlink:show",
        xlinkTitle: "xlink:title",
        xlinkType: "xlink:type",
        xmlBase: "xml:base",
        xmlns: 0,
        xmlnsXlink: "xmlns:xlink",
        xmlLang: "xml:lang",
        xmlSpace: "xml:space",
        y: 0,
        y1: 0,
        y2: 0,
        yChannelSelector: "yChannelSelector",
        z: 0,
        zoomAndPan: "zoomAndPan",
      },
      o = {
        Properties: {},
        DOMAttributeNamespaces: {
          xlinkActuate: r.xlink,
          xlinkArcrole: r.xlink,
          xlinkHref: r.xlink,
          xlinkRole: r.xlink,
          xlinkShow: r.xlink,
          xlinkTitle: r.xlink,
          xlinkType: r.xlink,
          xmlBase: r.xml,
          xmlLang: r.xml,
          xmlSpace: r.xml,
        },
        DOMAttributeNames: {},
      };
    Object.keys(i).forEach(function (e) {
      (o.Properties[e] = 0), i[e] && (o.DOMAttributeNames[e] = i[e]);
    }),
      (e.exports = o);
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      if ("selectionStart" in e && c.hasSelectionCapabilities(e))
        return { start: e.selectionStart, end: e.selectionEnd };
      if (window.getSelection) {
        var t = window.getSelection();
        return {
          anchorNode: t.anchorNode,
          anchorOffset: t.anchorOffset,
          focusNode: t.focusNode,
          focusOffset: t.focusOffset,
        };
      }
      if (document.selection) {
        var n = document.selection.createRange();
        return {
          parentElement: n.parentElement(),
          text: n.text,
          top: n.boundingTop,
          left: n.boundingLeft,
        };
      }
    }
    function i(e, t) {
      if (y || null == m || m !== l()) return null;
      var n = r(m);
      if (!g || !p(g, n)) {
        g = n;
        var i = u.getPooled(f.select, v, e, t);
        return (
          (i.type = "select"),
          (i.target = m),
          o.accumulateTwoPhaseDispatches(i),
          i
        );
      }
      return null;
    }
    var o = n(22),
      a = n(6),
      s = n(4),
      c = n(82),
      u = n(14),
      l = n(83),
      h = n(66),
      p = n(46),
      d =
        a.canUseDOM &&
        "documentMode" in document &&
        document.documentMode <= 11,
      f = {
        select: {
          phasedRegistrationNames: {
            bubbled: "onSelect",
            captured: "onSelectCapture",
          },
          dependencies: [
            "topBlur",
            "topContextMenu",
            "topFocus",
            "topKeyDown",
            "topKeyUp",
            "topMouseDown",
            "topMouseUp",
            "topSelectionChange",
          ],
        },
      },
      m = null,
      v = null,
      g = null,
      y = !1,
      _ = !1,
      b = {
        eventTypes: f,
        extractEvents: function (e, t, n, r) {
          if (!_) return null;
          var o = t ? s.getNodeFromInstance(t) : window;
          switch (e) {
            case "topFocus":
              (h(o) || "true" === o.contentEditable) &&
                ((m = o), (v = t), (g = null));
              break;
            case "topBlur":
              (m = null), (v = null), (g = null);
              break;
            case "topMouseDown":
              y = !0;
              break;
            case "topContextMenu":
            case "topMouseUp":
              return (y = !1), i(n, r);
            case "topSelectionChange":
              if (d) break;
            case "topKeyDown":
            case "topKeyUp":
              return i(n, r);
          }
          return null;
        },
        didPutListener: function (e, t, n) {
          "onSelect" === t && (_ = !0);
        },
      };
    e.exports = b;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        return "." + e._rootNodeID;
      }
      function i(e) {
        return (
          "button" === e || "input" === e || "select" === e || "textarea" === e
        );
      }
      var o = n(3),
        a = n(81),
        s = n(22),
        c = n(4),
        u = n(174),
        l = n(175),
        h = n(14),
        p = n(176),
        d = n(177),
        f = n(30),
        m = n(179),
        v = n(180),
        g = n(181),
        y = n(24),
        _ = n(182),
        b = n(10),
        x = n(51),
        E = n(1),
        w = {},
        M = {};
      [
        "abort",
        "animationEnd",
        "animationIteration",
        "animationStart",
        "blur",
        "canPlay",
        "canPlayThrough",
        "click",
        "contextMenu",
        "copy",
        "cut",
        "doubleClick",
        "drag",
        "dragEnd",
        "dragEnter",
        "dragExit",
        "dragLeave",
        "dragOver",
        "dragStart",
        "drop",
        "durationChange",
        "emptied",
        "encrypted",
        "ended",
        "error",
        "focus",
        "input",
        "invalid",
        "keyDown",
        "keyPress",
        "keyUp",
        "load",
        "loadedData",
        "loadedMetadata",
        "loadStart",
        "mouseDown",
        "mouseMove",
        "mouseOut",
        "mouseOver",
        "mouseUp",
        "paste",
        "pause",
        "play",
        "playing",
        "progress",
        "rateChange",
        "reset",
        "scroll",
        "seeked",
        "seeking",
        "stalled",
        "submit",
        "suspend",
        "timeUpdate",
        "touchCancel",
        "touchEnd",
        "touchMove",
        "touchStart",
        "transitionEnd",
        "volumeChange",
        "waiting",
        "wheel",
      ].forEach(function (e) {
        var t = e[0].toUpperCase() + e.slice(1),
          n = "on" + t,
          r = "top" + t,
          i = {
            phasedRegistrationNames: { bubbled: n, captured: n + "Capture" },
            dependencies: [r],
          };
        (w[e] = i), (M[r] = i);
      });
      var T = {},
        S = {
          eventTypes: w,
          extractEvents: function (e, n, r, i) {
            var a = M[e];
            if (!a) return null;
            var c;
            switch (e) {
              case "topAbort":
              case "topCanPlay":
              case "topCanPlayThrough":
              case "topDurationChange":
              case "topEmptied":
              case "topEncrypted":
              case "topEnded":
              case "topError":
              case "topInput":
              case "topInvalid":
              case "topLoad":
              case "topLoadedData":
              case "topLoadedMetadata":
              case "topLoadStart":
              case "topPause":
              case "topPlay":
              case "topPlaying":
              case "topProgress":
              case "topRateChange":
              case "topReset":
              case "topSeeked":
              case "topSeeking":
              case "topStalled":
              case "topSubmit":
              case "topSuspend":
              case "topTimeUpdate":
              case "topVolumeChange":
              case "topWaiting":
                c = h;
                break;
              case "topKeyPress":
                if (0 === x(r)) return null;
              case "topKeyDown":
              case "topKeyUp":
                c = d;
                break;
              case "topBlur":
              case "topFocus":
                c = p;
                break;
              case "topClick":
                if (2 === r.button) return null;
              case "topDoubleClick":
              case "topMouseDown":
              case "topMouseMove":
              case "topMouseUp":
              case "topMouseOut":
              case "topMouseOver":
              case "topContextMenu":
                c = f;
                break;
              case "topDrag":
              case "topDragEnd":
              case "topDragEnter":
              case "topDragExit":
              case "topDragLeave":
              case "topDragOver":
              case "topDragStart":
              case "topDrop":
                c = m;
                break;
              case "topTouchCancel":
              case "topTouchEnd":
              case "topTouchMove":
              case "topTouchStart":
                c = v;
                break;
              case "topAnimationEnd":
              case "topAnimationIteration":
              case "topAnimationStart":
                c = u;
                break;
              case "topTransitionEnd":
                c = g;
                break;
              case "topScroll":
                c = y;
                break;
              case "topWheel":
                c = _;
                break;
              case "topCopy":
              case "topCut":
              case "topPaste":
                c = l;
            }
            c ||
              ("production" !== t.env.NODE_ENV
                ? E(!1, "SimpleEventPlugin: Unhandled event type, `%s`.", e)
                : o("86", e));
            var b = c.getPooled(a, n, r, i);
            return s.accumulateTwoPhaseDispatches(b), b;
          },
          didPutListener: function (e, t, n) {
            if ("onClick" === t && !i(e._tag)) {
              var o = r(e),
                s = c.getNodeFromInstance(e);
              T[o] || (T[o] = a.listen(s, "click", b));
            }
          },
          willDeleteListener: function (e, t) {
            if ("onClick" === t && !i(e._tag)) {
              var n = r(e);
              T[n].remove(), delete T[n];
            }
          },
        };
      e.exports = S;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(14),
      o = { animationName: null, elapsedTime: null, pseudoElement: null };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(14),
      o = {
        clipboardData: function (e) {
          return "clipboardData" in e ? e.clipboardData : window.clipboardData;
        },
      };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(24),
      o = { relatedTarget: null };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(24),
      o = n(51),
      a = n(178),
      s = n(40),
      c = {
        key: a,
        location: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        repeat: null,
        locale: null,
        getModifierState: s,
        charCode: function (e) {
          return "keypress" === e.type ? o(e) : 0;
        },
        keyCode: function (e) {
          return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
        },
        which: function (e) {
          return "keypress" === e.type
            ? o(e)
            : "keydown" === e.type || "keyup" === e.type
            ? e.keyCode
            : 0;
        },
      };
    i.augmentClass(r, c), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      if (e.key) {
        var t = o[e.key] || e.key;
        if ("Unidentified" !== t) return t;
      }
      if ("keypress" === e.type) {
        var n = i(e);
        return 13 === n ? "Enter" : String.fromCharCode(n);
      }
      return "keydown" === e.type || "keyup" === e.type
        ? a[e.keyCode] || "Unidentified"
        : "";
    }
    var i = n(51),
      o = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified",
      },
      a = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta",
      };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(30),
      o = { dataTransfer: null };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(24),
      o = n(40),
      a = {
        touches: null,
        targetTouches: null,
        changedTouches: null,
        altKey: null,
        metaKey: null,
        ctrlKey: null,
        shiftKey: null,
        getModifierState: o,
      };
    i.augmentClass(r, a), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(14),
      o = { propertyName: null, elapsedTime: null, pseudoElement: null };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    function r(e, t, n, r) {
      return i.call(this, e, t, n, r);
    }
    var i = n(30),
      o = {
        deltaX: function (e) {
          return "deltaX" in e
            ? e.deltaX
            : "wheelDeltaX" in e
            ? -e.wheelDeltaX
            : 0;
        },
        deltaY: function (e) {
          return "deltaY" in e
            ? e.deltaY
            : "wheelDeltaY" in e
            ? -e.wheelDeltaY
            : "wheelDelta" in e
            ? -e.wheelDelta
            : 0;
        },
        deltaZ: null,
        deltaMode: null,
      };
    i.augmentClass(r, o), (e.exports = r);
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n) {
        var r = {
          _topLevelWrapper: e,
          _idCounter: 1,
          _ownerDocument: n ? (n.nodeType === o ? n : n.ownerDocument) : null,
          _node: n,
          _tag: n ? n.nodeName.toLowerCase() : null,
          _namespaceURI: n ? n.namespaceURI : null,
        };
        return (
          "production" !== t.env.NODE_ENV &&
            (r._ancestorInfo = n
              ? i.updatedAncestorInfo(null, r._tag, null)
              : null),
          r
        );
      }
      var i = n(50),
        o = 9;
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = { useCreateElement: !0, useFiber: !1 };
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    var r = n(186),
      i = /\/?>/,
      o = /^<\!\-\-/,
      a = {
        CHECKSUM_ATTR_NAME: "data-react-checksum",
        addChecksumToMarkup: function (e) {
          var t = r(e);
          return o.test(e)
            ? e
            : e.replace(i, " " + a.CHECKSUM_ATTR_NAME + '="' + t + '"$&');
        },
        canReuseMarkup: function (e, t) {
          var n = t.getAttribute(a.CHECKSUM_ATTR_NAME);
          return (n = n && parseInt(n, 10)), r(e) === n;
        },
      };
    e.exports = a;
  },
  function (e, t, n) {
    "use strict";
    function r(e) {
      for (var t = 1, n = 0, r = 0, o = e.length, a = -4 & o; r < a; ) {
        for (var s = Math.min(r + 4096, a); r < s; r += 4)
          n +=
            (t += e.charCodeAt(r)) +
            (t += e.charCodeAt(r + 1)) +
            (t += e.charCodeAt(r + 2)) +
            (t += e.charCodeAt(r + 3));
        (t %= i), (n %= i);
      }
      for (; r < o; r++) n += t += e.charCodeAt(r);
      return (t %= i), (n %= i), t | (n << 16);
    }
    var i = 65521;
    e.exports = r;
  },
  function (e, t, n) {
    "use strict";
    e.exports = "15.6.1";
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e) {
        if ("production" !== t.env.NODE_ENV) {
          var n = o.current;
          null !== n &&
            ("production" !== t.env.NODE_ENV &&
              l(
                n._warnedAboutRefsInRender,
                "%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.",
                n.getName() || "A component"
              ),
            (n._warnedAboutRefsInRender = !0));
        }
        if (null == e) return null;
        if (1 === e.nodeType) return e;
        var r = s.get(e);
        if (r) return (r = c(r)), r ? a.getNodeFromInstance(r) : null;
        "function" == typeof e.render
          ? "production" !== t.env.NODE_ENV
            ? u(!1, "findDOMNode was called on an unmounted component.")
            : i("44")
          : "production" !== t.env.NODE_ENV
          ? u(
              !1,
              "Element appears to be neither ReactComponent nor DOMNode (keys: %s)",
              Object.keys(e)
            )
          : i("45", Object.keys(e));
      }
      var i = n(3),
        o = n(9),
        a = n(4),
        s = n(25),
        c = n(85),
        u = n(1),
        l = n(2);
      e.exports = r;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    var r = n(84);
    e.exports = r.renderSubtreeIntoContainer;
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, t) {
        null != t &&
          "string" == typeof t.type &&
          (t.type.indexOf("-") >= 0 || t.props.is || h(e, t));
      }
      var i = n(15),
        o = n(28),
        a = n(7),
        s = n(2);
      if ("production" !== t.env.NODE_ENV)
        var c = {
            children: !0,
            dangerouslySetInnerHTML: !0,
            key: !0,
            ref: !0,
            autoFocus: !0,
            defaultValue: !0,
            valueLink: !0,
            defaultChecked: !0,
            checkedLink: !0,
            innerHTML: !0,
            suppressContentEditableWarning: !0,
            onFocusIn: !0,
            onFocusOut: !0,
          },
          u = {},
          l = function (e, n, r) {
            if (i.properties.hasOwnProperty(n) || i.isCustomAttribute(n))
              return !0;
            if ((c.hasOwnProperty(n) && c[n]) || (u.hasOwnProperty(n) && u[n]))
              return !0;
            if (o.registrationNameModules.hasOwnProperty(n)) return !0;
            u[n] = !0;
            var l = n.toLowerCase(),
              h = i.isCustomAttribute(l)
                ? l
                : i.getPossibleStandardName.hasOwnProperty(l)
                ? i.getPossibleStandardName[l]
                : null,
              p = o.possibleRegistrationNames.hasOwnProperty(l)
                ? o.possibleRegistrationNames[l]
                : null;
            return null != h
              ? ("production" !== t.env.NODE_ENV &&
                  s(
                    !1,
                    "Unknown DOM property %s. Did you mean %s?%s",
                    n,
                    h,
                    a.getStackAddendumByID(r)
                  ),
                !0)
              : null != p &&
                  ("production" !== t.env.NODE_ENV &&
                    s(
                      !1,
                      "Unknown event handler property %s. Did you mean `%s`?%s",
                      n,
                      p,
                      a.getStackAddendumByID(r)
                    ),
                  !0);
          };
      var h = function (e, n) {
          var r = [];
          for (var i in n.props) {
            l(n.type, i, e) || r.push(i);
          }
          var o = r
            .map(function (e) {
              return "`" + e + "`";
            })
            .join(", ");
          1 === r.length
            ? "production" !== t.env.NODE_ENV &&
              s(
                !1,
                "Unknown prop %s on <%s> tag. Remove this prop from the element. For details, see https://fb.me/react-unknown-prop%s",
                o,
                n.type,
                a.getStackAddendumByID(e)
              )
            : r.length > 1 &&
              "production" !== t.env.NODE_ENV &&
              s(
                !1,
                "Unknown props %s on <%s> tag. Remove these props from the element. For details, see https://fb.me/react-unknown-prop%s",
                o,
                n.type,
                a.getStackAddendumByID(e)
              );
        },
        p = {
          onBeforeMountComponent: function (e, t) {
            r(e, t);
          },
          onBeforeUpdateComponent: function (e, t) {
            r(e, t);
          },
        };
      e.exports = p;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n) {
        null != n &&
          (("input" !== n.type &&
            "textarea" !== n.type &&
            "select" !== n.type) ||
            null == n.props ||
            null !== n.props.value ||
            a ||
            ("production" !== t.env.NODE_ENV &&
              o(
                !1,
                "`value` prop on `%s` should not be null. Consider using the empty string to clear the component or `undefined` for uncontrolled components.%s",
                n.type,
                i.getStackAddendumByID(e)
              ),
            (a = !0)));
      }
      var i = n(7),
        o = n(2),
        a = !1,
        s = {
          onBeforeMountComponent: function (e, t) {
            r(e, t);
          },
          onBeforeUpdateComponent: function (e, t) {
            r(e, t);
          },
        };
      e.exports = s;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    (function (t) {
      function r(e, n, r) {
        if (u.hasOwnProperty(n) && u[n]) return !0;
        if (l.test(n)) {
          var i = n.toLowerCase(),
            o = a.getPossibleStandardName.hasOwnProperty(i)
              ? a.getPossibleStandardName[i]
              : null;
          if (null == o) return (u[n] = !0), !1;
          if (n !== o)
            return (
              "production" !== t.env.NODE_ENV &&
                c(
                  !1,
                  "Unknown ARIA attribute %s. Did you mean %s?%s",
                  n,
                  o,
                  s.getStackAddendumByID(r)
                ),
              (u[n] = !0),
              !0
            );
        }
        return !0;
      }
      function i(e, n) {
        var i = [];
        for (var o in n.props) {
          r(n.type, o, e) || i.push(o);
        }
        var a = i
          .map(function (e) {
            return "`" + e + "`";
          })
          .join(", ");
        1 === i.length
          ? "production" !== t.env.NODE_ENV &&
            c(
              !1,
              "Invalid aria prop %s on <%s> tag. For details, see https://fb.me/invalid-aria-prop%s",
              a,
              n.type,
              s.getStackAddendumByID(e)
            )
          : i.length > 1 &&
            "production" !== t.env.NODE_ENV &&
            c(
              !1,
              "Invalid aria props %s on <%s> tag. For details, see https://fb.me/invalid-aria-prop%s",
              a,
              n.type,
              s.getStackAddendumByID(e)
            );
      }
      function o(e, t) {
        null != t &&
          "string" == typeof t.type &&
          (t.type.indexOf("-") >= 0 || t.props.is || i(e, t));
      }
      var a = n(15),
        s = n(7),
        c = n(2),
        u = {},
        l = new RegExp("^(aria)-[" + a.ATTRIBUTE_NAME_CHAR + "]*$"),
        h = {
          onBeforeMountComponent: function (e, n) {
            "production" !== t.env.NODE_ENV && o(e, n);
          },
          onBeforeUpdateComponent: function (e, n) {
            "production" !== t.env.NODE_ENV && o(e, n);
          },
        };
      e.exports = h;
    }.call(t, n(0)));
  },
  function (e, t, n) {
    "use strict";
    function r() {
      return null;
    }
    function i(e) {
      e.preventDefault(),
        document.addEventListener("mousemove", o, !1),
        document.addEventListener("mouseup", a, !1),
        document.addEventListener("mouseout", s, !1),
        (A = e.clientX - R),
        (N = S);
    }
    function o(e) {
      (C = e.clientX - R), (S = 25e-5 * (C - A));
    }
    function a(e) {
      document.removeEventListener("mousemove", o, !1),
        document.removeEventListener("mouseup", a, !1),
        document.removeEventListener("mouseout", s, !1);
    }
    function s(e) {
      document.removeEventListener("mousemove", o, !1),
        document.removeEventListener("mouseup", a, !1),
        document.removeEventListener("mouseout", s, !1);
    }
    function c() {
      requestAnimationFrame(c), u(), x.update();
    }
    function u() {
      l(T, new d.Vector3(0, 1, 0), S), (S *= 1 - P), M.render(w, E);
    }
    function l(e, t, n) {
      var r = new d.Matrix4();
      r.makeRotationAxis(t.normalize(), n),
        r.multiply(e.matrix),
        (e.matrix = r),
        e.rotation.setFromRotationMatrix(e.matrix);
    }
    Object.defineProperty(t, "__esModule", { value: !0 }), (t.default = r);
    var h = n(194),
      p = (function (e) {
        return e && e.__esModule ? e : { default: e };
      })(h),
      d = n(195),
      f = 45,
      m = window.innerWidth / window.innerHeight,
      v = 0.1,
      g = 1e4,
      y = 200,
      _ = 50,
      b = 50;
    window.requestAnimationFrame ||
      (window.requestAnimationFrame = (function () {
        return (
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.oRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          function (e, t) {
            window.setTimeout(e, 1e3 / 60);
          }
        );
      })());
    var x,
      E,
      w,
      M,
      T = new d.Mesh(),
      S = 0.5,
      N = 0,
      C = 0,
      A = 0,
      R = window.innerWidth / 2,
      P = (window.innerHeight, 0.25);
    !(function () {
      var e = document.querySelector("#container");
      document.body.appendChild(e),
        (w = new d.Scene()),
        (E = new d.PerspectiveCamera(f, m, v, g)),
        E.position.set(0, 0, 400),
        (w.background = new d.Color(0)),
        w.add(E);
      var t = new d.PointLight(16777215);
      const imgURL =
        "https://cdn.jsdelivr.net/gh/sebaaismail/donateInGlobe/public/land_ocean_ice_cloud_2048_indexed.jpg";
      (t.position.x = 10), (t.position.y = 50), (t.position.z = 400), w.add(t);
      var n = new d.Group();
      w.add(n),
        new d.TextureLoader().load(imgURL, function (e) {
          var t = new d.SphereGeometry(y, _, b),
            r = new d.MeshBasicMaterial({ map: e, overdraw: 0.5 });
          (T = new d.Mesh(t, r)), n.add(T);
        }),
        (n.position.z = -300),
        (M = new d.WebGLRenderer()),
        M.setSize(window.innerWidth, window.innerHeight),
        e.appendChild(M.domElement),
        (x = new p.default()),
        (x.domElement.style.position = "absolute"),
        (x.domElement.style.top = "0px"),
        e.appendChild(x.domElement),
        document.addEventListener("mousedown", i, !1);
    })(),
      c();
  },
  function (e, t, n) {
    !(function (t, n) {
      e.exports = n();
    })(0, function () {
      var e = function () {
        function t(e) {
          return i.appendChild(e.dom), e;
        }
        function n(e) {
          for (var t = 0; t < i.children.length; t++)
            i.children[t].style.display = t === e ? "block" : "none";
          r = e;
        }
        var r = 0,
          i = document.createElement("div");
        (i.style.cssText =
          "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000"),
          i.addEventListener(
            "click",
            function (e) {
              e.preventDefault(), n(++r % i.children.length);
            },
            !1
          );
        var o = (performance || Date).now(),
          a = o,
          s = 0,
          c = t(new e.Panel("FPS", "#0ff", "#002")),
          u = t(new e.Panel("MS", "#0f0", "#020"));
        if (self.performance && self.performance.memory)
          var l = t(new e.Panel("MB", "#f08", "#201"));
        return (
          n(0),
          {
            REVISION: 16,
            dom: i,
            addPanel: t,
            showPanel: n,
            begin: function () {
              o = (performance || Date).now();
            },
            end: function () {
              s++;
              var e = (performance || Date).now();
              if (
                (u.update(e - o, 200),
                e > a + 1e3 &&
                  (c.update((1e3 * s) / (e - a), 100), (a = e), (s = 0), l))
              ) {
                var t = performance.memory;
                l.update(
                  t.usedJSHeapSize / 1048576,
                  t.jsHeapSizeLimit / 1048576
                );
              }
              return e;
            },
            update: function () {
              o = this.end();
            },
            domElement: i,
            setMode: n,
          }
        );
      };
      return (
        (e.Panel = function (e, t, n) {
          var r = 1 / 0,
            i = 0,
            o = Math.round,
            a = o(window.devicePixelRatio || 1),
            s = 80 * a,
            c = 48 * a,
            u = 3 * a,
            l = 2 * a,
            h = 3 * a,
            p = 15 * a,
            d = 74 * a,
            f = 30 * a,
            m = document.createElement("canvas");
          (m.width = s),
            (m.height = c),
            (m.style.cssText = "width:80px;height:48px");
          var v = m.getContext("2d");
          return (
            (v.font = "bold " + 9 * a + "px Helvetica,Arial,sans-serif"),
            (v.textBaseline = "top"),
            (v.fillStyle = n),
            v.fillRect(0, 0, s, c),
            (v.fillStyle = t),
            v.fillText(e, u, l),
            v.fillRect(h, p, d, f),
            (v.fillStyle = n),
            (v.globalAlpha = 0.9),
            v.fillRect(h, p, d, f),
            {
              dom: m,
              update: function (c, g) {
                (r = Math.min(r, c)),
                  (i = Math.max(i, c)),
                  (v.fillStyle = n),
                  (v.globalAlpha = 1),
                  v.fillRect(0, 0, s, p),
                  (v.fillStyle = t),
                  v.fillText(
                    o(c) + " " + e + " (" + o(r) + "-" + o(i) + ")",
                    u,
                    l
                  ),
                  v.drawImage(m, h + a, p, d - a, f, h, p, d - a, f),
                  v.fillRect(h + d - a, p, a, f),
                  (v.fillStyle = n),
                  (v.globalAlpha = 0.9),
                  v.fillRect(h + d - a, p, a, o((1 - c / g) * f));
              },
            }
          );
        }),
        e
      );
    });
  },
  function (e, t, n) {
    "use strict";
    function r() {}
    function i(e, t) {
      (this.x = e || 0), (this.y = t || 0);
    }
    function o(e, t, n, r, a, s, c, u, l, h) {
      Object.defineProperty(this, "id", { value: Ds++ }),
        (this.uuid = Os.generateUUID()),
        (this.name = ""),
        (this.image = void 0 !== e ? e : o.DEFAULT_IMAGE),
        (this.mipmaps = []),
        (this.mapping = void 0 !== t ? t : o.DEFAULT_MAPPING),
        (this.wrapS = void 0 !== n ? n : Na),
        (this.wrapT = void 0 !== r ? r : Na),
        (this.magFilter = void 0 !== a ? a : Oa),
        (this.minFilter = void 0 !== s ? s : La),
        (this.anisotropy = void 0 !== l ? l : 1),
        (this.format = void 0 !== c ? c : Za),
        (this.type = void 0 !== u ? u : Ia),
        (this.offset = new i(0, 0)),
        (this.repeat = new i(1, 1)),
        (this.generateMipmaps = !0),
        (this.premultiplyAlpha = !1),
        (this.flipY = !0),
        (this.unpackAlignment = 4),
        (this.encoding = void 0 !== h ? h : Es),
        (this.version = 0),
        (this.onUpdate = null);
    }
    function a(e, t, n, r) {
      (this.x = e || 0),
        (this.y = t || 0),
        (this.z = n || 0),
        (this.w = void 0 !== r ? r : 1);
    }
    function s(e, t, n) {
      (this.uuid = Os.generateUUID()),
        (this.width = e),
        (this.height = t),
        (this.scissor = new a(0, 0, e, t)),
        (this.scissorTest = !1),
        (this.viewport = new a(0, 0, e, t)),
        (n = n || {}),
        void 0 === n.minFilter && (n.minFilter = Oa),
        (this.texture = new o(
          void 0,
          void 0,
          n.wrapS,
          n.wrapT,
          n.magFilter,
          n.minFilter,
          n.format,
          n.type,
          n.anisotropy,
          n.encoding
        )),
        (this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer),
        (this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer),
        (this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null);
    }
    function c(e, t, n) {
      s.call(this, e, t, n),
        (this.activeCubeFace = 0),
        (this.activeMipMapLevel = 0);
    }
    function u(e, t, n, r) {
      (this._x = e || 0),
        (this._y = t || 0),
        (this._z = n || 0),
        (this._w = void 0 !== r ? r : 1);
    }
    function l(e, t, n) {
      (this.x = e || 0), (this.y = t || 0), (this.z = n || 0);
    }
    function h() {
      (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
        arguments.length > 0 &&
          console.error(
            "THREE.Matrix4: the constructor no longer reads arguments. use .set() instead."
          );
    }
    function p(e, t, n, r, i, a, s, c, u, l, h, p) {
      o.call(this, null, a, s, c, u, l, r, i, h, p),
        (this.image = { data: e, width: t, height: n }),
        (this.magFilter = void 0 !== u ? u : Aa),
        (this.minFilter = void 0 !== l ? l : Aa),
        (this.generateMipmaps = !1),
        (this.flipY = !1),
        (this.unpackAlignment = 1);
    }
    function d(e, t, n, r, i, a, s, c, u, l) {
      (e = void 0 !== e ? e : []),
        (t = void 0 !== t ? t : _a),
        o.call(this, e, t, n, r, i, a, s, c, u, l),
        (this.flipY = !1);
    }
    function f() {
      (this.seq = []), (this.map = {});
    }
    function m(e, t, n) {
      var r = e[0];
      if (r <= 0 || r > 0) return e;
      var i = t * n,
        o = Us[i];
      if ((void 0 === o && ((o = new Float32Array(i)), (Us[i] = o)), 0 !== t)) {
        r.toArray(o, 0);
        for (var a = 1, s = 0; a !== t; ++a) (s += n), e[a].toArray(o, s);
      }
      return o;
    }
    function v(e, t) {
      var n = ks[t];
      void 0 === n && ((n = new Int32Array(t)), (ks[t] = n));
      for (var r = 0; r !== t; ++r) n[r] = e.allocTextureUnit();
      return n;
    }
    function g(e, t) {
      e.uniform1f(this.addr, t);
    }
    function y(e, t) {
      e.uniform1i(this.addr, t);
    }
    function _(e, t) {
      void 0 === t.x
        ? e.uniform2fv(this.addr, t)
        : e.uniform2f(this.addr, t.x, t.y);
    }
    function b(e, t) {
      void 0 !== t.x
        ? e.uniform3f(this.addr, t.x, t.y, t.z)
        : void 0 !== t.r
        ? e.uniform3f(this.addr, t.r, t.g, t.b)
        : e.uniform3fv(this.addr, t);
    }
    function x(e, t) {
      void 0 === t.x
        ? e.uniform4fv(this.addr, t)
        : e.uniform4f(this.addr, t.x, t.y, t.z, t.w);
    }
    function E(e, t) {
      e.uniformMatrix2fv(this.addr, !1, t.elements || t);
    }
    function w(e, t) {
      void 0 === t.elements
        ? e.uniformMatrix3fv(this.addr, !1, t)
        : (Vs.set(t.elements), e.uniformMatrix3fv(this.addr, !1, Vs));
    }
    function M(e, t) {
      void 0 === t.elements
        ? e.uniformMatrix4fv(this.addr, !1, t)
        : (Fs.set(t.elements), e.uniformMatrix4fv(this.addr, !1, Fs));
    }
    function T(e, t, n) {
      var r = n.allocTextureUnit();
      e.uniform1i(this.addr, r), n.setTexture2D(t || Ls, r);
    }
    function S(e, t, n) {
      var r = n.allocTextureUnit();
      e.uniform1i(this.addr, r), n.setTextureCube(t || Is, r);
    }
    function N(e, t) {
      e.uniform2iv(this.addr, t);
    }
    function C(e, t) {
      e.uniform3iv(this.addr, t);
    }
    function A(e, t) {
      e.uniform4iv(this.addr, t);
    }
    function R(e) {
      switch (e) {
        case 5126:
          return g;
        case 35664:
          return _;
        case 35665:
          return b;
        case 35666:
          return x;
        case 35674:
          return E;
        case 35675:
          return w;
        case 35676:
          return M;
        case 35678:
        case 36198:
          return T;
        case 35680:
          return S;
        case 5124:
        case 35670:
          return y;
        case 35667:
        case 35671:
          return N;
        case 35668:
        case 35672:
          return C;
        case 35669:
        case 35673:
          return A;
      }
    }
    function P(e, t) {
      e.uniform1fv(this.addr, t);
    }
    function O(e, t) {
      e.uniform1iv(this.addr, t);
    }
    function D(e, t) {
      e.uniform2fv(this.addr, m(t, this.size, 2));
    }
    function L(e, t) {
      e.uniform3fv(this.addr, m(t, this.size, 3));
    }
    function I(e, t) {
      e.uniform4fv(this.addr, m(t, this.size, 4));
    }
    function U(e, t) {
      e.uniformMatrix2fv(this.addr, !1, m(t, this.size, 4));
    }
    function k(e, t) {
      e.uniformMatrix3fv(this.addr, !1, m(t, this.size, 9));
    }
    function F(e, t) {
      e.uniformMatrix4fv(this.addr, !1, m(t, this.size, 16));
    }
    function V(e, t, n) {
      var r = t.length,
        i = v(n, r);
      e.uniform1iv(this.addr, i);
      for (var o = 0; o !== r; ++o) n.setTexture2D(t[o] || Ls, i[o]);
    }
    function B(e, t, n) {
      var r = t.length,
        i = v(n, r);
      e.uniform1iv(this.addr, i);
      for (var o = 0; o !== r; ++o) n.setTextureCube(t[o] || Is, i[o]);
    }
    function z(e) {
      switch (e) {
        case 5126:
          return P;
        case 35664:
          return D;
        case 35665:
          return L;
        case 35666:
          return I;
        case 35674:
          return U;
        case 35675:
          return k;
        case 35676:
          return F;
        case 35678:
          return V;
        case 35680:
          return B;
        case 5124:
        case 35670:
          return O;
        case 35667:
        case 35671:
          return N;
        case 35668:
        case 35672:
          return C;
        case 35669:
        case 35673:
          return A;
      }
    }
    function H(e, t, n) {
      (this.id = e), (this.addr = n), (this.setValue = R(t.type));
    }
    function j(e, t, n) {
      (this.id = e),
        (this.addr = n),
        (this.size = t.size),
        (this.setValue = z(t.type));
    }
    function G(e) {
      (this.id = e), f.call(this);
    }
    function W(e, t) {
      e.seq.push(t), (e.map[t.id] = t);
    }
    function q(e, t, n) {
      var r = e.name,
        i = r.length;
      for (Bs.lastIndex = 0; ; ) {
        var o = Bs.exec(r),
          a = Bs.lastIndex,
          s = o[1],
          c = "]" === o[2],
          u = o[3];
        if ((c && (s |= 0), void 0 === u || ("[" === u && a + 2 === i))) {
          W(n, void 0 === u ? new H(s, e, t) : new j(s, e, t));
          break;
        }
        var l = n.map,
          h = l[s];
        void 0 === h && ((h = new G(s)), W(n, h)), (n = h);
      }
    }
    function X(e, t, n) {
      f.call(this), (this.renderer = n);
      for (
        var r = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), i = 0;
        i < r;
        ++i
      ) {
        var o = e.getActiveUniform(t, i),
          a = o.name;
        q(o, e.getUniformLocation(t, a), this);
      }
    }
    function Y(e, t, n) {
      return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n);
    }
    function Z(e, t) {
      (this.min = void 0 !== e ? e : new i(1 / 0, 1 / 0)),
        (this.max = void 0 !== t ? t : new i(-1 / 0, -1 / 0));
    }
    function K(e, t, n, r, o) {
      function a() {
        var e = new Float32Array([
            -1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1,
          ]),
          r = new Uint16Array([0, 1, 2, 0, 2, 3]);
        (c = t.createBuffer()),
          (u = t.createBuffer()),
          t.bindBuffer(t.ARRAY_BUFFER, c),
          t.bufferData(t.ARRAY_BUFFER, e, t.STATIC_DRAW),
          t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, u),
          t.bufferData(t.ELEMENT_ARRAY_BUFFER, r, t.STATIC_DRAW),
          (m = t.createTexture()),
          (v = t.createTexture()),
          n.bindTexture(t.TEXTURE_2D, m),
          t.texImage2D(
            t.TEXTURE_2D,
            0,
            t.RGB,
            16,
            16,
            0,
            t.RGB,
            t.UNSIGNED_BYTE,
            null
          ),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.NEAREST),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.NEAREST),
          n.bindTexture(t.TEXTURE_2D, v),
          t.texImage2D(
            t.TEXTURE_2D,
            0,
            t.RGBA,
            16,
            16,
            0,
            t.RGBA,
            t.UNSIGNED_BYTE,
            null
          ),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.NEAREST),
          t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.NEAREST),
          (h = {
            vertexShader: [
              "uniform lowp int renderType;",
              "uniform vec3 screenPosition;",
              "uniform vec2 scale;",
              "uniform float rotation;",
              "uniform sampler2D occlusionMap;",
              "attribute vec2 position;",
              "attribute vec2 uv;",
              "varying vec2 vUV;",
              "varying float vVisibility;",
              "void main() {",
              "vUV = uv;",
              "vec2 pos = position;",
              "if ( renderType == 2 ) {",
              "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );",
              "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );",
              "vVisibility =        visibility.r / 9.0;",
              "vVisibility *= 1.0 - visibility.g / 9.0;",
              "vVisibility *=       visibility.b / 9.0;",
              "vVisibility *= 1.0 - visibility.a / 9.0;",
              "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;",
              "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;",
              "}",
              "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );",
              "}",
            ].join("\n"),
            fragmentShader: [
              "uniform lowp int renderType;",
              "uniform sampler2D map;",
              "uniform float opacity;",
              "uniform vec3 color;",
              "varying vec2 vUV;",
              "varying float vVisibility;",
              "void main() {",
              "if ( renderType == 0 ) {",
              "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",
              "} else if ( renderType == 1 ) {",
              "gl_FragColor = texture2D( map, vUV );",
              "} else {",
              "vec4 texture = texture2D( map, vUV );",
              "texture.a *= opacity * vVisibility;",
              "gl_FragColor = texture;",
              "gl_FragColor.rgb *= color;",
              "}",
              "}",
            ].join("\n"),
          }),
          (p = s(h)),
          (d = {
            vertex: t.getAttribLocation(p, "position"),
            uv: t.getAttribLocation(p, "uv"),
          }),
          (f = {
            renderType: t.getUniformLocation(p, "renderType"),
            map: t.getUniformLocation(p, "map"),
            occlusionMap: t.getUniformLocation(p, "occlusionMap"),
            opacity: t.getUniformLocation(p, "opacity"),
            color: t.getUniformLocation(p, "color"),
            scale: t.getUniformLocation(p, "scale"),
            rotation: t.getUniformLocation(p, "rotation"),
            screenPosition: t.getUniformLocation(p, "screenPosition"),
          });
      }
      function s(e) {
        var n = t.createProgram(),
          r = t.createShader(t.FRAGMENT_SHADER),
          i = t.createShader(t.VERTEX_SHADER),
          a = "precision " + o.precision + " float;\n";
        return (
          t.shaderSource(r, a + e.fragmentShader),
          t.shaderSource(i, a + e.vertexShader),
          t.compileShader(r),
          t.compileShader(i),
          t.attachShader(n, r),
          t.attachShader(n, i),
          t.linkProgram(n),
          n
        );
      }
      var c, u, h, p, d, f, m, v;
      this.render = function (e, o, s, h) {
        if (0 !== e.length) {
          var g = new l(),
            y = h.w / h.z,
            _ = 0.5 * h.z,
            b = 0.5 * h.w,
            x = 16 / h.w,
            E = new i(x * y, x),
            w = new l(1, 1, 0),
            M = new i(1, 1),
            T = new Z();
          T.min.set(h.x, h.y),
            T.max.set(h.x + (h.z - 16), h.y + (h.w - 16)),
            void 0 === p && a(),
            n.useProgram(p),
            n.initAttributes(),
            n.enableAttribute(d.vertex),
            n.enableAttribute(d.uv),
            n.disableUnusedAttributes(),
            t.uniform1i(f.occlusionMap, 0),
            t.uniform1i(f.map, 1),
            t.bindBuffer(t.ARRAY_BUFFER, c),
            t.vertexAttribPointer(d.vertex, 2, t.FLOAT, !1, 16, 0),
            t.vertexAttribPointer(d.uv, 2, t.FLOAT, !1, 16, 8),
            t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, u),
            n.disable(t.CULL_FACE),
            n.buffers.depth.setMask(!1);
          for (var S = 0, N = e.length; S < N; S++) {
            (x = 16 / h.w), E.set(x * y, x);
            var C = e[S];
            if (
              (g.set(
                C.matrixWorld.elements[12],
                C.matrixWorld.elements[13],
                C.matrixWorld.elements[14]
              ),
              g.applyMatrix4(s.matrixWorldInverse),
              g.applyMatrix4(s.projectionMatrix),
              w.copy(g),
              (M.x = h.x + w.x * _ + _ - 8),
              (M.y = h.y + w.y * b + b - 8),
              !0 === T.containsPoint(M))
            ) {
              n.activeTexture(t.TEXTURE0),
                n.bindTexture(t.TEXTURE_2D, null),
                n.activeTexture(t.TEXTURE1),
                n.bindTexture(t.TEXTURE_2D, m),
                t.copyTexImage2D(t.TEXTURE_2D, 0, t.RGB, M.x, M.y, 16, 16, 0),
                t.uniform1i(f.renderType, 0),
                t.uniform2f(f.scale, E.x, E.y),
                t.uniform3f(f.screenPosition, w.x, w.y, w.z),
                n.disable(t.BLEND),
                n.enable(t.DEPTH_TEST),
                t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0),
                n.activeTexture(t.TEXTURE0),
                n.bindTexture(t.TEXTURE_2D, v),
                t.copyTexImage2D(t.TEXTURE_2D, 0, t.RGBA, M.x, M.y, 16, 16, 0),
                t.uniform1i(f.renderType, 1),
                n.disable(t.DEPTH_TEST),
                n.activeTexture(t.TEXTURE1),
                n.bindTexture(t.TEXTURE_2D, m),
                t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0),
                C.positionScreen.copy(w),
                C.customUpdateCallback
                  ? C.customUpdateCallback(C)
                  : C.updateLensFlares(),
                t.uniform1i(f.renderType, 2),
                n.enable(t.BLEND);
              for (var A = 0, R = C.lensFlares.length; A < R; A++) {
                var P = C.lensFlares[A];
                P.opacity > 0.001 &&
                  P.scale > 0.001 &&
                  ((w.x = P.x),
                  (w.y = P.y),
                  (w.z = P.z),
                  (x = (P.size * P.scale) / h.w),
                  (E.x = x * y),
                  (E.y = x),
                  t.uniform3f(f.screenPosition, w.x, w.y, w.z),
                  t.uniform2f(f.scale, E.x, E.y),
                  t.uniform1f(f.rotation, P.rotation),
                  t.uniform1f(f.opacity, P.opacity),
                  t.uniform3f(f.color, P.color.r, P.color.g, P.color.b),
                  n.setBlending(
                    P.blending,
                    P.blendEquation,
                    P.blendSrc,
                    P.blendDst
                  ),
                  r.setTexture2D(P.texture, 1),
                  t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0));
              }
            }
          }
          n.enable(t.CULL_FACE),
            n.enable(t.DEPTH_TEST),
            n.buffers.depth.setMask(!0),
            n.reset();
        }
      };
    }
    function J(e, t, n, r, i, a, s, c, u) {
      o.call(this, e, t, n, r, i, a, s, c, u), (this.needsUpdate = !0);
    }
    function Q(e, t, n, r, i) {
      function o() {
        var e = new Float32Array([
            -0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1,
          ]),
          n = new Uint16Array([0, 1, 2, 0, 2, 3]);
        (c = t.createBuffer()),
          (h = t.createBuffer()),
          t.bindBuffer(t.ARRAY_BUFFER, c),
          t.bufferData(t.ARRAY_BUFFER, e, t.STATIC_DRAW),
          t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, h),
          t.bufferData(t.ELEMENT_ARRAY_BUFFER, n, t.STATIC_DRAW),
          (p = a()),
          (d = {
            position: t.getAttribLocation(p, "position"),
            uv: t.getAttribLocation(p, "uv"),
          }),
          (f = {
            uvOffset: t.getUniformLocation(p, "uvOffset"),
            uvScale: t.getUniformLocation(p, "uvScale"),
            rotation: t.getUniformLocation(p, "rotation"),
            scale: t.getUniformLocation(p, "scale"),
            color: t.getUniformLocation(p, "color"),
            map: t.getUniformLocation(p, "map"),
            opacity: t.getUniformLocation(p, "opacity"),
            modelViewMatrix: t.getUniformLocation(p, "modelViewMatrix"),
            projectionMatrix: t.getUniformLocation(p, "projectionMatrix"),
            fogType: t.getUniformLocation(p, "fogType"),
            fogDensity: t.getUniformLocation(p, "fogDensity"),
            fogNear: t.getUniformLocation(p, "fogNear"),
            fogFar: t.getUniformLocation(p, "fogFar"),
            fogColor: t.getUniformLocation(p, "fogColor"),
            alphaTest: t.getUniformLocation(p, "alphaTest"),
          });
        var r = document.createElementNS(
          "http://www.w3.org/1999/xhtml",
          "canvas"
        );
        (r.width = 8), (r.height = 8);
        var i = r.getContext("2d");
        (i.fillStyle = "white"), i.fillRect(0, 0, 8, 8), (m = new J(r));
      }
      function a() {
        var e = t.createProgram(),
          n = t.createShader(t.VERTEX_SHADER),
          r = t.createShader(t.FRAGMENT_SHADER);
        return (
          t.shaderSource(
            n,
            [
              "precision " + i.precision + " float;",
              "#define SHADER_NAME SpriteMaterial",
              "uniform mat4 modelViewMatrix;",
              "uniform mat4 projectionMatrix;",
              "uniform float rotation;",
              "uniform vec2 scale;",
              "uniform vec2 uvOffset;",
              "uniform vec2 uvScale;",
              "attribute vec2 position;",
              "attribute vec2 uv;",
              "varying vec2 vUV;",
              "void main() {",
              "vUV = uvOffset + uv * uvScale;",
              "vec2 alignedPosition = position * scale;",
              "vec2 rotatedPosition;",
              "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;",
              "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;",
              "vec4 finalPosition;",
              "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );",
              "finalPosition.xy += rotatedPosition;",
              "finalPosition = projectionMatrix * finalPosition;",
              "gl_Position = finalPosition;",
              "}",
            ].join("\n")
          ),
          t.shaderSource(
            r,
            [
              "precision " + i.precision + " float;",
              "#define SHADER_NAME SpriteMaterial",
              "uniform vec3 color;",
              "uniform sampler2D map;",
              "uniform float opacity;",
              "uniform int fogType;",
              "uniform vec3 fogColor;",
              "uniform float fogDensity;",
              "uniform float fogNear;",
              "uniform float fogFar;",
              "uniform float alphaTest;",
              "varying vec2 vUV;",
              "void main() {",
              "vec4 texture = texture2D( map, vUV );",
              "if ( texture.a < alphaTest ) discard;",
              "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );",
              "if ( fogType > 0 ) {",
              "float depth = gl_FragCoord.z / gl_FragCoord.w;",
              "float fogFactor = 0.0;",
              "if ( fogType == 1 ) {",
              "fogFactor = smoothstep( fogNear, fogFar, depth );",
              "} else {",
              "const float LOG2 = 1.442695;",
              "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );",
              "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );",
              "}",
              "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );",
              "}",
              "}",
            ].join("\n")
          ),
          t.compileShader(n),
          t.compileShader(r),
          t.attachShader(e, n),
          t.attachShader(e, r),
          t.linkProgram(e),
          e
        );
      }
      function s(e, t) {
        return e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.z !== t.z
          ? t.z - e.z
          : t.id - e.id;
      }
      var c,
        h,
        p,
        d,
        f,
        m,
        v = new l(),
        g = new u(),
        y = new l();
      this.render = function (i, a, u) {
        if (0 !== i.length) {
          void 0 === p && o(),
            n.useProgram(p),
            n.initAttributes(),
            n.enableAttribute(d.position),
            n.enableAttribute(d.uv),
            n.disableUnusedAttributes(),
            n.disable(t.CULL_FACE),
            n.enable(t.BLEND),
            t.bindBuffer(t.ARRAY_BUFFER, c),
            t.vertexAttribPointer(d.position, 2, t.FLOAT, !1, 16, 0),
            t.vertexAttribPointer(d.uv, 2, t.FLOAT, !1, 16, 8),
            t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, h),
            t.uniformMatrix4fv(
              f.projectionMatrix,
              !1,
              u.projectionMatrix.elements
            ),
            n.activeTexture(t.TEXTURE0),
            t.uniform1i(f.map, 0);
          var l = 0,
            _ = 0,
            b = a.fog;
          b
            ? (t.uniform3f(f.fogColor, b.color.r, b.color.g, b.color.b),
              b.isFog
                ? (t.uniform1f(f.fogNear, b.near),
                  t.uniform1f(f.fogFar, b.far),
                  t.uniform1i(f.fogType, 1),
                  (l = 1),
                  (_ = 1))
                : b.isFogExp2 &&
                  (t.uniform1f(f.fogDensity, b.density),
                  t.uniform1i(f.fogType, 2),
                  (l = 2),
                  (_ = 2)))
            : (t.uniform1i(f.fogType, 0), (l = 0), (_ = 0));
          for (var x = 0, E = i.length; x < E; x++) {
            var w = i[x];
            w.modelViewMatrix.multiplyMatrices(
              u.matrixWorldInverse,
              w.matrixWorld
            ),
              (w.z = -w.modelViewMatrix.elements[14]);
          }
          i.sort(s);
          for (var M = [], x = 0, E = i.length; x < E; x++) {
            var w = i[x],
              T = w.material;
            if (!1 !== T.visible) {
              w.onBeforeRender(e, a, u, void 0, T, void 0),
                t.uniform1f(f.alphaTest, T.alphaTest),
                t.uniformMatrix4fv(
                  f.modelViewMatrix,
                  !1,
                  w.modelViewMatrix.elements
                ),
                w.matrixWorld.decompose(v, g, y),
                (M[0] = y.x),
                (M[1] = y.y);
              var S = 0;
              a.fog && T.fog && (S = _),
                l !== S && (t.uniform1i(f.fogType, S), (l = S)),
                null !== T.map
                  ? (t.uniform2f(f.uvOffset, T.map.offset.x, T.map.offset.y),
                    t.uniform2f(f.uvScale, T.map.repeat.x, T.map.repeat.y))
                  : (t.uniform2f(f.uvOffset, 0, 0),
                    t.uniform2f(f.uvScale, 1, 1)),
                t.uniform1f(f.opacity, T.opacity),
                t.uniform3f(f.color, T.color.r, T.color.g, T.color.b),
                t.uniform1f(f.rotation, T.rotation),
                t.uniform2fv(f.scale, M),
                n.setBlending(
                  T.blending,
                  T.blendEquation,
                  T.blendSrc,
                  T.blendDst,
                  T.blendEquationAlpha,
                  T.blendSrcAlpha,
                  T.blendDstAlpha,
                  T.premultipliedAlpha
                ),
                n.buffers.depth.setTest(T.depthTest),
                n.buffers.depth.setMask(T.depthWrite),
                r.setTexture2D(T.map || m, 0),
                t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0),
                w.onAfterRender(e, a, u, void 0, T, void 0);
            }
          }
          n.enable(t.CULL_FACE), n.reset();
        }
      };
    }
    function $() {
      Object.defineProperty(this, "id", { value: qs++ }),
        (this.uuid = Os.generateUUID()),
        (this.name = ""),
        (this.type = "Material"),
        (this.fog = !0),
        (this.lights = !0),
        (this.blending = Io),
        (this.side = So),
        (this.flatShading = !1),
        (this.vertexColors = Po),
        (this.opacity = 1),
        (this.transparent = !1),
        (this.blendSrc = Zo),
        (this.blendDst = Ko),
        (this.blendEquation = Bo),
        (this.blendSrcAlpha = null),
        (this.blendDstAlpha = null),
        (this.blendEquationAlpha = null),
        (this.depthFunc = oa),
        (this.depthTest = !0),
        (this.depthWrite = !0),
        (this.clippingPlanes = null),
        (this.clipIntersection = !1),
        (this.clipShadows = !1),
        (this.colorWrite = !0),
        (this.precision = null),
        (this.polygonOffset = !1),
        (this.polygonOffsetFactor = 0),
        (this.polygonOffsetUnits = 0),
        (this.dithering = !1),
        (this.alphaTest = 0),
        (this.premultipliedAlpha = !1),
        (this.overdraw = 0),
        (this.visible = !0),
        (this.userData = {}),
        (this.needsUpdate = !0);
    }
    function ee(e) {
      $.call(this),
        (this.type = "ShaderMaterial"),
        (this.defines = {}),
        (this.uniforms = {}),
        (this.vertexShader =
          "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
        (this.fragmentShader =
          "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
        (this.linewidth = 1),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.fog = !1),
        (this.lights = !1),
        (this.clipping = !1),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        (this.extensions = {
          derivatives: !1,
          fragDepth: !1,
          drawBuffers: !1,
          shaderTextureLOD: !1,
        }),
        (this.defaultAttributeValues = {
          color: [1, 1, 1],
          uv: [0, 0],
          uv2: [0, 0],
        }),
        (this.index0AttributeName = void 0),
        void 0 !== e &&
          (void 0 !== e.attributes &&
            console.error(
              "THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."
            ),
          this.setValues(e));
    }
    function te(e) {
      $.call(this),
        (this.type = "MeshDepthMaterial"),
        (this.depthPacking = Rs),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.map = null),
        (this.alphaMap = null),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.fog = !1),
        (this.lights = !1),
        this.setValues(e);
    }
    function ne(e) {
      $.call(this),
        (this.type = "MeshDistanceMaterial"),
        (this.referencePosition = new l()),
        (this.nearDistance = 1),
        (this.farDistance = 1e3),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.map = null),
        (this.alphaMap = null),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.fog = !1),
        (this.lights = !1),
        this.setValues(e);
    }
    function re(e, t) {
      (this.min = void 0 !== e ? e : new l(1 / 0, 1 / 0, 1 / 0)),
        (this.max = void 0 !== t ? t : new l(-1 / 0, -1 / 0, -1 / 0));
    }
    function ie(e, t) {
      (this.center = void 0 !== e ? e : new l()),
        (this.radius = void 0 !== t ? t : 0);
    }
    function oe() {
      (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
        arguments.length > 0 &&
          console.error(
            "THREE.Matrix3: the constructor no longer reads arguments. use .set() instead."
          );
    }
    function ae(e, t) {
      (this.normal = void 0 !== e ? e : new l(1, 0, 0)),
        (this.constant = void 0 !== t ? t : 0);
    }
    function se(e, t, n, r, i, o) {
      this.planes = [
        void 0 !== e ? e : new ae(),
        void 0 !== t ? t : new ae(),
        void 0 !== n ? n : new ae(),
        void 0 !== r ? r : new ae(),
        void 0 !== i ? i : new ae(),
        void 0 !== o ? o : new ae(),
      ];
    }
    function ce(e, t, n) {
      function r(t, n, r, i, o, a) {
        var s = t.geometry,
          c = null,
          u = _,
          l = t.customDepthMaterial;
        if ((r && ((u = b), (l = t.customDistanceMaterial)), l)) c = l;
        else {
          var h = !1;
          n.morphTargets &&
            (s && s.isBufferGeometry
              ? (h =
                  s.morphAttributes &&
                  s.morphAttributes.position &&
                  s.morphAttributes.position.length > 0)
              : s &&
                s.isGeometry &&
                (h = s.morphTargets && s.morphTargets.length > 0)),
            t.isSkinnedMesh &&
              !1 === n.skinning &&
              console.warn(
                "THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",
                t
              );
          var p = t.isSkinnedMesh && n.skinning,
            d = 0;
          h && (d |= v), p && (d |= g), (c = u[d]);
        }
        if (
          e.localClippingEnabled &&
          !0 === n.clipShadows &&
          0 !== n.clippingPlanes.length
        ) {
          var f = c.uuid,
            m = n.uuid,
            y = x[f];
          void 0 === y && ((y = {}), (x[f] = y));
          var E = y[m];
          void 0 === E && ((E = c.clone()), (y[m] = E)), (c = E);
        }
        (c.visible = n.visible), (c.wireframe = n.wireframe);
        var w = n.side;
        return (
          R.renderSingleSided && w == Co && (w = So),
          R.renderReverseSided && (w === So ? (w = No) : w === No && (w = So)),
          (c.side = w),
          (c.clipShadows = n.clipShadows),
          (c.clippingPlanes = n.clippingPlanes),
          (c.clipIntersection = n.clipIntersection),
          (c.wireframeLinewidth = n.wireframeLinewidth),
          (c.linewidth = n.linewidth),
          r &&
            c.isMeshDistanceMaterial &&
            (c.referencePosition.copy(i),
            (c.nearDistance = o),
            (c.farDistance = a)),
          c
        );
      }
      function o(n, i, a, s) {
        if (!1 !== n.visible) {
          if (
            n.layers.test(i.layers) &&
            (n.isMesh || n.isLine || n.isPoints) &&
            n.castShadow &&
            (!n.frustumCulled || c.intersectsObject(n))
          ) {
            n.modelViewMatrix.multiplyMatrices(
              a.matrixWorldInverse,
              n.matrixWorld
            );
            var u = t.update(n),
              l = n.material;
            if (Array.isArray(l))
              for (var h = u.groups, p = 0, d = h.length; p < d; p++) {
                var f = h[p],
                  v = l[f.materialIndex];
                if (v && v.visible) {
                  var g = r(n, v, s, m, a.near, a.far);
                  e.renderBufferDirect(a, null, u, g, n, f);
                }
              }
            else if (l.visible) {
              var g = r(n, l, s, m, a.near, a.far);
              e.renderBufferDirect(a, null, u, g, n, null);
            }
          }
          for (var y = n.children, _ = 0, b = y.length; _ < b; _++)
            o(y[_], i, a, s);
        }
      }
      for (
        var c = new se(),
          u = new h(),
          p = new i(),
          d = new i(n, n),
          f = new l(),
          m = new l(),
          v = 1,
          g = 2,
          y = 1 + (v | g),
          _ = new Array(y),
          b = new Array(y),
          x = {},
          E = [
            new l(1, 0, 0),
            new l(-1, 0, 0),
            new l(0, 0, 1),
            new l(0, 0, -1),
            new l(0, 1, 0),
            new l(0, -1, 0),
          ],
          w = [
            new l(0, 1, 0),
            new l(0, 1, 0),
            new l(0, 1, 0),
            new l(0, 1, 0),
            new l(0, 0, 1),
            new l(0, 0, -1),
          ],
          M = [new a(), new a(), new a(), new a(), new a(), new a()],
          T = 0;
        T !== y;
        ++T
      ) {
        var S = 0 != (T & v),
          N = 0 != (T & g),
          C = new te({ depthPacking: Ps, morphTargets: S, skinning: N });
        _[T] = C;
        var A = new ne({ morphTargets: S, skinning: N });
        b[T] = A;
      }
      var R = this;
      (this.enabled = !1),
        (this.autoUpdate = !0),
        (this.needsUpdate = !1),
        (this.type = Mo),
        (this.renderReverseSided = !0),
        (this.renderSingleSided = !0),
        (this.render = function (t, n, r) {
          if (
            !1 !== R.enabled &&
            (!1 !== R.autoUpdate || !1 !== R.needsUpdate) &&
            0 !== t.length
          ) {
            var i = e.context,
              a = e.state;
            a.disable(i.BLEND),
              a.buffers.color.setClear(1, 1, 1, 1),
              a.buffers.depth.setTest(!0),
              a.setScissorTest(!1);
            for (var l, h = 0, v = t.length; h < v; h++) {
              var g = t[h],
                y = g.shadow,
                _ = g && g.isPointLight;
              if (void 0 !== y) {
                var b = y.camera;
                if ((p.copy(y.mapSize), p.min(d), _)) {
                  var x = p.x,
                    T = p.y;
                  M[0].set(2 * x, T, x, T),
                    M[1].set(0, T, x, T),
                    M[2].set(3 * x, T, x, T),
                    M[3].set(x, T, x, T),
                    M[4].set(3 * x, 0, x, T),
                    M[5].set(x, 0, x, T),
                    (p.x *= 4),
                    (p.y *= 2);
                }
                if (null === y.map) {
                  var S = { minFilter: Aa, magFilter: Aa, format: Za };
                  (y.map = new s(p.x, p.y, S)),
                    (y.map.texture.name = g.name + ".shadowMap"),
                    b.updateProjectionMatrix();
                }
                y.isSpotLightShadow && y.update(g);
                var N = y.map,
                  C = y.matrix;
                m.setFromMatrixPosition(g.matrixWorld),
                  b.position.copy(m),
                  _
                    ? ((l = 6), C.makeTranslation(-m.x, -m.y, -m.z))
                    : ((l = 1),
                      f.setFromMatrixPosition(g.target.matrixWorld),
                      b.lookAt(f),
                      b.updateMatrixWorld(),
                      C.set(
                        0.5,
                        0,
                        0,
                        0.5,
                        0,
                        0.5,
                        0,
                        0.5,
                        0,
                        0,
                        0.5,
                        0.5,
                        0,
                        0,
                        0,
                        1
                      ),
                      C.multiply(b.projectionMatrix),
                      C.multiply(b.matrixWorldInverse)),
                  e.setRenderTarget(N),
                  e.clear();
                for (var A = 0; A < l; A++) {
                  if (_) {
                    f.copy(b.position),
                      f.add(E[A]),
                      b.up.copy(w[A]),
                      b.lookAt(f),
                      b.updateMatrixWorld();
                    var P = M[A];
                    a.viewport(P);
                  }
                  u.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse),
                    c.setFromMatrix(u),
                    o(n, r, b, _);
                }
              } else console.warn("THREE.WebGLShadowMap:", g, "has no shadow.");
            }
            R.needsUpdate = !1;
          }
        });
    }
    function ue(e) {
      function t(t, n) {
        var r = t.array,
          i = t.dynamic ? e.DYNAMIC_DRAW : e.STATIC_DRAW,
          o = e.createBuffer();
        e.bindBuffer(n, o), e.bufferData(n, r, i), t.onUploadCallback();
        var a = e.FLOAT;
        return (
          r instanceof Float32Array
            ? (a = e.FLOAT)
            : r instanceof Float64Array
            ? console.warn(
                "THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."
              )
            : r instanceof Uint16Array
            ? (a = e.UNSIGNED_SHORT)
            : r instanceof Int16Array
            ? (a = e.SHORT)
            : r instanceof Uint32Array
            ? (a = e.UNSIGNED_INT)
            : r instanceof Int32Array
            ? (a = e.INT)
            : r instanceof Int8Array
            ? (a = e.BYTE)
            : r instanceof Uint8Array && (a = e.UNSIGNED_BYTE),
          {
            buffer: o,
            type: a,
            bytesPerElement: r.BYTES_PER_ELEMENT,
            version: t.version,
          }
        );
      }
      function n(t, n, r) {
        var i = n.array,
          o = n.updateRange;
        e.bindBuffer(r, t),
          !1 === n.dynamic
            ? e.bufferData(r, i, e.STATIC_DRAW)
            : -1 === o.count
            ? e.bufferSubData(r, 0, i)
            : 0 === o.count
            ? console.error(
                "THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."
              )
            : (e.bufferSubData(
                r,
                o.offset * i.BYTES_PER_ELEMENT,
                i.subarray(o.offset, o.offset + o.count)
              ),
              (o.count = -1));
      }
      function r(e) {
        return e.isInterleavedBufferAttribute && (e = e.data), a[e.uuid];
      }
      function i(t) {
        t.isInterleavedBufferAttribute && (t = t.data);
        var n = a[t.uuid];
        n && (e.deleteBuffer(n.buffer), delete a[t.uuid]);
      }
      function o(e, r) {
        e.isInterleavedBufferAttribute && (e = e.data);
        var i = a[e.uuid];
        void 0 === i
          ? (a[e.uuid] = t(e, r))
          : i.version < e.version &&
            (n(i.buffer, e, r), (i.version = e.version));
      }
      var a = {};
      return { get: r, remove: i, update: o };
    }
    function le(e, t, n, r) {
      (this._x = e || 0),
        (this._y = t || 0),
        (this._z = n || 0),
        (this._order = r || le.DefaultOrder);
    }
    function he() {
      this.mask = 1;
    }
    function pe() {
      function e() {
        i.setFromEuler(r, !1);
      }
      function t() {
        r.setFromQuaternion(i, void 0, !1);
      }
      Object.defineProperty(this, "id", { value: Xs++ }),
        (this.uuid = Os.generateUUID()),
        (this.name = ""),
        (this.type = "Object3D"),
        (this.parent = null),
        (this.children = []),
        (this.up = pe.DefaultUp.clone());
      var n = new l(),
        r = new le(),
        i = new u(),
        o = new l(1, 1, 1);
      r.onChange(e),
        i.onChange(t),
        Object.defineProperties(this, {
          position: { enumerable: !0, value: n },
          rotation: { enumerable: !0, value: r },
          quaternion: { enumerable: !0, value: i },
          scale: { enumerable: !0, value: o },
          modelViewMatrix: { value: new h() },
          normalMatrix: { value: new oe() },
        }),
        (this.matrix = new h()),
        (this.matrixWorld = new h()),
        (this.matrixAutoUpdate = pe.DefaultMatrixAutoUpdate),
        (this.matrixWorldNeedsUpdate = !1),
        (this.layers = new he()),
        (this.visible = !0),
        (this.castShadow = !1),
        (this.receiveShadow = !1),
        (this.frustumCulled = !0),
        (this.renderOrder = 0),
        (this.userData = {});
    }
    function de() {
      pe.call(this),
        (this.type = "Camera"),
        (this.matrixWorldInverse = new h()),
        (this.projectionMatrix = new h());
    }
    function fe(e, t, n, r, i, o) {
      de.call(this),
        (this.type = "OrthographicCamera"),
        (this.zoom = 1),
        (this.view = null),
        (this.left = e),
        (this.right = t),
        (this.top = n),
        (this.bottom = r),
        (this.near = void 0 !== i ? i : 0.1),
        (this.far = void 0 !== o ? o : 2e3),
        this.updateProjectionMatrix();
    }
    function me(e, t, n, r) {
      de.call(this),
        (this.type = "PerspectiveCamera"),
        (this.fov = void 0 !== e ? e : 50),
        (this.zoom = 1),
        (this.near = void 0 !== n ? n : 0.1),
        (this.far = void 0 !== r ? r : 2e3),
        (this.focus = 10),
        (this.aspect = void 0 !== t ? t : 1),
        (this.view = null),
        (this.filmGauge = 35),
        (this.filmOffset = 0),
        this.updateProjectionMatrix();
    }
    function ve(e, t, n, r, i, o) {
      (this.a = e),
        (this.b = t),
        (this.c = n),
        (this.normal = r && r.isVector3 ? r : new l()),
        (this.vertexNormals = Array.isArray(r) ? r : []),
        (this.color = i && i.isColor ? i : new Y()),
        (this.vertexColors = Array.isArray(i) ? i : []),
        (this.materialIndex = void 0 !== o ? o : 0);
    }
    function ge() {
      return Ys++;
    }
    function ye() {
      Object.defineProperty(this, "id", { value: ge() }),
        (this.uuid = Os.generateUUID()),
        (this.name = ""),
        (this.type = "Geometry"),
        (this.vertices = []),
        (this.colors = []),
        (this.faces = []),
        (this.faceVertexUvs = [[]]),
        (this.morphTargets = []),
        (this.morphNormals = []),
        (this.skinWeights = []),
        (this.skinIndices = []),
        (this.lineDistances = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.elementsNeedUpdate = !1),
        (this.verticesNeedUpdate = !1),
        (this.uvsNeedUpdate = !1),
        (this.normalsNeedUpdate = !1),
        (this.colorsNeedUpdate = !1),
        (this.lineDistancesNeedUpdate = !1),
        (this.groupsNeedUpdate = !1);
    }
    function _e(e, t, n) {
      if (Array.isArray(e))
        throw new TypeError(
          "THREE.BufferAttribute: array should be a Typed Array."
        );
      (this.uuid = Os.generateUUID()),
        (this.name = ""),
        (this.array = e),
        (this.itemSize = t),
        (this.count = void 0 !== e ? e.length / t : 0),
        (this.normalized = !0 === n),
        (this.dynamic = !1),
        (this.updateRange = { offset: 0, count: -1 }),
        (this.onUploadCallback = function () {}),
        (this.version = 0);
    }
    function be(e, t) {
      _e.call(this, new Int8Array(e), t);
    }
    function xe(e, t) {
      _e.call(this, new Uint8Array(e), t);
    }
    function Ee(e, t) {
      _e.call(this, new Uint8ClampedArray(e), t);
    }
    function we(e, t) {
      _e.call(this, new Int16Array(e), t);
    }
    function Me(e, t) {
      _e.call(this, new Uint16Array(e), t);
    }
    function Te(e, t) {
      _e.call(this, new Int32Array(e), t);
    }
    function Se(e, t) {
      _e.call(this, new Uint32Array(e), t);
    }
    function Ne(e, t) {
      _e.call(this, new Float32Array(e), t);
    }
    function Ce(e, t) {
      _e.call(this, new Float64Array(e), t);
    }
    function Ae() {
      (this.indices = []),
        (this.vertices = []),
        (this.normals = []),
        (this.colors = []),
        (this.uvs = []),
        (this.uvs2 = []),
        (this.groups = []),
        (this.morphTargets = {}),
        (this.skinWeights = []),
        (this.skinIndices = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.verticesNeedUpdate = !1),
        (this.normalsNeedUpdate = !1),
        (this.colorsNeedUpdate = !1),
        (this.uvsNeedUpdate = !1),
        (this.groupsNeedUpdate = !1);
    }
    function Re(e) {
      if (0 === e.length) return -1 / 0;
      for (var t = e[0], n = 1, r = e.length; n < r; ++n)
        e[n] > t && (t = e[n]);
      return t;
    }
    function Pe() {
      Object.defineProperty(this, "id", { value: ge() }),
        (this.uuid = Os.generateUUID()),
        (this.name = ""),
        (this.type = "BufferGeometry"),
        (this.index = null),
        (this.attributes = {}),
        (this.morphAttributes = {}),
        (this.groups = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.drawRange = { start: 0, count: 1 / 0 });
    }
    function Oe(e, t, n, r, i, o) {
      ye.call(this),
        (this.type = "BoxGeometry"),
        (this.parameters = {
          width: e,
          height: t,
          depth: n,
          widthSegments: r,
          heightSegments: i,
          depthSegments: o,
        }),
        this.fromBufferGeometry(new De(e, t, n, r, i, o)),
        this.mergeVertices();
    }
    function De(e, t, n, r, i, o) {
      function a(e, t, n, r, i, o, a, m, v, g, y) {
        var _,
          b,
          x = o / v,
          E = a / g,
          w = o / 2,
          M = a / 2,
          T = m / 2,
          S = v + 1,
          N = g + 1,
          C = 0,
          A = 0,
          R = new l();
        for (b = 0; b < N; b++) {
          var P = b * E - M;
          for (_ = 0; _ < S; _++) {
            var O = _ * x - w;
            (R[e] = O * r),
              (R[t] = P * i),
              (R[n] = T),
              u.push(R.x, R.y, R.z),
              (R[e] = 0),
              (R[t] = 0),
              (R[n] = m > 0 ? 1 : -1),
              h.push(R.x, R.y, R.z),
              p.push(_ / v),
              p.push(1 - b / g),
              (C += 1);
          }
        }
        for (b = 0; b < g; b++)
          for (_ = 0; _ < v; _++) {
            var D = d + _ + S * b,
              L = d + _ + S * (b + 1),
              I = d + (_ + 1) + S * (b + 1),
              U = d + (_ + 1) + S * b;
            c.push(D, L, U), c.push(L, I, U), (A += 6);
          }
        s.addGroup(f, A, y), (f += A), (d += C);
      }
      Pe.call(this),
        (this.type = "BoxBufferGeometry"),
        (this.parameters = {
          width: e,
          height: t,
          depth: n,
          widthSegments: r,
          heightSegments: i,
          depthSegments: o,
        });
      var s = this;
      (r = Math.floor(r) || 1),
        (i = Math.floor(i) || 1),
        (o = Math.floor(o) || 1);
      var c = [],
        u = [],
        h = [],
        p = [],
        d = 0,
        f = 0;
      a("z", "y", "x", -1, -1, n, t, e, o, i, 0),
        a("z", "y", "x", 1, -1, n, t, -e, o, i, 1),
        a("x", "z", "y", 1, 1, e, n, t, r, o, 2),
        a("x", "z", "y", 1, -1, e, n, -t, r, o, 3),
        a("x", "y", "z", 1, -1, e, t, n, r, i, 4),
        a("x", "y", "z", -1, -1, e, t, -n, r, i, 5),
        this.setIndex(c),
        this.addAttribute("position", new Ne(u, 3)),
        this.addAttribute("normal", new Ne(h, 3)),
        this.addAttribute("uv", new Ne(p, 2));
    }
    function Le(e, t, n, r) {
      ye.call(this),
        (this.type = "PlaneGeometry"),
        (this.parameters = {
          width: e,
          height: t,
          widthSegments: n,
          heightSegments: r,
        }),
        this.fromBufferGeometry(new Ie(e, t, n, r)),
        this.mergeVertices();
    }
    function Ie(e, t, n, r) {
      Pe.call(this),
        (this.type = "PlaneBufferGeometry"),
        (this.parameters = {
          width: e,
          height: t,
          widthSegments: n,
          heightSegments: r,
        });
      var i,
        o,
        a = e / 2,
        s = t / 2,
        c = Math.floor(n) || 1,
        u = Math.floor(r) || 1,
        l = c + 1,
        h = u + 1,
        p = e / c,
        d = t / u,
        f = [],
        m = [],
        v = [],
        g = [];
      for (o = 0; o < h; o++) {
        var y = o * d - s;
        for (i = 0; i < l; i++) {
          var _ = i * p - a;
          m.push(_, -y, 0), v.push(0, 0, 1), g.push(i / c), g.push(1 - o / u);
        }
      }
      for (o = 0; o < u; o++)
        for (i = 0; i < c; i++) {
          var b = i + l * o,
            x = i + l * (o + 1),
            E = i + 1 + l * (o + 1),
            w = i + 1 + l * o;
          f.push(b, x, w), f.push(x, E, w);
        }
      this.setIndex(f),
        this.addAttribute("position", new Ne(m, 3)),
        this.addAttribute("normal", new Ne(v, 3)),
        this.addAttribute("uv", new Ne(g, 2));
    }
    function Ue(e) {
      $.call(this),
        (this.type = "MeshBasicMaterial"),
        (this.color = new Y(16777215)),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.combine = la),
        (this.reflectivity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = "round"),
        (this.wireframeLinejoin = "round"),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.lights = !1),
        this.setValues(e);
    }
    function ke(e, t) {
      (this.origin = void 0 !== e ? e : new l()),
        (this.direction = void 0 !== t ? t : new l());
    }
    function Fe(e, t) {
      (this.start = void 0 !== e ? e : new l()),
        (this.end = void 0 !== t ? t : new l());
    }
    function Ve(e, t, n) {
      (this.a = void 0 !== e ? e : new l()),
        (this.b = void 0 !== t ? t : new l()),
        (this.c = void 0 !== n ? n : new l());
    }
    function Be(e, t) {
      pe.call(this),
        (this.type = "Mesh"),
        (this.geometry = void 0 !== e ? e : new Pe()),
        (this.material =
          void 0 !== t ? t : new Ue({ color: 16777215 * Math.random() })),
        (this.drawMode = _s),
        this.updateMorphTargets();
    }
    function ze(e, t, n, r) {
      function i(t, r, i, h) {
        var p = r.background;
        null === p ? o(u, l) : p && p.isColor && (o(p, 1), (h = !0)),
          (e.autoClear || h) &&
            e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
          p && p.isCubeTexture
            ? (void 0 === c &&
                ((c = new Be(
                  new De(1, 1, 1),
                  new ee({
                    uniforms: Ws.cube.uniforms,
                    vertexShader: Ws.cube.vertexShader,
                    fragmentShader: Ws.cube.fragmentShader,
                    side: No,
                    depthTest: !0,
                    depthWrite: !1,
                    polygonOffset: !0,
                    fog: !1,
                  })
                )),
                c.geometry.removeAttribute("normal"),
                c.geometry.removeAttribute("uv"),
                (c.onBeforeRender = function (e, t, n) {
                  var r = n.far;
                  this.matrixWorld.makeScale(r, r, r),
                    this.matrixWorld.copyPosition(n.matrixWorld),
                    (this.material.polygonOffsetUnits = 10 * r);
                }),
                n.update(c.geometry)),
              (c.material.uniforms.tCube.value = p),
              t.push(c, c.geometry, c.material, 0, null))
            : p &&
              p.isTexture &&
              (void 0 === a &&
                ((a = new fe(-1, 1, 1, -1, 0, 1)),
                (s = new Be(
                  new Ie(2, 2),
                  new Ue({ depthTest: !1, depthWrite: !1, fog: !1 })
                )),
                n.update(s.geometry)),
              (s.material.map = p),
              e.renderBufferDirect(a, null, s.geometry, s.material, s, null));
      }
      function o(e, n) {
        t.buffers.color.setClear(e.r, e.g, e.b, n, r);
      }
      var a,
        s,
        c,
        u = new Y(0),
        l = 0;
      return {
        getClearColor: function () {
          return u;
        },
        setClearColor: function (e, t) {
          u.set(e), (l = void 0 !== t ? t : 1), o(u, l);
        },
        getClearAlpha: function () {
          return l;
        },
        setClearAlpha: function (e) {
          (l = e), o(u, l);
        },
        render: i,
      };
    }
    function He(e, t) {
      return e.renderOrder !== t.renderOrder
        ? e.renderOrder - t.renderOrder
        : e.program && t.program && e.program !== t.program
        ? e.program.id - t.program.id
        : e.material.id !== t.material.id
        ? e.material.id - t.material.id
        : e.z !== t.z
        ? e.z - t.z
        : e.id - t.id;
    }
    function je(e, t) {
      return e.renderOrder !== t.renderOrder
        ? e.renderOrder - t.renderOrder
        : e.z !== t.z
        ? t.z - e.z
        : e.id - t.id;
    }
    function Ge() {
      function e() {
        (i = 0), (o.length = 0), (a.length = 0);
      }
      function t(e, t, n, s, c) {
        var u = r[i];
        void 0 === u
          ? ((u = {
              id: e.id,
              object: e,
              geometry: t,
              material: n,
              program: n.program,
              renderOrder: e.renderOrder,
              z: s,
              group: c,
            }),
            (r[i] = u))
          : ((u.id = e.id),
            (u.object = e),
            (u.geometry = t),
            (u.material = n),
            (u.program = n.program),
            (u.renderOrder = e.renderOrder),
            (u.z = s),
            (u.group = c)),
          (!0 === n.transparent ? a : o).push(u),
          i++;
      }
      function n() {
        o.length > 1 && o.sort(He), a.length > 1 && a.sort(je);
      }
      var r = [],
        i = 0,
        o = [],
        a = [];
      return { opaque: o, transparent: a, init: e, push: t, sort: n };
    }
    function We() {
      function e(e, t) {
        var r = e.id + "," + t.id,
          i = n[r];
        return void 0 === i && ((i = new Ge()), (n[r] = i)), i;
      }
      function t() {
        n = {};
      }
      var n = {};
      return { get: e, dispose: t };
    }
    function qe(e, t) {
      return Math.abs(t[1]) - Math.abs(e[1]);
    }
    function Xe(e) {
      function t(t, i, o, a) {
        var s = t.morphTargetInfluences,
          c = s.length,
          u = n[i.id];
        if (void 0 === u) {
          u = [];
          for (var l = 0; l < c; l++) u[l] = [l, 0];
          n[i.id] = u;
        }
        for (
          var h = o.morphTargets && i.morphAttributes.position,
            p = o.morphNormals && i.morphAttributes.normal,
            l = 0;
          l < c;
          l++
        ) {
          var d = u[l];
          0 !== d[1] &&
            (h && i.removeAttribute("morphTarget" + l),
            p && i.removeAttribute("morphNormal" + l));
        }
        for (var l = 0; l < c; l++) {
          var d = u[l];
          (d[0] = l), (d[1] = s[l]);
        }
        u.sort(qe);
        for (var l = 0; l < 8; l++) {
          var d = u[l];
          if (d) {
            var f = d[0],
              m = d[1];
            if (m) {
              h && i.addAttribute("morphTarget" + l, h[f]),
                p && i.addAttribute("morphNormal" + l, p[f]),
                (r[l] = m);
              continue;
            }
          }
          r[l] = 0;
        }
        a.getUniforms().setValue(e, "morphTargetInfluences", r);
      }
      var n = {},
        r = new Float32Array(8);
      return { update: t };
    }
    function Ye(e, t, n) {
      function r(e) {
        s = e;
      }
      function i(e) {
        (c = e.type), (u = e.bytesPerElement);
      }
      function o(t, r) {
        e.drawElements(s, r, c, t * u),
          n.calls++,
          (n.vertices += r),
          s === e.TRIANGLES
            ? (n.faces += r / 3)
            : s === e.POINTS && (n.points += r);
      }
      function a(r, i, o) {
        var a = t.get("ANGLE_instanced_arrays");
        if (null === a)
          return void console.error(
            "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
          );
        a.drawElementsInstancedANGLE(s, o, c, i * u, r.maxInstancedCount),
          n.calls++,
          (n.vertices += o * r.maxInstancedCount),
          s === e.TRIANGLES
            ? (n.faces += (r.maxInstancedCount * o) / 3)
            : s === e.POINTS && (n.points += r.maxInstancedCount * o);
      }
      var s, c, u;
      (this.setMode = r),
        (this.setIndex = i),
        (this.render = o),
        (this.renderInstances = a);
    }
    function Ze(e, t, n) {
      function r(e) {
        a = e;
      }
      function i(t, r) {
        e.drawArrays(a, t, r),
          n.calls++,
          (n.vertices += r),
          a === e.TRIANGLES
            ? (n.faces += r / 3)
            : a === e.POINTS && (n.points += r);
      }
      function o(r, i, o) {
        var s = t.get("ANGLE_instanced_arrays");
        if (null === s)
          return void console.error(
            "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
          );
        var c = r.attributes.position;
        c.isInterleavedBufferAttribute
          ? ((o = c.data.count),
            s.drawArraysInstancedANGLE(a, 0, o, r.maxInstancedCount))
          : s.drawArraysInstancedANGLE(a, i, o, r.maxInstancedCount),
          n.calls++,
          (n.vertices += o * r.maxInstancedCount),
          a === e.TRIANGLES
            ? (n.faces += (r.maxInstancedCount * o) / 3)
            : a === e.POINTS && (n.points += r.maxInstancedCount * o);
      }
      var a;
      (this.setMode = r), (this.render = i), (this.renderInstances = o);
    }
    function Ke(e, t, n) {
      function r(e) {
        var i = e.target,
          o = s[i.id];
        null !== o.index && t.remove(o.index);
        for (var a in o.attributes) t.remove(o.attributes[a]);
        i.removeEventListener("dispose", r), delete s[i.id];
        var u = c[i.id];
        u && (t.remove(u), delete c[i.id]),
          (u = c[o.id]),
          u && (t.remove(u), delete c[o.id]),
          n.geometries--;
      }
      function i(e, t) {
        var i = s[t.id];
        return (
          i ||
          (t.addEventListener("dispose", r),
          t.isBufferGeometry
            ? (i = t)
            : t.isGeometry &&
              (void 0 === t._bufferGeometry &&
                (t._bufferGeometry = new Pe().setFromObject(e)),
              (i = t._bufferGeometry)),
          (s[t.id] = i),
          n.geometries++,
          i)
        );
      }
      function o(n) {
        var r = n.index,
          i = n.attributes;
        null !== r && t.update(r, e.ELEMENT_ARRAY_BUFFER);
        for (var o in i) t.update(i[o], e.ARRAY_BUFFER);
        var a = n.morphAttributes;
        for (var o in a)
          for (var s = a[o], c = 0, u = s.length; c < u; c++)
            t.update(s[c], e.ARRAY_BUFFER);
      }
      function a(n) {
        var r = c[n.id];
        if (r) return r;
        var i = [],
          o = n.index,
          a = n.attributes;
        if (null !== o)
          for (var s = o.array, u = 0, l = s.length; u < l; u += 3) {
            var h = s[u + 0],
              p = s[u + 1],
              d = s[u + 2];
            i.push(h, p, p, d, d, h);
          }
        else
          for (
            var s = a.position.array, u = 0, l = s.length / 3 - 1;
            u < l;
            u += 3
          ) {
            var h = u + 0,
              p = u + 1,
              d = u + 2;
            i.push(h, p, p, d, d, h);
          }
        return (
          (r = new (Re(i) > 65535 ? Se : Me)(i, 1)),
          t.update(r, e.ELEMENT_ARRAY_BUFFER),
          (c[n.id] = r),
          r
        );
      }
      var s = {},
        c = {};
      return { get: i, update: o, getWireframeAttribute: a };
    }
    function Je() {
      var e = {};
      return {
        get: function (t) {
          if (void 0 !== e[t.id]) return e[t.id];
          var n;
          switch (t.type) {
            case "DirectionalLight":
              n = {
                direction: new l(),
                color: new Y(),
                shadow: !1,
                shadowBias: 0,
                shadowRadius: 1,
                shadowMapSize: new i(),
              };
              break;
            case "SpotLight":
              n = {
                position: new l(),
                direction: new l(),
                color: new Y(),
                distance: 0,
                coneCos: 0,
                penumbraCos: 0,
                decay: 0,
                shadow: !1,
                shadowBias: 0,
                shadowRadius: 1,
                shadowMapSize: new i(),
              };
              break;
            case "PointLight":
              n = {
                position: new l(),
                color: new Y(),
                distance: 0,
                decay: 0,
                shadow: !1,
                shadowBias: 0,
                shadowRadius: 1,
                shadowMapSize: new i(),
                shadowCameraNear: 1,
                shadowCameraFar: 1e3,
              };
              break;
            case "HemisphereLight":
              n = {
                direction: new l(),
                skyColor: new Y(),
                groundColor: new Y(),
              };
              break;
            case "RectAreaLight":
              n = {
                color: new Y(),
                position: new l(),
                halfWidth: new l(),
                halfHeight: new l(),
              };
          }
          return (e[t.id] = n), n;
        },
      };
    }
    function Qe() {
      function e(e, a, s) {
        for (
          var c = 0,
            u = 0,
            l = 0,
            h = 0,
            p = 0,
            d = 0,
            f = 0,
            m = 0,
            v = s.matrixWorldInverse,
            g = 0,
            y = e.length;
          g < y;
          g++
        ) {
          var _ = e[g],
            b = _.color,
            x = _.intensity,
            E = _.distance,
            w = _.shadow && _.shadow.map ? _.shadow.map.texture : null;
          if (_.isAmbientLight) (c += b.r * x), (u += b.g * x), (l += b.b * x);
          else if (_.isDirectionalLight) {
            var M = t.get(_);
            if (
              (M.color.copy(_.color).multiplyScalar(_.intensity),
              M.direction.setFromMatrixPosition(_.matrixWorld),
              r.setFromMatrixPosition(_.target.matrixWorld),
              M.direction.sub(r),
              M.direction.transformDirection(v),
              (M.shadow = _.castShadow),
              _.castShadow)
            ) {
              var T = _.shadow;
              (M.shadowBias = T.bias),
                (M.shadowRadius = T.radius),
                (M.shadowMapSize = T.mapSize);
            }
            (n.directionalShadowMap[h] = w),
              (n.directionalShadowMatrix[h] = _.shadow.matrix),
              (n.directional[h] = M),
              h++;
          } else if (_.isSpotLight) {
            var M = t.get(_);
            if (
              (M.position.setFromMatrixPosition(_.matrixWorld),
              M.position.applyMatrix4(v),
              M.color.copy(b).multiplyScalar(x),
              (M.distance = E),
              M.direction.setFromMatrixPosition(_.matrixWorld),
              r.setFromMatrixPosition(_.target.matrixWorld),
              M.direction.sub(r),
              M.direction.transformDirection(v),
              (M.coneCos = Math.cos(_.angle)),
              (M.penumbraCos = Math.cos(_.angle * (1 - _.penumbra))),
              (M.decay = 0 === _.distance ? 0 : _.decay),
              (M.shadow = _.castShadow),
              _.castShadow)
            ) {
              var T = _.shadow;
              (M.shadowBias = T.bias),
                (M.shadowRadius = T.radius),
                (M.shadowMapSize = T.mapSize);
            }
            (n.spotShadowMap[d] = w),
              (n.spotShadowMatrix[d] = _.shadow.matrix),
              (n.spot[d] = M),
              d++;
          } else if (_.isRectAreaLight) {
            var M = t.get(_);
            M.color.copy(b).multiplyScalar(x / (_.width * _.height)),
              M.position.setFromMatrixPosition(_.matrixWorld),
              M.position.applyMatrix4(v),
              o.identity(),
              i.copy(_.matrixWorld),
              i.premultiply(v),
              o.extractRotation(i),
              M.halfWidth.set(0.5 * _.width, 0, 0),
              M.halfHeight.set(0, 0.5 * _.height, 0),
              M.halfWidth.applyMatrix4(o),
              M.halfHeight.applyMatrix4(o),
              (n.rectArea[f] = M),
              f++;
          } else if (_.isPointLight) {
            var M = t.get(_);
            if (
              (M.position.setFromMatrixPosition(_.matrixWorld),
              M.position.applyMatrix4(v),
              M.color.copy(_.color).multiplyScalar(_.intensity),
              (M.distance = _.distance),
              (M.decay = 0 === _.distance ? 0 : _.decay),
              (M.shadow = _.castShadow),
              _.castShadow)
            ) {
              var T = _.shadow;
              (M.shadowBias = T.bias),
                (M.shadowRadius = T.radius),
                (M.shadowMapSize = T.mapSize),
                (M.shadowCameraNear = T.camera.near),
                (M.shadowCameraFar = T.camera.far);
            }
            (n.pointShadowMap[p] = w),
              (n.pointShadowMatrix[p] = _.shadow.matrix),
              (n.point[p] = M),
              p++;
          } else if (_.isHemisphereLight) {
            var M = t.get(_);
            M.direction.setFromMatrixPosition(_.matrixWorld),
              M.direction.transformDirection(v),
              M.direction.normalize(),
              M.skyColor.copy(_.color).multiplyScalar(x),
              M.groundColor.copy(_.groundColor).multiplyScalar(x),
              (n.hemi[m] = M),
              m++;
          }
        }
        (n.ambient[0] = c),
          (n.ambient[1] = u),
          (n.ambient[2] = l),
          (n.directional.length = h),
          (n.spot.length = d),
          (n.rectArea.length = f),
          (n.point.length = p),
          (n.hemi.length = m),
          (n.hash = h + "," + p + "," + d + "," + f + "," + m + "," + a.length);
      }
      var t = new Je(),
        n = {
          hash: "",
          ambient: [0, 0, 0],
          directional: [],
          directionalShadowMap: [],
          directionalShadowMatrix: [],
          spot: [],
          spotShadowMap: [],
          spotShadowMatrix: [],
          rectArea: [],
          point: [],
          pointShadowMap: [],
          pointShadowMatrix: [],
          hemi: [],
        },
        r = new l(),
        i = new h(),
        o = new h();
      return { setup: e, state: n };
    }
    function $e(e, t) {
      function n(n) {
        var r = t.frame,
          o = n.geometry,
          a = e.get(n, o);
        return (
          i[a.id] !== r &&
            (o.isGeometry && a.updateFromObject(n), e.update(a), (i[a.id] = r)),
          a
        );
      }
      function r() {
        i = {};
      }
      var i = {};
      return { update: n, clear: r };
    }
    function et(e) {
      for (var t = e.split("\n"), n = 0; n < t.length; n++)
        t[n] = n + 1 + ": " + t[n];
      return t.join("\n");
    }
    function tt(e, t, n) {
      var r = e.createShader(t);
      return (
        e.shaderSource(r, n),
        e.compileShader(r),
        !1 === e.getShaderParameter(r, e.COMPILE_STATUS) &&
          console.error("THREE.WebGLShader: Shader couldn't compile."),
        "" !== e.getShaderInfoLog(r) &&
          console.warn(
            "THREE.WebGLShader: gl.getShaderInfoLog()",
            t === e.VERTEX_SHADER ? "vertex" : "fragment",
            e.getShaderInfoLog(r),
            et(n)
          ),
        r
      );
    }
    function nt(e) {
      switch (e) {
        case Es:
          return ["Linear", "( value )"];
        case ws:
          return ["sRGB", "( value )"];
        case Ts:
          return ["RGBE", "( value )"];
        case Ns:
          return ["RGBM", "( value, 7.0 )"];
        case Cs:
          return ["RGBM", "( value, 16.0 )"];
        case As:
          return ["RGBD", "( value, 256.0 )"];
        case Ms:
          return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        default:
          throw new Error("unsupported encoding: " + e);
      }
    }
    function rt(e, t) {
      var n = nt(t);
      return (
        "vec4 " +
        e +
        "( vec4 value ) { return " +
        n[0] +
        "ToLinear" +
        n[1] +
        "; }"
      );
    }
    function it(e, t) {
      var n = nt(t);
      return (
        "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
      );
    }
    function ot(e, t) {
      var n;
      switch (t) {
        case fa:
          n = "Linear";
          break;
        case ma:
          n = "Reinhard";
          break;
        case va:
          n = "Uncharted2";
          break;
        case ga:
          n = "OptimizedCineon";
          break;
        default:
          throw new Error("unsupported toneMapping: " + t);
      }
      return (
        "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
      );
    }
    function at(e, t, n) {
      return (
        (e = e || {}),
        [
          e.derivatives ||
          t.envMapCubeUV ||
          t.bumpMap ||
          t.normalMap ||
          t.flatShading
            ? "#extension GL_OES_standard_derivatives : enable"
            : "",
          (e.fragDepth || t.logarithmicDepthBuffer) && n.get("EXT_frag_depth")
            ? "#extension GL_EXT_frag_depth : enable"
            : "",
          e.drawBuffers && n.get("WEBGL_draw_buffers")
            ? "#extension GL_EXT_draw_buffers : require"
            : "",
          (e.shaderTextureLOD || t.envMap) && n.get("EXT_shader_texture_lod")
            ? "#extension GL_EXT_shader_texture_lod : enable"
            : "",
        ]
          .filter(ut)
          .join("\n")
      );
    }
    function st(e) {
      var t = [];
      for (var n in e) {
        var r = e[n];
        !1 !== r && t.push("#define " + n + " " + r);
      }
      return t.join("\n");
    }
    function ct(e, t, n) {
      for (
        var r = {}, i = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), o = 0;
        o < i;
        o++
      ) {
        var a = e.getActiveAttrib(t, o),
          s = a.name;
        r[s] = e.getAttribLocation(t, s);
      }
      return r;
    }
    function ut(e) {
      return "" !== e;
    }
    function lt(e, t) {
      return e
        .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
        .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
        .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
        .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
        .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights);
    }
    function ht(e) {
      function t(e, t) {
        var n = Gs[t];
        if (void 0 === n)
          throw new Error("Can not resolve #include <" + t + ">");
        return ht(n);
      }
      var n = /^[ \t]*#include +<([\w\d.]+)>/gm;
      return e.replace(n, t);
    }
    function pt(e) {
      function t(e, t, n, r) {
        for (var i = "", o = parseInt(t); o < parseInt(n); o++)
          i += r.replace(/\[ i \]/g, "[ " + o + " ]");
        return i;
      }
      var n =
        /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
      return e.replace(n, t);
    }
    function dt(e, t, n, r, i, o) {
      var a = e.context,
        s = r.defines,
        c = i.vertexShader,
        u = i.fragmentShader,
        l = "SHADOWMAP_TYPE_BASIC";
      o.shadowMapType === Mo
        ? (l = "SHADOWMAP_TYPE_PCF")
        : o.shadowMapType === To && (l = "SHADOWMAP_TYPE_PCF_SOFT");
      var h = "ENVMAP_TYPE_CUBE",
        p = "ENVMAP_MODE_REFLECTION",
        d = "ENVMAP_BLENDING_MULTIPLY";
      if (o.envMap) {
        switch (r.envMap.mapping) {
          case _a:
          case ba:
            h = "ENVMAP_TYPE_CUBE";
            break;
          case Ma:
          case Ta:
            h = "ENVMAP_TYPE_CUBE_UV";
            break;
          case xa:
          case Ea:
            h = "ENVMAP_TYPE_EQUIREC";
            break;
          case wa:
            h = "ENVMAP_TYPE_SPHERE";
        }
        switch (r.envMap.mapping) {
          case ba:
          case Ea:
            p = "ENVMAP_MODE_REFRACTION";
        }
        switch (r.combine) {
          case la:
            d = "ENVMAP_BLENDING_MULTIPLY";
            break;
          case ha:
            d = "ENVMAP_BLENDING_MIX";
            break;
          case pa:
            d = "ENVMAP_BLENDING_ADD";
        }
      }
      var f,
        m,
        v = e.gammaFactor > 0 ? e.gammaFactor : 1,
        g = at(r.extensions, o, t),
        y = st(s),
        _ = a.createProgram();
      r.isRawShaderMaterial
        ? ((f = [y, "\n"].filter(ut).join("\n")),
          (m = [g, y, "\n"].filter(ut).join("\n")))
        : ((f = [
            "precision " + o.precision + " float;",
            "precision " + o.precision + " int;",
            "#define SHADER_NAME " + i.name,
            y,
            o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
            "#define GAMMA_FACTOR " + v,
            "#define MAX_BONES " + o.maxBones,
            o.useFog && o.fog ? "#define USE_FOG" : "",
            o.useFog && o.fogExp ? "#define FOG_EXP2" : "",
            o.map ? "#define USE_MAP" : "",
            o.envMap ? "#define USE_ENVMAP" : "",
            o.envMap ? "#define " + p : "",
            o.lightMap ? "#define USE_LIGHTMAP" : "",
            o.aoMap ? "#define USE_AOMAP" : "",
            o.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
            o.bumpMap ? "#define USE_BUMPMAP" : "",
            o.normalMap ? "#define USE_NORMALMAP" : "",
            o.displacementMap && o.supportsVertexTextures
              ? "#define USE_DISPLACEMENTMAP"
              : "",
            o.specularMap ? "#define USE_SPECULARMAP" : "",
            o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
            o.metalnessMap ? "#define USE_METALNESSMAP" : "",
            o.alphaMap ? "#define USE_ALPHAMAP" : "",
            o.vertexColors ? "#define USE_COLOR" : "",
            o.flatShading ? "#define FLAT_SHADED" : "",
            o.skinning ? "#define USE_SKINNING" : "",
            o.useVertexTexture ? "#define BONE_TEXTURE" : "",
            o.morphTargets ? "#define USE_MORPHTARGETS" : "",
            o.morphNormals && !1 === o.flatShading
              ? "#define USE_MORPHNORMALS"
              : "",
            o.doubleSided ? "#define DOUBLE_SIDED" : "",
            o.flipSided ? "#define FLIP_SIDED" : "",
            "#define NUM_CLIPPING_PLANES " + o.numClippingPlanes,
            o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
            o.shadowMapEnabled ? "#define " + l : "",
            o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
            o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
            o.logarithmicDepthBuffer && t.get("EXT_frag_depth")
              ? "#define USE_LOGDEPTHBUF_EXT"
              : "",
            "uniform mat4 modelMatrix;",
            "uniform mat4 modelViewMatrix;",
            "uniform mat4 projectionMatrix;",
            "uniform mat4 viewMatrix;",
            "uniform mat3 normalMatrix;",
            "uniform vec3 cameraPosition;",
            "attribute vec3 position;",
            "attribute vec3 normal;",
            "attribute vec2 uv;",
            "#ifdef USE_COLOR",
            "\tattribute vec3 color;",
            "#endif",
            "#ifdef USE_MORPHTARGETS",
            "\tattribute vec3 morphTarget0;",
            "\tattribute vec3 morphTarget1;",
            "\tattribute vec3 morphTarget2;",
            "\tattribute vec3 morphTarget3;",
            "\t#ifdef USE_MORPHNORMALS",
            "\t\tattribute vec3 morphNormal0;",
            "\t\tattribute vec3 morphNormal1;",
            "\t\tattribute vec3 morphNormal2;",
            "\t\tattribute vec3 morphNormal3;",
            "\t#else",
            "\t\tattribute vec3 morphTarget4;",
            "\t\tattribute vec3 morphTarget5;",
            "\t\tattribute vec3 morphTarget6;",
            "\t\tattribute vec3 morphTarget7;",
            "\t#endif",
            "#endif",
            "#ifdef USE_SKINNING",
            "\tattribute vec4 skinIndex;",
            "\tattribute vec4 skinWeight;",
            "#endif",
            "\n",
          ]
            .filter(ut)
            .join("\n")),
          (m = [
            g,
            "precision " + o.precision + " float;",
            "precision " + o.precision + " int;",
            "#define SHADER_NAME " + i.name,
            y,
            o.alphaTest ? "#define ALPHATEST " + o.alphaTest : "",
            "#define GAMMA_FACTOR " + v,
            o.useFog && o.fog ? "#define USE_FOG" : "",
            o.useFog && o.fogExp ? "#define FOG_EXP2" : "",
            o.map ? "#define USE_MAP" : "",
            o.envMap ? "#define USE_ENVMAP" : "",
            o.envMap ? "#define " + h : "",
            o.envMap ? "#define " + p : "",
            o.envMap ? "#define " + d : "",
            o.lightMap ? "#define USE_LIGHTMAP" : "",
            o.aoMap ? "#define USE_AOMAP" : "",
            o.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
            o.bumpMap ? "#define USE_BUMPMAP" : "",
            o.normalMap ? "#define USE_NORMALMAP" : "",
            o.specularMap ? "#define USE_SPECULARMAP" : "",
            o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
            o.metalnessMap ? "#define USE_METALNESSMAP" : "",
            o.alphaMap ? "#define USE_ALPHAMAP" : "",
            o.vertexColors ? "#define USE_COLOR" : "",
            o.gradientMap ? "#define USE_GRADIENTMAP" : "",
            o.flatShading ? "#define FLAT_SHADED" : "",
            o.doubleSided ? "#define DOUBLE_SIDED" : "",
            o.flipSided ? "#define FLIP_SIDED" : "",
            "#define NUM_CLIPPING_PLANES " + o.numClippingPlanes,
            "#define UNION_CLIPPING_PLANES " +
              (o.numClippingPlanes - o.numClipIntersection),
            o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
            o.shadowMapEnabled ? "#define " + l : "",
            o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
            o.physicallyCorrectLights
              ? "#define PHYSICALLY_CORRECT_LIGHTS"
              : "",
            o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
            o.logarithmicDepthBuffer && t.get("EXT_frag_depth")
              ? "#define USE_LOGDEPTHBUF_EXT"
              : "",
            o.envMap && t.get("EXT_shader_texture_lod")
              ? "#define TEXTURE_LOD_EXT"
              : "",
            "uniform mat4 viewMatrix;",
            "uniform vec3 cameraPosition;",
            o.toneMapping !== da ? "#define TONE_MAPPING" : "",
            o.toneMapping !== da ? Gs.tonemapping_pars_fragment : "",
            o.toneMapping !== da ? ot("toneMapping", o.toneMapping) : "",
            o.dithering ? "#define DITHERING" : "",
            o.outputEncoding ||
            o.mapEncoding ||
            o.envMapEncoding ||
            o.emissiveMapEncoding
              ? Gs.encodings_pars_fragment
              : "",
            o.mapEncoding ? rt("mapTexelToLinear", o.mapEncoding) : "",
            o.envMapEncoding ? rt("envMapTexelToLinear", o.envMapEncoding) : "",
            o.emissiveMapEncoding
              ? rt("emissiveMapTexelToLinear", o.emissiveMapEncoding)
              : "",
            o.outputEncoding ? it("linearToOutputTexel", o.outputEncoding) : "",
            o.depthPacking ? "#define DEPTH_PACKING " + r.depthPacking : "",
            "\n",
          ]
            .filter(ut)
            .join("\n"))),
        (c = ht(c)),
        (c = lt(c, o)),
        (u = ht(u)),
        (u = lt(u, o)),
        r.isShaderMaterial || ((c = pt(c)), (u = pt(u)));
      var b = f + c,
        x = m + u,
        E = tt(a, a.VERTEX_SHADER, b),
        w = tt(a, a.FRAGMENT_SHADER, x);
      a.attachShader(_, E),
        a.attachShader(_, w),
        void 0 !== r.index0AttributeName
          ? a.bindAttribLocation(_, 0, r.index0AttributeName)
          : !0 === o.morphTargets && a.bindAttribLocation(_, 0, "position"),
        a.linkProgram(_);
      var M = a.getProgramInfoLog(_),
        T = a.getShaderInfoLog(E),
        S = a.getShaderInfoLog(w),
        N = !0,
        C = !0;
      !1 === a.getProgramParameter(_, a.LINK_STATUS)
        ? ((N = !1),
          console.error(
            "THREE.WebGLProgram: shader error: ",
            a.getError(),
            "gl.VALIDATE_STATUS",
            a.getProgramParameter(_, a.VALIDATE_STATUS),
            "gl.getProgramInfoLog",
            M,
            T,
            S
          ))
        : "" !== M
        ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", M)
        : ("" !== T && "" !== S) || (C = !1),
        C &&
          (this.diagnostics = {
            runnable: N,
            material: r,
            programLog: M,
            vertexShader: { log: T, prefix: f },
            fragmentShader: { log: S, prefix: m },
          }),
        a.deleteShader(E),
        a.deleteShader(w);
      var A;
      this.getUniforms = function () {
        return void 0 === A && (A = new X(a, _, e)), A;
      };
      var R;
      return (
        (this.getAttributes = function () {
          return void 0 === R && (R = ct(a, _)), R;
        }),
        (this.destroy = function () {
          a.deleteProgram(_), (this.program = void 0);
        }),
        Object.defineProperties(this, {
          uniforms: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLProgram: .uniforms is now .getUniforms()."
                ),
                this.getUniforms()
              );
            },
          },
          attributes: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLProgram: .attributes is now .getAttributes()."
                ),
                this.getAttributes()
              );
            },
          },
        }),
        (this.id = Zs++),
        (this.code = n),
        (this.usedTimes = 1),
        (this.program = _),
        (this.vertexShader = E),
        (this.fragmentShader = w),
        this
      );
    }
    function ft(e, t, n) {
      function r(e) {
        var t = e.skeleton,
          r = t.bones;
        if (n.floatVertexTextures) return 1024;
        var i = n.maxVertexUniforms,
          o = Math.floor((i - 20) / 4),
          a = Math.min(o, r.length);
        return a < r.length
          ? (console.warn(
              "THREE.WebGLRenderer: Skeleton has " +
                r.length +
                " bones. This GPU supports " +
                a +
                "."
            ),
            0)
          : a;
      }
      function i(e, t) {
        var n;
        return (
          e
            ? e.isTexture
              ? (n = e.encoding)
              : e.isWebGLRenderTarget &&
                (console.warn(
                  "THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."
                ),
                (n = e.texture.encoding))
            : (n = Es),
          n === Es && t && (n = Ms),
          n
        );
      }
      var o = [],
        a = {
          MeshDepthMaterial: "depth",
          MeshDistanceMaterial: "distanceRGBA",
          MeshNormalMaterial: "normal",
          MeshBasicMaterial: "basic",
          MeshLambertMaterial: "lambert",
          MeshPhongMaterial: "phong",
          MeshToonMaterial: "phong",
          MeshStandardMaterial: "physical",
          MeshPhysicalMaterial: "physical",
          LineBasicMaterial: "basic",
          LineDashedMaterial: "dashed",
          PointsMaterial: "points",
          ShadowMaterial: "shadow",
        },
        s = [
          "precision",
          "supportsVertexTextures",
          "map",
          "mapEncoding",
          "envMap",
          "envMapMode",
          "envMapEncoding",
          "lightMap",
          "aoMap",
          "emissiveMap",
          "emissiveMapEncoding",
          "bumpMap",
          "normalMap",
          "displacementMap",
          "specularMap",
          "roughnessMap",
          "metalnessMap",
          "gradientMap",
          "alphaMap",
          "combine",
          "vertexColors",
          "fog",
          "useFog",
          "fogExp",
          "flatShading",
          "sizeAttenuation",
          "logarithmicDepthBuffer",
          "skinning",
          "maxBones",
          "useVertexTexture",
          "morphTargets",
          "morphNormals",
          "maxMorphTargets",
          "maxMorphNormals",
          "premultipliedAlpha",
          "numDirLights",
          "numPointLights",
          "numSpotLights",
          "numHemiLights",
          "numRectAreaLights",
          "shadowMapEnabled",
          "shadowMapType",
          "toneMapping",
          "physicallyCorrectLights",
          "alphaTest",
          "doubleSided",
          "flipSided",
          "numClippingPlanes",
          "numClipIntersection",
          "depthPacking",
          "dithering",
        ];
      (this.getParameters = function (t, o, s, c, u, l, h) {
        var p = a[t.type],
          d = h.isSkinnedMesh ? r(h) : 0,
          f = n.precision;
        null !== t.precision &&
          (f = n.getMaxPrecision(t.precision)) !== t.precision &&
          console.warn(
            "THREE.WebGLProgram.getParameters:",
            t.precision,
            "not supported, using",
            f,
            "instead."
          );
        var m = e.getRenderTarget();
        return {
          shaderID: p,
          precision: f,
          supportsVertexTextures: n.vertexTextures,
          outputEncoding: i(m ? m.texture : null, e.gammaOutput),
          map: !!t.map,
          mapEncoding: i(t.map, e.gammaInput),
          envMap: !!t.envMap,
          envMapMode: t.envMap && t.envMap.mapping,
          envMapEncoding: i(t.envMap, e.gammaInput),
          envMapCubeUV:
            !!t.envMap && (t.envMap.mapping === Ma || t.envMap.mapping === Ta),
          lightMap: !!t.lightMap,
          aoMap: !!t.aoMap,
          emissiveMap: !!t.emissiveMap,
          emissiveMapEncoding: i(t.emissiveMap, e.gammaInput),
          bumpMap: !!t.bumpMap,
          normalMap: !!t.normalMap,
          displacementMap: !!t.displacementMap,
          roughnessMap: !!t.roughnessMap,
          metalnessMap: !!t.metalnessMap,
          specularMap: !!t.specularMap,
          alphaMap: !!t.alphaMap,
          gradientMap: !!t.gradientMap,
          combine: t.combine,
          vertexColors: t.vertexColors,
          fog: !!c,
          useFog: t.fog,
          fogExp: c && c.isFogExp2,
          flatShading: t.flatShading,
          sizeAttenuation: t.sizeAttenuation,
          logarithmicDepthBuffer: n.logarithmicDepthBuffer,
          skinning: t.skinning && d > 0,
          maxBones: d,
          useVertexTexture: n.floatVertexTextures,
          morphTargets: t.morphTargets,
          morphNormals: t.morphNormals,
          maxMorphTargets: e.maxMorphTargets,
          maxMorphNormals: e.maxMorphNormals,
          numDirLights: o.directional.length,
          numPointLights: o.point.length,
          numSpotLights: o.spot.length,
          numRectAreaLights: o.rectArea.length,
          numHemiLights: o.hemi.length,
          numClippingPlanes: u,
          numClipIntersection: l,
          dithering: t.dithering,
          shadowMapEnabled:
            e.shadowMap.enabled && h.receiveShadow && s.length > 0,
          shadowMapType: e.shadowMap.type,
          toneMapping: e.toneMapping,
          physicallyCorrectLights: e.physicallyCorrectLights,
          premultipliedAlpha: t.premultipliedAlpha,
          alphaTest: t.alphaTest,
          doubleSided: t.side === Co,
          flipSided: t.side === No,
          depthPacking: void 0 !== t.depthPacking && t.depthPacking,
        };
      }),
        (this.getProgramCode = function (t, n) {
          var r = [];
          if (
            (n.shaderID
              ? r.push(n.shaderID)
              : (r.push(t.fragmentShader), r.push(t.vertexShader)),
            void 0 !== t.defines)
          )
            for (var i in t.defines) r.push(i), r.push(t.defines[i]);
          for (var o = 0; o < s.length; o++) r.push(n[s[o]]);
          return (
            r.push(t.onBeforeCompile.toString()),
            r.push(e.gammaOutput),
            r.join()
          );
        }),
        (this.acquireProgram = function (n, r, i, a) {
          for (var s, c = 0, u = o.length; c < u; c++) {
            var l = o[c];
            if (l.code === a) {
              (s = l), ++s.usedTimes;
              break;
            }
          }
          return void 0 === s && ((s = new dt(e, t, a, n, r, i)), o.push(s)), s;
        }),
        (this.releaseProgram = function (e) {
          if (0 == --e.usedTimes) {
            var t = o.indexOf(e);
            (o[t] = o[o.length - 1]), o.pop(), e.destroy();
          }
        }),
        (this.programs = o);
    }
    function mt(e, t, n, r, i, o, a) {
      function s(e, t) {
        if (e.width > t || e.height > t) {
          var n = t / Math.max(e.width, e.height),
            r = document.createElementNS(
              "http://www.w3.org/1999/xhtml",
              "canvas"
            );
          (r.width = Math.floor(e.width * n)),
            (r.height = Math.floor(e.height * n));
          return (
            r
              .getContext("2d")
              .drawImage(e, 0, 0, e.width, e.height, 0, 0, r.width, r.height),
            console.warn(
              "THREE.WebGLRenderer: image is too big (" +
                e.width +
                "x" +
                e.height +
                "). Resized to " +
                r.width +
                "x" +
                r.height,
              e
            ),
            r
          );
        }
        return e;
      }
      function c(e) {
        return Os.isPowerOfTwo(e.width) && Os.isPowerOfTwo(e.height);
      }
      function u(e) {
        if (e instanceof HTMLImageElement || e instanceof HTMLCanvasElement) {
          var t = document.createElementNS(
            "http://www.w3.org/1999/xhtml",
            "canvas"
          );
          (t.width = Os.nearestPowerOfTwo(e.width)),
            (t.height = Os.nearestPowerOfTwo(e.height));
          return (
            t.getContext("2d").drawImage(e, 0, 0, t.width, t.height),
            console.warn(
              "THREE.WebGLRenderer: image is not power of two (" +
                e.width +
                "x" +
                e.height +
                "). Resized to " +
                t.width +
                "x" +
                t.height,
              e
            ),
            t
          );
        }
        return e;
      }
      function l(e) {
        return (
          e.wrapS !== Na ||
          e.wrapT !== Na ||
          (e.minFilter !== Aa && e.minFilter !== Oa)
        );
      }
      function h(e, t) {
        return (
          e.generateMipmaps && t && e.minFilter !== Aa && e.minFilter !== Oa
        );
      }
      function p(t) {
        return t === Aa || t === Ra || t === Pa ? e.NEAREST : e.LINEAR;
      }
      function d(e) {
        var t = e.target;
        t.removeEventListener("dispose", d), m(t), a.textures--;
      }
      function f(e) {
        var t = e.target;
        t.removeEventListener("dispose", f), v(t), a.textures--;
      }
      function m(t) {
        var n = r.get(t);
        if (t.image && n.__image__webglTextureCube)
          e.deleteTexture(n.__image__webglTextureCube);
        else {
          if (void 0 === n.__webglInit) return;
          e.deleteTexture(n.__webglTexture);
        }
        r.remove(t);
      }
      function v(t) {
        var n = r.get(t),
          i = r.get(t.texture);
        if (t) {
          if (
            (void 0 !== i.__webglTexture && e.deleteTexture(i.__webglTexture),
            t.depthTexture && t.depthTexture.dispose(),
            t.isWebGLRenderTargetCube)
          )
            for (var o = 0; o < 6; o++)
              e.deleteFramebuffer(n.__webglFramebuffer[o]),
                n.__webglDepthbuffer &&
                  e.deleteRenderbuffer(n.__webglDepthbuffer[o]);
          else
            e.deleteFramebuffer(n.__webglFramebuffer),
              n.__webglDepthbuffer &&
                e.deleteRenderbuffer(n.__webglDepthbuffer);
          r.remove(t.texture), r.remove(t);
        }
      }
      function g(t, i) {
        var o = r.get(t);
        if (t.version > 0 && o.__version !== t.version) {
          var a = t.image;
          if (void 0 === a)
            console.warn(
              "THREE.WebGLRenderer: Texture marked for update but image is undefined",
              t
            );
          else {
            if (!1 !== a.complete) return void x(o, t, i);
            console.warn(
              "THREE.WebGLRenderer: Texture marked for update but image is incomplete",
              t
            );
          }
        }
        n.activeTexture(e.TEXTURE0 + i),
          n.bindTexture(e.TEXTURE_2D, o.__webglTexture);
      }
      function y(t, u) {
        var l = r.get(t);
        if (6 === t.image.length)
          if (t.version > 0 && l.__version !== t.version) {
            l.__image__webglTextureCube ||
              (t.addEventListener("dispose", d),
              (l.__image__webglTextureCube = e.createTexture()),
              a.textures++),
              n.activeTexture(e.TEXTURE0 + u),
              n.bindTexture(e.TEXTURE_CUBE_MAP, l.__image__webglTextureCube),
              e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY);
            for (
              var p = t && t.isCompressedTexture,
                f = t.image[0] && t.image[0].isDataTexture,
                m = [],
                v = 0;
              v < 6;
              v++
            )
              m[v] =
                p || f
                  ? f
                    ? t.image[v].image
                    : t.image[v]
                  : s(t.image[v], i.maxCubemapSize);
            var g = m[0],
              y = c(g),
              _ = o.convert(t.format),
              x = o.convert(t.type);
            b(e.TEXTURE_CUBE_MAP, t, y);
            for (var v = 0; v < 6; v++)
              if (p)
                for (var E, w = m[v].mipmaps, M = 0, T = w.length; M < T; M++)
                  (E = w[M]),
                    t.format !== Za && t.format !== Ya
                      ? n.getCompressedTextureFormats().indexOf(_) > -1
                        ? n.compressedTexImage2D(
                            e.TEXTURE_CUBE_MAP_POSITIVE_X + v,
                            M,
                            _,
                            E.width,
                            E.height,
                            0,
                            E.data
                          )
                        : console.warn(
                            "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                          )
                      : n.texImage2D(
                          e.TEXTURE_CUBE_MAP_POSITIVE_X + v,
                          M,
                          _,
                          E.width,
                          E.height,
                          0,
                          _,
                          x,
                          E.data
                        );
              else
                f
                  ? n.texImage2D(
                      e.TEXTURE_CUBE_MAP_POSITIVE_X + v,
                      0,
                      _,
                      m[v].width,
                      m[v].height,
                      0,
                      _,
                      x,
                      m[v].data
                    )
                  : n.texImage2D(
                      e.TEXTURE_CUBE_MAP_POSITIVE_X + v,
                      0,
                      _,
                      _,
                      x,
                      m[v]
                    );
            h(t, y) && e.generateMipmap(e.TEXTURE_CUBE_MAP),
              (l.__version = t.version),
              t.onUpdate && t.onUpdate(t);
          } else
            n.activeTexture(e.TEXTURE0 + u),
              n.bindTexture(e.TEXTURE_CUBE_MAP, l.__image__webglTextureCube);
      }
      function _(t, i) {
        n.activeTexture(e.TEXTURE0 + i),
          n.bindTexture(e.TEXTURE_CUBE_MAP, r.get(t).__webglTexture);
      }
      function b(n, a, s) {
        var c;
        if (
          (s
            ? (e.texParameteri(n, e.TEXTURE_WRAP_S, o.convert(a.wrapS)),
              e.texParameteri(n, e.TEXTURE_WRAP_T, o.convert(a.wrapT)),
              e.texParameteri(n, e.TEXTURE_MAG_FILTER, o.convert(a.magFilter)),
              e.texParameteri(n, e.TEXTURE_MIN_FILTER, o.convert(a.minFilter)))
            : (e.texParameteri(n, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
              e.texParameteri(n, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
              (a.wrapS === Na && a.wrapT === Na) ||
                console.warn(
                  "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",
                  a
                ),
              e.texParameteri(n, e.TEXTURE_MAG_FILTER, p(a.magFilter)),
              e.texParameteri(n, e.TEXTURE_MIN_FILTER, p(a.minFilter)),
              a.minFilter !== Aa &&
                a.minFilter !== Oa &&
                console.warn(
                  "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",
                  a
                )),
          (c = t.get("EXT_texture_filter_anisotropic")))
        ) {
          if (a.type === za && null === t.get("OES_texture_float_linear"))
            return;
          if (a.type === Ha && null === t.get("OES_texture_half_float_linear"))
            return;
          (a.anisotropy > 1 || r.get(a).__currentAnisotropy) &&
            (e.texParameterf(
              n,
              c.TEXTURE_MAX_ANISOTROPY_EXT,
              Math.min(a.anisotropy, i.getMaxAnisotropy())
            ),
            (r.get(a).__currentAnisotropy = a.anisotropy));
        }
      }
      function x(t, r, p) {
        void 0 === t.__webglInit &&
          ((t.__webglInit = !0),
          r.addEventListener("dispose", d),
          (t.__webglTexture = e.createTexture()),
          a.textures++),
          n.activeTexture(e.TEXTURE0 + p),
          n.bindTexture(e.TEXTURE_2D, t.__webglTexture),
          e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, r.flipY),
          e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha),
          e.pixelStorei(e.UNPACK_ALIGNMENT, r.unpackAlignment);
        var f = s(r.image, i.maxTextureSize);
        l(r) && !1 === c(f) && (f = u(f));
        var m = c(f),
          v = o.convert(r.format),
          g = o.convert(r.type);
        b(e.TEXTURE_2D, r, m);
        var y,
          _ = r.mipmaps;
        if (r.isDepthTexture) {
          var x = e.DEPTH_COMPONENT;
          if (r.type === za) {
            if (!C)
              throw new Error("Float Depth Texture only supported in WebGL2.0");
            x = e.DEPTH_COMPONENT32F;
          } else C && (x = e.DEPTH_COMPONENT16);
          r.format === $a &&
            x === e.DEPTH_COMPONENT &&
            r.type !== Fa &&
            r.type !== Ba &&
            (console.warn(
              "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
            ),
            (r.type = Fa),
            (g = o.convert(r.type))),
            r.format === es &&
              ((x = e.DEPTH_STENCIL),
              r.type !== qa &&
                (console.warn(
                  "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                ),
                (r.type = qa),
                (g = o.convert(r.type)))),
            n.texImage2D(e.TEXTURE_2D, 0, x, f.width, f.height, 0, v, g, null);
        } else if (r.isDataTexture)
          if (_.length > 0 && m) {
            for (var E = 0, w = _.length; E < w; E++)
              (y = _[E]),
                n.texImage2D(
                  e.TEXTURE_2D,
                  E,
                  v,
                  y.width,
                  y.height,
                  0,
                  v,
                  g,
                  y.data
                );
            r.generateMipmaps = !1;
          } else
            n.texImage2D(
              e.TEXTURE_2D,
              0,
              v,
              f.width,
              f.height,
              0,
              v,
              g,
              f.data
            );
        else if (r.isCompressedTexture)
          for (var E = 0, w = _.length; E < w; E++)
            (y = _[E]),
              r.format !== Za && r.format !== Ya
                ? n.getCompressedTextureFormats().indexOf(v) > -1
                  ? n.compressedTexImage2D(
                      e.TEXTURE_2D,
                      E,
                      v,
                      y.width,
                      y.height,
                      0,
                      y.data
                    )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                    )
                : n.texImage2D(
                    e.TEXTURE_2D,
                    E,
                    v,
                    y.width,
                    y.height,
                    0,
                    v,
                    g,
                    y.data
                  );
        else if (_.length > 0 && m) {
          for (var E = 0, w = _.length; E < w; E++)
            (y = _[E]), n.texImage2D(e.TEXTURE_2D, E, v, v, g, y);
          r.generateMipmaps = !1;
        } else n.texImage2D(e.TEXTURE_2D, 0, v, v, g, f);
        h(r, m) && e.generateMipmap(e.TEXTURE_2D),
          (t.__version = r.version),
          r.onUpdate && r.onUpdate(r);
      }
      function E(t, i, a, s) {
        var c = o.convert(i.texture.format),
          u = o.convert(i.texture.type);
        n.texImage2D(s, 0, c, i.width, i.height, 0, c, u, null),
          e.bindFramebuffer(e.FRAMEBUFFER, t),
          e.framebufferTexture2D(
            e.FRAMEBUFFER,
            a,
            s,
            r.get(i.texture).__webglTexture,
            0
          ),
          e.bindFramebuffer(e.FRAMEBUFFER, null);
      }
      function w(t, n) {
        e.bindRenderbuffer(e.RENDERBUFFER, t),
          n.depthBuffer && !n.stencilBuffer
            ? (e.renderbufferStorage(
                e.RENDERBUFFER,
                e.DEPTH_COMPONENT16,
                n.width,
                n.height
              ),
              e.framebufferRenderbuffer(
                e.FRAMEBUFFER,
                e.DEPTH_ATTACHMENT,
                e.RENDERBUFFER,
                t
              ))
            : n.depthBuffer && n.stencilBuffer
            ? (e.renderbufferStorage(
                e.RENDERBUFFER,
                e.DEPTH_STENCIL,
                n.width,
                n.height
              ),
              e.framebufferRenderbuffer(
                e.FRAMEBUFFER,
                e.DEPTH_STENCIL_ATTACHMENT,
                e.RENDERBUFFER,
                t
              ))
            : e.renderbufferStorage(e.RENDERBUFFER, e.RGBA4, n.width, n.height),
          e.bindRenderbuffer(e.RENDERBUFFER, null);
      }
      function M(t, n) {
        if (n && n.isWebGLRenderTargetCube)
          throw new Error(
            "Depth Texture with cube render targets is not supported"
          );
        if (
          (e.bindFramebuffer(e.FRAMEBUFFER, t),
          !n.depthTexture || !n.depthTexture.isDepthTexture)
        )
          throw new Error(
            "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
          );
        (r.get(n.depthTexture).__webglTexture &&
          n.depthTexture.image.width === n.width &&
          n.depthTexture.image.height === n.height) ||
          ((n.depthTexture.image.width = n.width),
          (n.depthTexture.image.height = n.height),
          (n.depthTexture.needsUpdate = !0)),
          g(n.depthTexture, 0);
        var i = r.get(n.depthTexture).__webglTexture;
        if (n.depthTexture.format === $a)
          e.framebufferTexture2D(
            e.FRAMEBUFFER,
            e.DEPTH_ATTACHMENT,
            e.TEXTURE_2D,
            i,
            0
          );
        else {
          if (n.depthTexture.format !== es)
            throw new Error("Unknown depthTexture format");
          e.framebufferTexture2D(
            e.FRAMEBUFFER,
            e.DEPTH_STENCIL_ATTACHMENT,
            e.TEXTURE_2D,
            i,
            0
          );
        }
      }
      function T(t) {
        var n = r.get(t),
          i = !0 === t.isWebGLRenderTargetCube;
        if (t.depthTexture) {
          if (i)
            throw new Error(
              "target.depthTexture not supported in Cube render targets"
            );
          M(n.__webglFramebuffer, t);
        } else if (i) {
          n.__webglDepthbuffer = [];
          for (var o = 0; o < 6; o++)
            e.bindFramebuffer(e.FRAMEBUFFER, n.__webglFramebuffer[o]),
              (n.__webglDepthbuffer[o] = e.createRenderbuffer()),
              w(n.__webglDepthbuffer[o], t);
        } else
          e.bindFramebuffer(e.FRAMEBUFFER, n.__webglFramebuffer),
            (n.__webglDepthbuffer = e.createRenderbuffer()),
            w(n.__webglDepthbuffer, t);
        e.bindFramebuffer(e.FRAMEBUFFER, null);
      }
      function S(t) {
        var i = r.get(t),
          o = r.get(t.texture);
        t.addEventListener("dispose", f),
          (o.__webglTexture = e.createTexture()),
          a.textures++;
        var s = !0 === t.isWebGLRenderTargetCube,
          u = c(t);
        if (s) {
          i.__webglFramebuffer = [];
          for (var l = 0; l < 6; l++)
            i.__webglFramebuffer[l] = e.createFramebuffer();
        } else i.__webglFramebuffer = e.createFramebuffer();
        if (s) {
          n.bindTexture(e.TEXTURE_CUBE_MAP, o.__webglTexture),
            b(e.TEXTURE_CUBE_MAP, t.texture, u);
          for (var l = 0; l < 6; l++)
            E(
              i.__webglFramebuffer[l],
              t,
              e.COLOR_ATTACHMENT0,
              e.TEXTURE_CUBE_MAP_POSITIVE_X + l
            );
          h(t.texture, u) && e.generateMipmap(e.TEXTURE_CUBE_MAP),
            n.bindTexture(e.TEXTURE_CUBE_MAP, null);
        } else
          n.bindTexture(e.TEXTURE_2D, o.__webglTexture),
            b(e.TEXTURE_2D, t.texture, u),
            E(i.__webglFramebuffer, t, e.COLOR_ATTACHMENT0, e.TEXTURE_2D),
            h(t.texture, u) && e.generateMipmap(e.TEXTURE_2D),
            n.bindTexture(e.TEXTURE_2D, null);
        t.depthBuffer && T(t);
      }
      function N(t) {
        var i = t.texture;
        if (h(i, c(t))) {
          var o = t.isWebGLRenderTargetCube ? e.TEXTURE_CUBE_MAP : e.TEXTURE_2D,
            a = r.get(i).__webglTexture;
          n.bindTexture(o, a), e.generateMipmap(o), n.bindTexture(o, null);
        }
      }
      var C =
        "undefined" != typeof WebGL2RenderingContext &&
        e instanceof WebGL2RenderingContext;
      (this.setTexture2D = g),
        (this.setTextureCube = y),
        (this.setTextureCubeDynamic = _),
        (this.setupRenderTarget = S),
        (this.updateRenderTargetMipmap = N);
    }
    function vt() {
      function e(e) {
        var t = e.uuid,
          n = r[t];
        return void 0 === n && ((n = {}), (r[t] = n)), n;
      }
      function t(e) {
        delete r[e.uuid];
      }
      function n() {
        r = {};
      }
      var r = {};
      return { get: e, remove: t, clear: n };
    }
    function gt(e, t, n) {
      function r() {
        var t = !1,
          n = new a(),
          r = null,
          i = new a(0, 0, 0, 0);
        return {
          setMask: function (n) {
            r === n || t || (e.colorMask(n, n, n, n), (r = n));
          },
          setLocked: function (e) {
            t = e;
          },
          setClear: function (t, r, o, a, s) {
            !0 === s && ((t *= a), (r *= a), (o *= a)),
              n.set(t, r, o, a),
              !1 === i.equals(n) && (e.clearColor(t, r, o, a), i.copy(n));
          },
          reset: function () {
            (t = !1), (r = null), i.set(-1, 0, 0, 0);
          },
        };
      }
      function i() {
        var t = !1,
          n = null,
          r = null,
          i = null;
        return {
          setTest: function (t) {
            t ? p(e.DEPTH_TEST) : d(e.DEPTH_TEST);
          },
          setMask: function (r) {
            n === r || t || (e.depthMask(r), (n = r));
          },
          setFunc: function (t) {
            if (r !== t) {
              if (t)
                switch (t) {
                  case na:
                    e.depthFunc(e.NEVER);
                    break;
                  case ra:
                    e.depthFunc(e.ALWAYS);
                    break;
                  case ia:
                    e.depthFunc(e.LESS);
                    break;
                  case oa:
                    e.depthFunc(e.LEQUAL);
                    break;
                  case aa:
                    e.depthFunc(e.EQUAL);
                    break;
                  case sa:
                    e.depthFunc(e.GEQUAL);
                    break;
                  case ca:
                    e.depthFunc(e.GREATER);
                    break;
                  case ua:
                    e.depthFunc(e.NOTEQUAL);
                    break;
                  default:
                    e.depthFunc(e.LEQUAL);
                }
              else e.depthFunc(e.LEQUAL);
              r = t;
            }
          },
          setLocked: function (e) {
            t = e;
          },
          setClear: function (t) {
            i !== t && (e.clearDepth(t), (i = t));
          },
          reset: function () {
            (t = !1), (n = null), (r = null), (i = null);
          },
        };
      }
      function o() {
        var t = !1,
          n = null,
          r = null,
          i = null,
          o = null,
          a = null,
          s = null,
          c = null,
          u = null;
        return {
          setTest: function (t) {
            t ? p(e.STENCIL_TEST) : d(e.STENCIL_TEST);
          },
          setMask: function (r) {
            n === r || t || (e.stencilMask(r), (n = r));
          },
          setFunc: function (t, n, a) {
            (r === t && i === n && o === a) ||
              (e.stencilFunc(t, n, a), (r = t), (i = n), (o = a));
          },
          setOp: function (t, n, r) {
            (a === t && s === n && c === r) ||
              (e.stencilOp(t, n, r), (a = t), (s = n), (c = r));
          },
          setLocked: function (e) {
            t = e;
          },
          setClear: function (t) {
            u !== t && (e.clearStencil(t), (u = t));
          },
          reset: function () {
            (t = !1),
              (n = null),
              (r = null),
              (i = null),
              (o = null),
              (a = null),
              (s = null),
              (c = null),
              (u = null);
          },
        };
      }
      function s(t, n, r) {
        var i = new Uint8Array(4),
          o = e.createTexture();
        e.bindTexture(t, o),
          e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST),
          e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
        for (var a = 0; a < r; a++)
          e.texImage2D(n + a, 0, e.RGBA, 1, 1, 0, e.RGBA, e.UNSIGNED_BYTE, i);
        return o;
      }
      function c() {
        for (var e = 0, t = L.length; e < t; e++) L[e] = 0;
      }
      function u(n) {
        if (
          ((L[n] = 1),
          0 === I[n] && (e.enableVertexAttribArray(n), (I[n] = 1)),
          0 !== U[n])
        ) {
          t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, 0),
            (U[n] = 0);
        }
      }
      function l(n, r) {
        if (
          ((L[n] = 1),
          0 === I[n] && (e.enableVertexAttribArray(n), (I[n] = 1)),
          U[n] !== r)
        ) {
          t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, r),
            (U[n] = r);
        }
      }
      function h() {
        for (var t = 0, n = I.length; t !== n; ++t)
          I[t] !== L[t] && (e.disableVertexAttribArray(t), (I[t] = 0));
      }
      function p(t) {
        !0 !== k[t] && (e.enable(t), (k[t] = !0));
      }
      function d(t) {
        !1 !== k[t] && (e.disable(t), (k[t] = !1));
      }
      function f() {
        if (
          null === F &&
          ((F = []),
          t.get("WEBGL_compressed_texture_pvrtc") ||
            t.get("WEBGL_compressed_texture_s3tc") ||
            t.get("WEBGL_compressed_texture_etc1"))
        )
          for (
            var n = e.getParameter(e.COMPRESSED_TEXTURE_FORMATS), r = 0;
            r < n.length;
            r++
          )
            F.push(n[r]);
        return F;
      }
      function m(t) {
        return V !== t && (e.useProgram(t), (V = t), !0);
      }
      function v(t, r, i, o, a, s, c, u) {
        if ((t !== Lo ? p(e.BLEND) : d(e.BLEND), t !== Vo)) {
          if (t !== B || u !== X)
            switch (t) {
              case Uo:
                u
                  ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                    e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE))
                  : (e.blendEquation(e.FUNC_ADD),
                    e.blendFunc(e.SRC_ALPHA, e.ONE));
                break;
              case ko:
                u
                  ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.ZERO,
                      e.ONE_MINUS_SRC_COLOR,
                      e.ONE_MINUS_SRC_ALPHA
                    ))
                  : (e.blendEquation(e.FUNC_ADD),
                    e.blendFunc(e.ZERO, e.ONE_MINUS_SRC_COLOR));
                break;
              case Fo:
                u
                  ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                    e.blendFuncSeparate(
                      e.ZERO,
                      e.SRC_COLOR,
                      e.ZERO,
                      e.SRC_ALPHA
                    ))
                  : (e.blendEquation(e.FUNC_ADD),
                    e.blendFunc(e.ZERO, e.SRC_COLOR));
                break;
              default:
                u
                  ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                    e.blendFuncSeparate(
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    ))
                  : (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                    e.blendFuncSeparate(
                      e.SRC_ALPHA,
                      e.ONE_MINUS_SRC_ALPHA,
                      e.ONE,
                      e.ONE_MINUS_SRC_ALPHA
                    ));
            }
          (z = null),
            (H = null),
            (j = null),
            (G = null),
            (W = null),
            (q = null);
        } else
          (a = a || r),
            (s = s || i),
            (c = c || o),
            (r === z && a === G) ||
              (e.blendEquationSeparate(n.convert(r), n.convert(a)),
              (z = r),
              (G = a)),
            (i === H && o === j && s === W && c === q) ||
              (e.blendFuncSeparate(
                n.convert(i),
                n.convert(o),
                n.convert(s),
                n.convert(c)
              ),
              (H = i),
              (j = o),
              (W = s),
              (q = c));
        (B = t), (X = u);
      }
      function g(t) {
        t.side === Co ? d(e.CULL_FACE) : p(e.CULL_FACE),
          y(t.side === No),
          !0 === t.transparent
            ? v(
                t.blending,
                t.blendEquation,
                t.blendSrc,
                t.blendDst,
                t.blendEquationAlpha,
                t.blendSrcAlpha,
                t.blendDstAlpha,
                t.premultipliedAlpha
              )
            : v(Lo),
          P.setFunc(t.depthFunc),
          P.setTest(t.depthTest),
          P.setMask(t.depthWrite),
          R.setMask(t.colorWrite),
          x(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits);
      }
      function y(t) {
        Y !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), (Y = t));
      }
      function _(t) {
        t !== go
          ? (p(e.CULL_FACE),
            t !== Z &&
              (t === yo
                ? e.cullFace(e.BACK)
                : t === _o
                ? e.cullFace(e.FRONT)
                : e.cullFace(e.FRONT_AND_BACK)))
          : d(e.CULL_FACE),
          (Z = t);
      }
      function b(t) {
        t !== K && (te && e.lineWidth(t), (K = t));
      }
      function x(t, n, r) {
        t
          ? (p(e.POLYGON_OFFSET_FILL),
            (J === n && Q === r) || (e.polygonOffset(n, r), (J = n), (Q = r)))
          : d(e.POLYGON_OFFSET_FILL);
      }
      function E(t) {
        t ? p(e.SCISSOR_TEST) : d(e.SCISSOR_TEST);
      }
      function w(t) {
        void 0 === t && (t = e.TEXTURE0 + $ - 1),
          ne !== t && (e.activeTexture(t), (ne = t));
      }
      function M(t, n) {
        null === ne && w();
        var r = re[ne];
        void 0 === r && ((r = { type: void 0, texture: void 0 }), (re[ne] = r)),
          (r.type === t && r.texture === n) ||
            (e.bindTexture(t, n || ae[t]), (r.type = t), (r.texture = n));
      }
      function T() {
        try {
          e.compressedTexImage2D.apply(e, arguments);
        } catch (e) {
          console.error("THREE.WebGLState:", e);
        }
      }
      function S() {
        try {
          e.texImage2D.apply(e, arguments);
        } catch (e) {
          console.error("THREE.WebGLState:", e);
        }
      }
      function N(t) {
        !1 === ie.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), ie.copy(t));
      }
      function C(t) {
        !1 === oe.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), oe.copy(t));
      }
      function A() {
        for (var t = 0; t < I.length; t++)
          1 === I[t] && (e.disableVertexAttribArray(t), (I[t] = 0));
        (k = {}),
          (F = null),
          (ne = null),
          (re = {}),
          (V = null),
          (B = null),
          (Y = null),
          (Z = null),
          R.reset(),
          P.reset(),
          O.reset();
      }
      var R = new r(),
        P = new i(),
        O = new o(),
        D = e.getParameter(e.MAX_VERTEX_ATTRIBS),
        L = new Uint8Array(D),
        I = new Uint8Array(D),
        U = new Uint8Array(D),
        k = {},
        F = null,
        V = null,
        B = null,
        z = null,
        H = null,
        j = null,
        G = null,
        W = null,
        q = null,
        X = !1,
        Y = null,
        Z = null,
        K = null,
        J = null,
        Q = null,
        $ = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
        ee = parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1]),
        te = parseFloat(ee) >= 1,
        ne = null,
        re = {},
        ie = new a(),
        oe = new a(),
        ae = {};
      return (
        (ae[e.TEXTURE_2D] = s(e.TEXTURE_2D, e.TEXTURE_2D, 1)),
        (ae[e.TEXTURE_CUBE_MAP] = s(
          e.TEXTURE_CUBE_MAP,
          e.TEXTURE_CUBE_MAP_POSITIVE_X,
          6
        )),
        R.setClear(0, 0, 0, 1),
        P.setClear(1),
        O.setClear(0),
        p(e.DEPTH_TEST),
        P.setFunc(oa),
        y(!1),
        _(yo),
        p(e.CULL_FACE),
        p(e.BLEND),
        v(Io),
        {
          buffers: { color: R, depth: P, stencil: O },
          initAttributes: c,
          enableAttribute: u,
          enableAttributeAndDivisor: l,
          disableUnusedAttributes: h,
          enable: p,
          disable: d,
          getCompressedTextureFormats: f,
          useProgram: m,
          setBlending: v,
          setMaterial: g,
          setFlipSided: y,
          setCullFace: _,
          setLineWidth: b,
          setPolygonOffset: x,
          setScissorTest: E,
          activeTexture: w,
          bindTexture: M,
          compressedTexImage2D: T,
          texImage2D: S,
          scissor: N,
          viewport: C,
          reset: A,
        }
      );
    }
    function yt(e, t, n) {
      function r() {
        if (void 0 !== o) return o;
        var n = t.get("EXT_texture_filter_anisotropic");
        return (o =
          null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0);
      }
      function i(t) {
        if ("highp" === t) {
          if (
            e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT)
              .precision > 0 &&
            e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT)
              .precision > 0
          )
            return "highp";
          t = "mediump";
        }
        return "mediump" === t &&
          e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT)
            .precision > 0 &&
          e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT)
            .precision > 0
          ? "mediump"
          : "lowp";
      }
      var o,
        a = void 0 !== n.precision ? n.precision : "highp",
        s = i(a);
      s !== a &&
        (console.warn(
          "THREE.WebGLRenderer:",
          a,
          "not supported, using",
          s,
          "instead."
        ),
        (a = s));
      var c = !0 === n.logarithmicDepthBuffer && !!t.get("EXT_frag_depth"),
        u = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),
        l = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
        h = e.getParameter(e.MAX_TEXTURE_SIZE),
        p = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),
        d = e.getParameter(e.MAX_VERTEX_ATTRIBS),
        f = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),
        m = e.getParameter(e.MAX_VARYING_VECTORS),
        v = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),
        g = l > 0,
        y = !!t.get("OES_texture_float");
      return {
        getMaxAnisotropy: r,
        getMaxPrecision: i,
        precision: a,
        logarithmicDepthBuffer: c,
        maxTextures: u,
        maxVertexTextures: l,
        maxTextureSize: h,
        maxCubemapSize: p,
        maxAttributes: d,
        maxVertexUniforms: f,
        maxVaryings: m,
        maxFragmentUniforms: v,
        vertexTextures: g,
        floatFragmentTextures: y,
        floatVertexTextures: g && y,
      };
    }
    function _t(e) {
      me.call(this), (this.cameras = e || []);
    }
    function bt(e) {
      function t() {
        if (null !== r && r.isPresenting) {
          var t = r.getEyeParameters("left"),
            i = t.renderWidth,
            o = t.renderHeight;
          (f = e.getPixelRatio()),
            (d = e.getSize()),
            e.setDrawingBufferSize(2 * i, o, 1);
        } else n.enabled && e.setDrawingBufferSize(d.width, d.height, f);
      }
      var n = this,
        r = null,
        i = null;
      "VRFrameData" in window && (i = new window.VRFrameData());
      var o = new h(),
        s = new h(),
        c = new h(),
        u = new me();
      (u.bounds = new a(0, 0, 0.5, 1)), u.layers.enable(1);
      var l = new me();
      (l.bounds = new a(0.5, 0, 0.5, 1)), l.layers.enable(2);
      var p = new _t([u, l]);
      p.layers.enable(1), p.layers.enable(2);
      var d, f;
      window.addEventListener("vrdisplaypresentchange", t, !1),
        (this.enabled = !1),
        (this.standing = !1),
        (this.getDevice = function () {
          return r;
        }),
        (this.setDevice = function (e) {
          void 0 !== e && (r = e);
        }),
        (this.getCamera = function (e) {
          if (null === r) return e;
          (r.depthNear = e.near), (r.depthFar = e.far), r.getFrameData(i);
          var t = i.pose;
          null !== t.position
            ? e.position.fromArray(t.position)
            : e.position.set(0, 0, 0),
            null !== t.orientation && e.quaternion.fromArray(t.orientation),
            e.updateMatrixWorld();
          var n = r.stageParameters;
          if (
            (this.standing &&
              n &&
              (s.fromArray(n.sittingToStandingTransform),
              c.getInverse(s),
              e.matrixWorld.multiply(s),
              e.matrixWorldInverse.multiply(c)),
            !1 === r.isPresenting)
          )
            return e;
          (u.near = e.near),
            (l.near = e.near),
            (u.far = e.far),
            (l.far = e.far),
            p.matrixWorld.copy(e.matrixWorld),
            p.matrixWorldInverse.copy(e.matrixWorldInverse),
            u.matrixWorldInverse.fromArray(i.leftViewMatrix),
            l.matrixWorldInverse.fromArray(i.rightViewMatrix),
            this.standing &&
              n &&
              (u.matrixWorldInverse.multiply(c),
              l.matrixWorldInverse.multiply(c));
          var a = e.parent;
          null !== a &&
            (o.getInverse(a.matrixWorld),
            u.matrixWorldInverse.multiply(o),
            l.matrixWorldInverse.multiply(o)),
            u.matrixWorld.getInverse(u.matrixWorldInverse),
            l.matrixWorld.getInverse(l.matrixWorldInverse),
            u.projectionMatrix.fromArray(i.leftProjectionMatrix),
            l.projectionMatrix.fromArray(i.rightProjectionMatrix),
            p.projectionMatrix.copy(u.projectionMatrix);
          var h = r.getLayers();
          if (h.length) {
            var d = h[0];
            null !== d.leftBounds &&
              4 === d.leftBounds.length &&
              u.bounds.fromArray(d.leftBounds),
              null !== d.rightBounds &&
                4 === d.rightBounds.length &&
                l.bounds.fromArray(d.rightBounds);
          }
          return p;
        }),
        (this.getStandingMatrix = function () {
          return s;
        }),
        (this.submitFrame = function () {
          r && r.isPresenting && r.submitFrame();
        }),
        (this.dispose = function () {
          window.removeEventListener("vrdisplaypresentchange", t);
        });
    }
    function xt(e) {
      var t = {};
      return {
        get: function (n) {
          if (void 0 !== t[n]) return t[n];
          var r;
          switch (n) {
            case "WEBGL_depth_texture":
              r =
                e.getExtension("WEBGL_depth_texture") ||
                e.getExtension("MOZ_WEBGL_depth_texture") ||
                e.getExtension("WEBKIT_WEBGL_depth_texture");
              break;
            case "EXT_texture_filter_anisotropic":
              r =
                e.getExtension("EXT_texture_filter_anisotropic") ||
                e.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
              break;
            case "WEBGL_compressed_texture_s3tc":
              r =
                e.getExtension("WEBGL_compressed_texture_s3tc") ||
                e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
              break;
            case "WEBGL_compressed_texture_pvrtc":
              r =
                e.getExtension("WEBGL_compressed_texture_pvrtc") ||
                e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
              break;
            case "WEBGL_compressed_texture_etc1":
              r = e.getExtension("WEBGL_compressed_texture_etc1");
              break;
            default:
              r = e.getExtension(n);
          }
          return (
            null === r &&
              console.warn(
                "THREE.WebGLRenderer: " + n + " extension not supported."
              ),
            (t[n] = r),
            r
          );
        },
      };
    }
    function Et() {
      function e() {
        u.value !== r && ((u.value = r), (u.needsUpdate = i > 0)),
          (n.numPlanes = i),
          (n.numIntersection = 0);
      }
      function t(e, t, r, i) {
        var o = null !== e ? e.length : 0,
          a = null;
        if (0 !== o) {
          if (((a = u.value), !0 !== i || null === a)) {
            var l = r + 4 * o,
              h = t.matrixWorldInverse;
            c.getNormalMatrix(h),
              (null === a || a.length < l) && (a = new Float32Array(l));
            for (var p = 0, d = r; p !== o; ++p, d += 4)
              s.copy(e[p]).applyMatrix4(h, c),
                s.normal.toArray(a, d),
                (a[d + 3] = s.constant);
          }
          (u.value = a), (u.needsUpdate = !0);
        }
        return (n.numPlanes = o), a;
      }
      var n = this,
        r = null,
        i = 0,
        o = !1,
        a = !1,
        s = new ae(),
        c = new oe(),
        u = { value: null, needsUpdate: !1 };
      (this.uniform = u),
        (this.numPlanes = 0),
        (this.numIntersection = 0),
        (this.init = function (e, n, a) {
          var s = 0 !== e.length || n || 0 !== i || o;
          return (o = n), (r = t(e, a, 0)), (i = e.length), s;
        }),
        (this.beginShadows = function () {
          (a = !0), t(null);
        }),
        (this.endShadows = function () {
          (a = !1), e();
        }),
        (this.setState = function (n, s, c, l, h, p) {
          if (!o || null === n || 0 === n.length || (a && !c))
            a ? t(null) : e();
          else {
            var d = a ? 0 : i,
              f = 4 * d,
              m = h.clippingState || null;
            (u.value = m), (m = t(n, l, f, p));
            for (var v = 0; v !== f; ++v) m[v] = r[v];
            (h.clippingState = m),
              (this.numIntersection = s ? this.numPlanes : 0),
              (this.numPlanes += d);
          }
        });
    }
    function wt(e, t) {
      function n(n) {
        var r;
        if (n === Sa) return e.REPEAT;
        if (n === Na) return e.CLAMP_TO_EDGE;
        if (n === Ca) return e.MIRRORED_REPEAT;
        if (n === Aa) return e.NEAREST;
        if (n === Ra) return e.NEAREST_MIPMAP_NEAREST;
        if (n === Pa) return e.NEAREST_MIPMAP_LINEAR;
        if (n === Oa) return e.LINEAR;
        if (n === Da) return e.LINEAR_MIPMAP_NEAREST;
        if (n === La) return e.LINEAR_MIPMAP_LINEAR;
        if (n === Ia) return e.UNSIGNED_BYTE;
        if (n === ja) return e.UNSIGNED_SHORT_4_4_4_4;
        if (n === Ga) return e.UNSIGNED_SHORT_5_5_5_1;
        if (n === Wa) return e.UNSIGNED_SHORT_5_6_5;
        if (n === Ua) return e.BYTE;
        if (n === ka) return e.SHORT;
        if (n === Fa) return e.UNSIGNED_SHORT;
        if (n === Va) return e.INT;
        if (n === Ba) return e.UNSIGNED_INT;
        if (n === za) return e.FLOAT;
        if (n === Ha && null !== (r = t.get("OES_texture_half_float")))
          return r.HALF_FLOAT_OES;
        if (n === Xa) return e.ALPHA;
        if (n === Ya) return e.RGB;
        if (n === Za) return e.RGBA;
        if (n === Ka) return e.LUMINANCE;
        if (n === Ja) return e.LUMINANCE_ALPHA;
        if (n === $a) return e.DEPTH_COMPONENT;
        if (n === es) return e.DEPTH_STENCIL;
        if (n === Bo) return e.FUNC_ADD;
        if (n === zo) return e.FUNC_SUBTRACT;
        if (n === Ho) return e.FUNC_REVERSE_SUBTRACT;
        if (n === Wo) return e.ZERO;
        if (n === qo) return e.ONE;
        if (n === Xo) return e.SRC_COLOR;
        if (n === Yo) return e.ONE_MINUS_SRC_COLOR;
        if (n === Zo) return e.SRC_ALPHA;
        if (n === Ko) return e.ONE_MINUS_SRC_ALPHA;
        if (n === Jo) return e.DST_ALPHA;
        if (n === Qo) return e.ONE_MINUS_DST_ALPHA;
        if (n === $o) return e.DST_COLOR;
        if (n === ea) return e.ONE_MINUS_DST_COLOR;
        if (n === ta) return e.SRC_ALPHA_SATURATE;
        if (
          (n === ts || n === ns || n === rs || n === is) &&
          null !== (r = t.get("WEBGL_compressed_texture_s3tc"))
        ) {
          if (n === ts) return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
          if (n === ns) return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
          if (n === rs) return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
          if (n === is) return r.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        }
        if (
          (n === os || n === as || n === ss || n === cs) &&
          null !== (r = t.get("WEBGL_compressed_texture_pvrtc"))
        ) {
          if (n === os) return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
          if (n === as) return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
          if (n === ss) return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
          if (n === cs) return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        }
        if (n === us && null !== (r = t.get("WEBGL_compressed_texture_etc1")))
          return r.COMPRESSED_RGB_ETC1_WEBGL;
        if (
          (n === jo || n === Go) &&
          null !== (r = t.get("EXT_blend_minmax"))
        ) {
          if (n === jo) return r.MIN_EXT;
          if (n === Go) return r.MAX_EXT;
        }
        return n === qa && null !== (r = t.get("WEBGL_depth_texture"))
          ? r.UNSIGNED_INT_24_8_WEBGL
          : 0;
      }
      return { convert: n };
    }
    function Mt(e) {
      function t() {
        return null === ee ? me : 1;
      }
      function n() {
        (Ae = new xt(Ne)),
          Ae.get("WEBGL_depth_texture"),
          Ae.get("OES_texture_float"),
          Ae.get("OES_texture_float_linear"),
          Ae.get("OES_texture_half_float"),
          Ae.get("OES_texture_half_float_linear"),
          Ae.get("OES_standard_derivatives"),
          Ae.get("ANGLE_instanced_arrays"),
          Ae.get("OES_element_index_uint") && (Pe.MaxIndex = 4294967296),
          (tt = new wt(Ne, Ae)),
          (Re = new yt(Ne, Ae, e)),
          (Oe = new gt(Ne, Ae, tt)),
          Oe.scissor(le.copy(ge).multiplyScalar(me)),
          Oe.viewport(ae.copy(ve).multiplyScalar(me)),
          (De = new vt()),
          (Le = new mt(Ne, Ae, Oe, De, Re, tt, Te)),
          (Ie = new ue(Ne)),
          (Ue = new Ke(Ne, Ie, Te)),
          (ke = new $e(Ue, Se)),
          (je = new Xe(Ne)),
          (Ve = new ft(J, Ae, Re)),
          (Fe = new Qe()),
          (Be = new We()),
          (He = new ze(J, Oe, Ue, H)),
          (Ge = new Ze(Ne, Ae, Se)),
          (qe = new Ye(Ne, Ae, Se)),
          (Je = new K(J, Ne, Oe, Le, Re)),
          (et = new Q(J, Ne, Oe, Le, Re)),
          (J.info.programs = Ve.programs),
          (J.context = Ne),
          (J.capabilities = Re),
          (J.extensions = Ae),
          (J.properties = De),
          (J.renderLists = Be),
          (J.state = Oe);
      }
      function r(e) {
        e.preventDefault(),
          console.log("THREE.WebGLRenderer: Context Lost."),
          ($ = !0);
      }
      function i(e) {
        console.log("THREE.WebGLRenderer: Context Restored."), ($ = !1), n();
      }
      function o(e) {
        var t = e.target;
        t.removeEventListener("dispose", o), s(t);
      }
      function s(e) {
        c(e), De.remove(e);
      }
      function c(e) {
        var t = De.get(e).program;
        (e.program = void 0), void 0 !== t && Ve.releaseProgram(t);
      }
      function u(e, t, n) {
        e.render(function (e) {
          J.renderBufferImmediate(e, t, n);
        });
      }
      function d(e, t, n, r) {
        if (
          n &&
          n.isInstancedBufferGeometry &&
          null === Ae.get("ANGLE_instanced_arrays")
        )
          return void console.error(
            "THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
          );
        void 0 === r && (r = 0), Oe.initAttributes();
        var i = n.attributes,
          o = t.getAttributes(),
          a = e.defaultAttributeValues;
        for (var s in o) {
          var c = o[s];
          if (c >= 0) {
            var u = i[s];
            if (void 0 !== u) {
              var l = u.normalized,
                h = u.itemSize,
                p = Ie.get(u);
              if (void 0 === p) continue;
              var d = p.buffer,
                f = p.type,
                m = p.bytesPerElement;
              if (u.isInterleavedBufferAttribute) {
                var v = u.data,
                  g = v.stride,
                  y = u.offset;
                v && v.isInstancedInterleavedBuffer
                  ? (Oe.enableAttributeAndDivisor(c, v.meshPerAttribute),
                    void 0 === n.maxInstancedCount &&
                      (n.maxInstancedCount = v.meshPerAttribute * v.count))
                  : Oe.enableAttribute(c),
                  Ne.bindBuffer(Ne.ARRAY_BUFFER, d),
                  Ne.vertexAttribPointer(c, h, f, l, g * m, (r * g + y) * m);
              } else
                u.isInstancedBufferAttribute
                  ? (Oe.enableAttributeAndDivisor(c, u.meshPerAttribute),
                    void 0 === n.maxInstancedCount &&
                      (n.maxInstancedCount = u.meshPerAttribute * u.count))
                  : Oe.enableAttribute(c),
                  Ne.bindBuffer(Ne.ARRAY_BUFFER, d),
                  Ne.vertexAttribPointer(c, h, f, l, 0, r * h * m);
            } else if (void 0 !== a) {
              var _ = a[s];
              if (void 0 !== _)
                switch (_.length) {
                  case 2:
                    Ne.vertexAttrib2fv(c, _);
                    break;
                  case 3:
                    Ne.vertexAttrib3fv(c, _);
                    break;
                  case 4:
                    Ne.vertexAttrib4fv(c, _);
                    break;
                  default:
                    Ne.vertexAttrib1fv(c, _);
                }
            }
          }
        }
        Oe.disableUnusedAttributes();
      }
      function f() {
        it || ((nt.getDevice() || window).requestAnimationFrame(m), (it = !0));
      }
      function m(e) {
        null !== ot && ot(e),
          (nt.getDevice() || window).requestAnimationFrame(m);
      }
      function v(e, t, n) {
        if (e.visible) {
          if (e.layers.test(t.layers))
            if (e.isLight) G.push(e), e.castShadow && W.push(e);
            else if (e.isSprite)
              (e.frustumCulled && !_e.intersectsSprite(e)) || Y.push(e);
            else if (e.isLensFlare) Z.push(e);
            else if (e.isImmediateRenderObject)
              n && Me.setFromMatrixPosition(e.matrixWorld).applyMatrix4(we),
                q.push(e, null, e.material, Me.z, null);
            else if (
              (e.isMesh || e.isLine || e.isPoints) &&
              (e.isSkinnedMesh && e.skeleton.update(),
              !e.frustumCulled || _e.intersectsObject(e))
            ) {
              n && Me.setFromMatrixPosition(e.matrixWorld).applyMatrix4(we);
              var r = ke.update(e),
                i = e.material;
              if (Array.isArray(i))
                for (var o = r.groups, a = 0, s = o.length; a < s; a++) {
                  var c = o[a],
                    u = i[c.materialIndex];
                  u && u.visible && q.push(e, r, u, Me.z, c);
                }
              else i.visible && q.push(e, r, i, Me.z, null);
            }
          for (var l = e.children, a = 0, s = l.length; a < s; a++)
            v(l[a], t, n);
        }
      }
      function g(e, t, n, r) {
        for (var i = 0, o = e.length; i < o; i++) {
          var a = e[i],
            s = a.object,
            c = a.geometry,
            u = void 0 === r ? a.material : r,
            l = a.group;
          if (n.isArrayCamera) {
            oe = n;
            for (var h = n.cameras, p = 0, d = h.length; p < d; p++) {
              var f = h[p];
              if (s.layers.test(f.layers)) {
                var m = f.bounds,
                  v = m.x * de,
                  g = m.y * fe,
                  _ = m.z * de,
                  b = m.w * fe;
                Oe.viewport(ae.set(v, g, _, b).multiplyScalar(me)),
                  y(s, t, f, c, u, l);
              }
            }
          } else (oe = null), y(s, t, n, c, u, l);
        }
      }
      function y(e, t, n, r, i, o) {
        if (
          (e.onBeforeRender(J, t, n, r, i, o),
          e.modelViewMatrix.multiplyMatrices(
            n.matrixWorldInverse,
            e.matrixWorld
          ),
          e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
          e.isImmediateRenderObject)
        ) {
          Oe.setMaterial(i);
          var a = b(n, t.fog, i, e);
          (re = ""), u(e, a, i);
        } else J.renderBufferDirect(n, t.fog, r, i, e, o);
        e.onAfterRender(J, t, n, r, i, o);
      }
      function _(e, t, n) {
        var r = De.get(e),
          i = Ve.getParameters(
            e,
            Fe.state,
            W,
            t,
            be.numPlanes,
            be.numIntersection,
            n
          ),
          a = Ve.getProgramCode(e, i),
          s = r.program,
          u = !0;
        if (void 0 === s) e.addEventListener("dispose", o);
        else if (s.code !== a) c(e);
        else {
          if (void 0 !== i.shaderID) return;
          u = !1;
        }
        if (u) {
          if (i.shaderID) {
            var l = Ws[i.shaderID];
            r.shader = {
              name: e.type,
              uniforms: js.clone(l.uniforms),
              vertexShader: l.vertexShader,
              fragmentShader: l.fragmentShader,
            };
          } else
            r.shader = {
              name: e.type,
              uniforms: e.uniforms,
              vertexShader: e.vertexShader,
              fragmentShader: e.fragmentShader,
            };
          e.onBeforeCompile(r.shader),
            (s = Ve.acquireProgram(e, r.shader, i, a)),
            (r.program = s),
            (e.program = s);
        }
        var h = s.getAttributes();
        if (e.morphTargets) {
          e.numSupportedMorphTargets = 0;
          for (var p = 0; p < J.maxMorphTargets; p++)
            h["morphTarget" + p] >= 0 && e.numSupportedMorphTargets++;
        }
        if (e.morphNormals) {
          e.numSupportedMorphNormals = 0;
          for (var p = 0; p < J.maxMorphNormals; p++)
            h["morphNormal" + p] >= 0 && e.numSupportedMorphNormals++;
        }
        var d = r.shader.uniforms;
        ((e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping) ||
          ((r.numClippingPlanes = be.numPlanes),
          (r.numIntersection = be.numIntersection),
          (d.clippingPlanes = be.uniform)),
          (r.fog = t),
          (r.lightsHash = Fe.state.hash),
          e.lights &&
            ((d.ambientLightColor.value = Fe.state.ambient),
            (d.directionalLights.value = Fe.state.directional),
            (d.spotLights.value = Fe.state.spot),
            (d.rectAreaLights.value = Fe.state.rectArea),
            (d.pointLights.value = Fe.state.point),
            (d.hemisphereLights.value = Fe.state.hemi),
            (d.directionalShadowMap.value = Fe.state.directionalShadowMap),
            (d.directionalShadowMatrix.value =
              Fe.state.directionalShadowMatrix),
            (d.spotShadowMap.value = Fe.state.spotShadowMap),
            (d.spotShadowMatrix.value = Fe.state.spotShadowMatrix),
            (d.pointShadowMap.value = Fe.state.pointShadowMap),
            (d.pointShadowMatrix.value = Fe.state.pointShadowMatrix));
        var f = r.program.getUniforms(),
          m = X.seqWithValue(f.seq, d);
        r.uniformsList = m;
      }
      function b(e, t, n, r) {
        pe = 0;
        var i = De.get(n);
        if (xe && (Ee || e !== ie)) {
          var o = e === ie && n.id === ne;
          be.setState(
            n.clippingPlanes,
            n.clipIntersection,
            n.clipShadows,
            e,
            i,
            o
          );
        }
        !1 === n.needsUpdate &&
          (void 0 === i.program
            ? (n.needsUpdate = !0)
            : n.fog && i.fog !== t
            ? (n.needsUpdate = !0)
            : n.lights && i.lightsHash !== Fe.state.hash
            ? (n.needsUpdate = !0)
            : void 0 === i.numClippingPlanes ||
              (i.numClippingPlanes === be.numPlanes &&
                i.numIntersection === be.numIntersection) ||
              (n.needsUpdate = !0)),
          n.needsUpdate && (_(n, t, r), (n.needsUpdate = !1));
        var a = !1,
          s = !1,
          c = !1,
          u = i.program,
          l = u.getUniforms(),
          h = i.shader.uniforms;
        if (
          (Oe.useProgram(u.program) && ((a = !0), (s = !0), (c = !0)),
          n.id !== ne && ((ne = n.id), (s = !0)),
          a || e !== ie)
        ) {
          if (
            (l.setValue(Ne, "projectionMatrix", e.projectionMatrix),
            Re.logarithmicDepthBuffer &&
              l.setValue(
                Ne,
                "logDepthBufFC",
                2 / (Math.log(e.far + 1) / Math.LN2)
              ),
            ie !== (oe || e) && ((ie = oe || e), (s = !0), (c = !0)),
            n.isShaderMaterial ||
              n.isMeshPhongMaterial ||
              n.isMeshStandardMaterial ||
              n.envMap)
          ) {
            var d = l.map.cameraPosition;
            void 0 !== d &&
              d.setValue(Ne, Me.setFromMatrixPosition(e.matrixWorld));
          }
          (n.isMeshPhongMaterial ||
            n.isMeshLambertMaterial ||
            n.isMeshBasicMaterial ||
            n.isMeshStandardMaterial ||
            n.isShaderMaterial ||
            n.skinning) &&
            l.setValue(Ne, "viewMatrix", e.matrixWorldInverse);
        }
        if (n.skinning) {
          l.setOptional(Ne, r, "bindMatrix"),
            l.setOptional(Ne, r, "bindMatrixInverse");
          var f = r.skeleton;
          if (f) {
            var m = f.bones;
            if (Re.floatVertexTextures) {
              if (void 0 === f.boneTexture) {
                var v = Math.sqrt(4 * m.length);
                (v = Os.nextPowerOfTwo(Math.ceil(v))), (v = Math.max(v, 4));
                var g = new Float32Array(v * v * 4);
                g.set(f.boneMatrices);
                var y = new p(g, v, v, Za, za);
                (f.boneMatrices = g),
                  (f.boneTexture = y),
                  (f.boneTextureSize = v);
              }
              l.setValue(Ne, "boneTexture", f.boneTexture),
                l.setValue(Ne, "boneTextureSize", f.boneTextureSize);
            } else l.setOptional(Ne, f, "boneMatrices");
          }
        }
        return (
          s &&
            (l.setValue(Ne, "toneMappingExposure", J.toneMappingExposure),
            l.setValue(Ne, "toneMappingWhitePoint", J.toneMappingWhitePoint),
            n.lights && L(h, c),
            t && n.fog && T(h, t),
            n.isMeshBasicMaterial
              ? x(h, n)
              : n.isMeshLambertMaterial
              ? (x(h, n), S(h, n))
              : n.isMeshPhongMaterial
              ? (x(h, n), n.isMeshToonMaterial ? C(h, n) : N(h, n))
              : n.isMeshStandardMaterial
              ? (x(h, n), n.isMeshPhysicalMaterial ? R(h, n) : A(h, n))
              : n.isMeshDepthMaterial
              ? (x(h, n), P(h, n))
              : n.isMeshDistanceMaterial
              ? (x(h, n), O(h, n))
              : n.isMeshNormalMaterial
              ? (x(h, n), D(h, n))
              : n.isLineBasicMaterial
              ? (E(h, n), n.isLineDashedMaterial && w(h, n))
              : n.isPointsMaterial
              ? M(h, n)
              : n.isShadowMaterial &&
                ((h.color.value = n.color), (h.opacity.value = n.opacity)),
            void 0 !== h.ltcMat && (h.ltcMat.value = Hs.LTC_MAT_TEXTURE),
            void 0 !== h.ltcMag && (h.ltcMag.value = Hs.LTC_MAG_TEXTURE),
            X.upload(Ne, i.uniformsList, h, J)),
          l.setValue(Ne, "modelViewMatrix", r.modelViewMatrix),
          l.setValue(Ne, "normalMatrix", r.normalMatrix),
          l.setValue(Ne, "modelMatrix", r.matrixWorld),
          u
        );
      }
      function x(e, t) {
        (e.opacity.value = t.opacity),
          t.color && (e.diffuse.value = t.color),
          t.emissive &&
            e.emissive.value
              .copy(t.emissive)
              .multiplyScalar(t.emissiveIntensity),
          t.map && (e.map.value = t.map),
          t.alphaMap && (e.alphaMap.value = t.alphaMap),
          t.specularMap && (e.specularMap.value = t.specularMap),
          t.envMap &&
            ((e.envMap.value = t.envMap),
            (e.flipEnvMap.value = t.envMap && t.envMap.isCubeTexture ? -1 : 1),
            (e.reflectivity.value = t.reflectivity),
            (e.refractionRatio.value = t.refractionRatio)),
          t.lightMap &&
            ((e.lightMap.value = t.lightMap),
            (e.lightMapIntensity.value = t.lightMapIntensity)),
          t.aoMap &&
            ((e.aoMap.value = t.aoMap),
            (e.aoMapIntensity.value = t.aoMapIntensity));
        var n;
        if (
          (t.map
            ? (n = t.map)
            : t.specularMap
            ? (n = t.specularMap)
            : t.displacementMap
            ? (n = t.displacementMap)
            : t.normalMap
            ? (n = t.normalMap)
            : t.bumpMap
            ? (n = t.bumpMap)
            : t.roughnessMap
            ? (n = t.roughnessMap)
            : t.metalnessMap
            ? (n = t.metalnessMap)
            : t.alphaMap
            ? (n = t.alphaMap)
            : t.emissiveMap && (n = t.emissiveMap),
          void 0 !== n)
        ) {
          n.isWebGLRenderTarget && (n = n.texture);
          var r = n.offset,
            i = n.repeat;
          e.offsetRepeat.value.set(r.x, r.y, i.x, i.y);
        }
      }
      function E(e, t) {
        (e.diffuse.value = t.color), (e.opacity.value = t.opacity);
      }
      function w(e, t) {
        (e.dashSize.value = t.dashSize),
          (e.totalSize.value = t.dashSize + t.gapSize),
          (e.scale.value = t.scale);
      }
      function M(e, t) {
        if (
          ((e.diffuse.value = t.color),
          (e.opacity.value = t.opacity),
          (e.size.value = t.size * me),
          (e.scale.value = 0.5 * fe),
          (e.map.value = t.map),
          null !== t.map)
        ) {
          var n = t.map.offset,
            r = t.map.repeat;
          e.offsetRepeat.value.set(n.x, n.y, r.x, r.y);
        }
      }
      function T(e, t) {
        (e.fogColor.value = t.color),
          t.isFog
            ? ((e.fogNear.value = t.near), (e.fogFar.value = t.far))
            : t.isFogExp2 && (e.fogDensity.value = t.density);
      }
      function S(e, t) {
        t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
      }
      function N(e, t) {
        (e.specular.value = t.specular),
          (e.shininess.value = Math.max(t.shininess, 1e-4)),
          t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
          t.bumpMap &&
            ((e.bumpMap.value = t.bumpMap), (e.bumpScale.value = t.bumpScale)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale)),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias));
      }
      function C(e, t) {
        N(e, t), t.gradientMap && (e.gradientMap.value = t.gradientMap);
      }
      function A(e, t) {
        (e.roughness.value = t.roughness),
          (e.metalness.value = t.metalness),
          t.roughnessMap && (e.roughnessMap.value = t.roughnessMap),
          t.metalnessMap && (e.metalnessMap.value = t.metalnessMap),
          t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
          t.bumpMap &&
            ((e.bumpMap.value = t.bumpMap), (e.bumpScale.value = t.bumpScale)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale)),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias)),
          t.envMap && (e.envMapIntensity.value = t.envMapIntensity);
      }
      function R(e, t) {
        (e.clearCoat.value = t.clearCoat),
          (e.clearCoatRoughness.value = t.clearCoatRoughness),
          A(e, t);
      }
      function P(e, t) {
        t.displacementMap &&
          ((e.displacementMap.value = t.displacementMap),
          (e.displacementScale.value = t.displacementScale),
          (e.displacementBias.value = t.displacementBias));
      }
      function O(e, t) {
        t.displacementMap &&
          ((e.displacementMap.value = t.displacementMap),
          (e.displacementScale.value = t.displacementScale),
          (e.displacementBias.value = t.displacementBias)),
          e.referencePosition.value.copy(t.referencePosition),
          (e.nearDistance.value = t.nearDistance),
          (e.farDistance.value = t.farDistance);
      }
      function D(e, t) {
        t.bumpMap &&
          ((e.bumpMap.value = t.bumpMap), (e.bumpScale.value = t.bumpScale)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale)),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias));
      }
      function L(e, t) {
        (e.ambientLightColor.needsUpdate = t),
          (e.directionalLights.needsUpdate = t),
          (e.pointLights.needsUpdate = t),
          (e.spotLights.needsUpdate = t),
          (e.rectAreaLights.needsUpdate = t),
          (e.hemisphereLights.needsUpdate = t);
      }
      function I() {
        var e = pe;
        return (
          e >= Re.maxTextures &&
            console.warn(
              "THREE.WebGLRenderer: Trying to use " +
                e +
                " texture units while this GPU supports only " +
                Re.maxTextures
            ),
          (pe += 1),
          e
        );
      }
      console.log("THREE.WebGLRenderer", mo), (e = e || {});
      var U =
          void 0 !== e.canvas
            ? e.canvas
            : document.createElementNS(
                "http://www.w3.org/1999/xhtml",
                "canvas"
              ),
        k = void 0 !== e.context ? e.context : null,
        F = void 0 !== e.alpha && e.alpha,
        V = void 0 === e.depth || e.depth,
        B = void 0 === e.stencil || e.stencil,
        z = void 0 !== e.antialias && e.antialias,
        H = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
        j = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
        G = [],
        W = [],
        q = null,
        Y = [],
        Z = [];
      (this.domElement = U),
        (this.context = null),
        (this.autoClear = !0),
        (this.autoClearColor = !0),
        (this.autoClearDepth = !0),
        (this.autoClearStencil = !0),
        (this.sortObjects = !0),
        (this.clippingPlanes = []),
        (this.localClippingEnabled = !1),
        (this.gammaFactor = 2),
        (this.gammaInput = !1),
        (this.gammaOutput = !1),
        (this.physicallyCorrectLights = !1),
        (this.toneMapping = fa),
        (this.toneMappingExposure = 1),
        (this.toneMappingWhitePoint = 1),
        (this.maxMorphTargets = 8),
        (this.maxMorphNormals = 4);
      var J = this,
        $ = !1,
        ee = null,
        te = null,
        ne = -1,
        re = "",
        ie = null,
        oe = null,
        ae = new a(),
        le = new a(),
        he = null,
        pe = 0,
        de = U.width,
        fe = U.height,
        me = 1,
        ve = new a(0, 0, de, fe),
        ge = new a(0, 0, de, fe),
        ye = !1,
        _e = new se(),
        be = new Et(),
        xe = !1,
        Ee = !1,
        we = new h(),
        Me = new l(),
        Te = { geometries: 0, textures: 0 },
        Se = { frame: 0, calls: 0, vertices: 0, faces: 0, points: 0 };
      this.info = { render: Se, memory: Te, programs: null };
      var Ne;
      try {
        var Ce = {
          alpha: F,
          depth: V,
          stencil: B,
          antialias: z,
          premultipliedAlpha: H,
          preserveDrawingBuffer: j,
        };
        if (
          null ===
          (Ne =
            k ||
            U.getContext("webgl", Ce) ||
            U.getContext("experimental-webgl", Ce))
        )
          throw null !== U.getContext("webgl")
            ? "Error creating WebGL context with your selected attributes."
            : "Error creating WebGL context.";
        void 0 === Ne.getShaderPrecisionFormat &&
          (Ne.getShaderPrecisionFormat = function () {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          }),
          U.addEventListener("webglcontextlost", r, !1),
          U.addEventListener("webglcontextrestored", i, !1);
      } catch (e) {
        console.error("THREE.WebGLRenderer: " + e);
      }
      var Ae,
        Re,
        Oe,
        De,
        Le,
        Ie,
        Ue,
        ke,
        Fe,
        Ve,
        Be,
        He,
        je,
        Ge,
        qe,
        Je,
        et,
        tt;
      n();
      var nt = new bt(J);
      this.vr = nt;
      var rt = new ce(J, ke, Re.maxTextureSize);
      (this.shadowMap = rt),
        (this.getContext = function () {
          return Ne;
        }),
        (this.getContextAttributes = function () {
          return Ne.getContextAttributes();
        }),
        (this.forceContextLoss = function () {
          var e = Ae.get("WEBGL_lose_context");
          e && e.loseContext();
        }),
        (this.forceContextRestore = function () {
          var e = Ae.get("WEBGL_lose_context");
          e && e.restoreContext();
        }),
        (this.getPixelRatio = function () {
          return me;
        }),
        (this.setPixelRatio = function (e) {
          void 0 !== e && ((me = e), this.setSize(de, fe, !1));
        }),
        (this.getSize = function () {
          return { width: de, height: fe };
        }),
        (this.setSize = function (e, t, n) {
          var r = nt.getDevice();
          if (r && r.isPresenting)
            return void console.warn(
              "THREE.WebGLRenderer: Can't change size while VR device is presenting."
            );
          (de = e),
            (fe = t),
            (U.width = e * me),
            (U.height = t * me),
            !1 !== n &&
              ((U.style.width = e + "px"), (U.style.height = t + "px")),
            this.setViewport(0, 0, e, t);
        }),
        (this.getDrawingBufferSize = function () {
          return { width: de * me, height: fe * me };
        }),
        (this.setDrawingBufferSize = function (e, t, n) {
          (de = e),
            (fe = t),
            (me = n),
            (U.width = e * n),
            (U.height = t * n),
            this.setViewport(0, 0, e, t);
        }),
        (this.setViewport = function (e, t, n, r) {
          ve.set(e, fe - t - r, n, r),
            Oe.viewport(ae.copy(ve).multiplyScalar(me));
        }),
        (this.setScissor = function (e, t, n, r) {
          ge.set(e, fe - t - r, n, r),
            Oe.scissor(le.copy(ge).multiplyScalar(me));
        }),
        (this.setScissorTest = function (e) {
          Oe.setScissorTest((ye = e));
        }),
        (this.getClearColor = He.getClearColor),
        (this.setClearColor = He.setClearColor),
        (this.getClearAlpha = He.getClearAlpha),
        (this.setClearAlpha = He.setClearAlpha),
        (this.clear = function (e, t, n) {
          var r = 0;
          (void 0 === e || e) && (r |= Ne.COLOR_BUFFER_BIT),
            (void 0 === t || t) && (r |= Ne.DEPTH_BUFFER_BIT),
            (void 0 === n || n) && (r |= Ne.STENCIL_BUFFER_BIT),
            Ne.clear(r);
        }),
        (this.clearColor = function () {
          this.clear(!0, !1, !1);
        }),
        (this.clearDepth = function () {
          this.clear(!1, !0, !1);
        }),
        (this.clearStencil = function () {
          this.clear(!1, !1, !0);
        }),
        (this.clearTarget = function (e, t, n, r) {
          this.setRenderTarget(e), this.clear(t, n, r);
        }),
        (this.dispose = function () {
          U.removeEventListener("webglcontextlost", r, !1),
            U.removeEventListener("webglcontextrestored", i, !1),
            Be.dispose(),
            nt.dispose();
        }),
        (this.renderBufferImmediate = function (e, t, n) {
          Oe.initAttributes();
          var r = De.get(e);
          e.hasPositions && !r.position && (r.position = Ne.createBuffer()),
            e.hasNormals && !r.normal && (r.normal = Ne.createBuffer()),
            e.hasUvs && !r.uv && (r.uv = Ne.createBuffer()),
            e.hasColors && !r.color && (r.color = Ne.createBuffer());
          var i = t.getAttributes();
          if (
            (e.hasPositions &&
              (Ne.bindBuffer(Ne.ARRAY_BUFFER, r.position),
              Ne.bufferData(Ne.ARRAY_BUFFER, e.positionArray, Ne.DYNAMIC_DRAW),
              Oe.enableAttribute(i.position),
              Ne.vertexAttribPointer(i.position, 3, Ne.FLOAT, !1, 0, 0)),
            e.hasNormals)
          ) {
            if (
              (Ne.bindBuffer(Ne.ARRAY_BUFFER, r.normal),
              !n.isMeshPhongMaterial &&
                !n.isMeshStandardMaterial &&
                !n.isMeshNormalMaterial &&
                !0 === n.flatShading)
            )
              for (var o = 0, a = 3 * e.count; o < a; o += 9) {
                var s = e.normalArray,
                  c = (s[o + 0] + s[o + 3] + s[o + 6]) / 3,
                  u = (s[o + 1] + s[o + 4] + s[o + 7]) / 3,
                  l = (s[o + 2] + s[o + 5] + s[o + 8]) / 3;
                (s[o + 0] = c),
                  (s[o + 1] = u),
                  (s[o + 2] = l),
                  (s[o + 3] = c),
                  (s[o + 4] = u),
                  (s[o + 5] = l),
                  (s[o + 6] = c),
                  (s[o + 7] = u),
                  (s[o + 8] = l);
              }
            Ne.bufferData(Ne.ARRAY_BUFFER, e.normalArray, Ne.DYNAMIC_DRAW),
              Oe.enableAttribute(i.normal),
              Ne.vertexAttribPointer(i.normal, 3, Ne.FLOAT, !1, 0, 0);
          }
          e.hasUvs &&
            n.map &&
            (Ne.bindBuffer(Ne.ARRAY_BUFFER, r.uv),
            Ne.bufferData(Ne.ARRAY_BUFFER, e.uvArray, Ne.DYNAMIC_DRAW),
            Oe.enableAttribute(i.uv),
            Ne.vertexAttribPointer(i.uv, 2, Ne.FLOAT, !1, 0, 0)),
            e.hasColors &&
              n.vertexColors !== Po &&
              (Ne.bindBuffer(Ne.ARRAY_BUFFER, r.color),
              Ne.bufferData(Ne.ARRAY_BUFFER, e.colorArray, Ne.DYNAMIC_DRAW),
              Oe.enableAttribute(i.color),
              Ne.vertexAttribPointer(i.color, 3, Ne.FLOAT, !1, 0, 0)),
            Oe.disableUnusedAttributes(),
            Ne.drawArrays(Ne.TRIANGLES, 0, e.count),
            (e.count = 0);
        }),
        (this.renderBufferDirect = function (e, n, r, i, o, a) {
          Oe.setMaterial(i);
          var s = b(e, n, i, o),
            c = r.id + "_" + s.id + "_" + (!0 === i.wireframe),
            u = !1;
          c !== re && ((re = c), (u = !0)),
            o.morphTargetInfluences && (je.update(o, r, i, s), (u = !0));
          var l = r.index,
            h = r.attributes.position,
            p = 1;
          !0 === i.wireframe && ((l = Ue.getWireframeAttribute(r)), (p = 2));
          var f,
            m = Ge;
          null !== l && ((f = Ie.get(l)), (m = qe), m.setIndex(f)),
            u &&
              (d(i, s, r),
              null !== l && Ne.bindBuffer(Ne.ELEMENT_ARRAY_BUFFER, f.buffer));
          var v = 0;
          null !== l ? (v = l.count) : void 0 !== h && (v = h.count);
          var g = r.drawRange.start * p,
            y = r.drawRange.count * p,
            _ = null !== a ? a.start * p : 0,
            x = null !== a ? a.count * p : 1 / 0,
            E = Math.max(g, _),
            w = Math.min(v, g + y, _ + x) - 1,
            M = Math.max(0, w - E + 1);
          if (0 !== M) {
            if (o.isMesh)
              if (!0 === i.wireframe)
                Oe.setLineWidth(i.wireframeLinewidth * t()),
                  m.setMode(Ne.LINES);
              else
                switch (o.drawMode) {
                  case _s:
                    m.setMode(Ne.TRIANGLES);
                    break;
                  case bs:
                    m.setMode(Ne.TRIANGLE_STRIP);
                    break;
                  case xs:
                    m.setMode(Ne.TRIANGLE_FAN);
                }
            else if (o.isLine) {
              var T = i.linewidth;
              void 0 === T && (T = 1),
                Oe.setLineWidth(T * t()),
                o.isLineSegments
                  ? m.setMode(Ne.LINES)
                  : o.isLineLoop
                  ? m.setMode(Ne.LINE_LOOP)
                  : m.setMode(Ne.LINE_STRIP);
            } else o.isPoints && m.setMode(Ne.POINTS);
            r && r.isInstancedBufferGeometry
              ? r.maxInstancedCount > 0 && m.renderInstances(r, E, M)
              : m.render(E, M);
          }
        }),
        (this.compile = function (e, t) {
          (G.length = 0),
            (W.length = 0),
            e.traverse(function (e) {
              e.isLight && (G.push(e), e.castShadow && W.push(e));
            }),
            Fe.setup(G, W, t),
            e.traverse(function (t) {
              if (t.material)
                if (Array.isArray(t.material))
                  for (var n = 0; n < t.material.length; n++)
                    _(t.material[n], e.fog, t);
                else _(t.material, e.fog, t);
            });
        });
      var it = !1,
        ot = null;
      (this.animate = function (e) {
        (ot = e), f();
      }),
        (this.render = function (e, t, n, r) {
          if (!t || !t.isCamera)
            return void console.error(
              "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
            );
          if (!$) {
            (re = ""),
              (ne = -1),
              (ie = null),
              !0 === e.autoUpdate && e.updateMatrixWorld(),
              null === t.parent && t.updateMatrixWorld(),
              nt.enabled && (t = nt.getCamera(t)),
              we.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
              _e.setFromMatrix(we),
              (G.length = 0),
              (W.length = 0),
              (Y.length = 0),
              (Z.length = 0),
              (Ee = this.localClippingEnabled),
              (xe = be.init(this.clippingPlanes, Ee, t)),
              (q = Be.get(e, t)),
              q.init(),
              v(e, t, J.sortObjects),
              !0 === J.sortObjects && q.sort(),
              xe && be.beginShadows(),
              rt.render(W, e, t),
              Fe.setup(G, W, t),
              xe && be.endShadows(),
              Se.frame++,
              (Se.calls = 0),
              (Se.vertices = 0),
              (Se.faces = 0),
              (Se.points = 0),
              void 0 === n && (n = null),
              this.setRenderTarget(n),
              He.render(q, e, t, r);
            var i = q.opaque,
              o = q.transparent;
            if (e.overrideMaterial) {
              var a = e.overrideMaterial;
              i.length && g(i, e, t, a), o.length && g(o, e, t, a);
            } else i.length && g(i, e, t), o.length && g(o, e, t);
            et.render(Y, e, t),
              Je.render(Z, e, t, ae),
              n && Le.updateRenderTargetMipmap(n),
              Oe.buffers.depth.setTest(!0),
              Oe.buffers.depth.setMask(!0),
              Oe.buffers.color.setMask(!0),
              Oe.setPolygonOffset(!1),
              nt.enabled && nt.submitFrame();
          }
        }),
        (this.setFaceCulling = function (e, t) {
          Oe.setCullFace(e), Oe.setFlipSided(t === xo);
        }),
        (this.allocTextureUnit = I),
        (this.setTexture2D = (function () {
          var e = !1;
          return function (t, n) {
            t &&
              t.isWebGLRenderTarget &&
              (e ||
                (console.warn(
                  "THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."
                ),
                (e = !0)),
              (t = t.texture)),
              Le.setTexture2D(t, n);
          };
        })()),
        (this.setTexture = (function () {
          var e = !1;
          return function (t, n) {
            e ||
              (console.warn(
                "THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."
              ),
              (e = !0)),
              Le.setTexture2D(t, n);
          };
        })()),
        (this.setTextureCube = (function () {
          var e = !1;
          return function (t, n) {
            t &&
              t.isWebGLRenderTargetCube &&
              (e ||
                (console.warn(
                  "THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."
                ),
                (e = !0)),
              (t = t.texture)),
              (t && t.isCubeTexture) ||
              (Array.isArray(t.image) && 6 === t.image.length)
                ? Le.setTextureCube(t, n)
                : Le.setTextureCubeDynamic(t, n);
          };
        })()),
        (this.getRenderTarget = function () {
          return ee;
        }),
        (this.setRenderTarget = function (e) {
          (ee = e),
            e &&
              void 0 === De.get(e).__webglFramebuffer &&
              Le.setupRenderTarget(e);
          var t = null,
            n = !1;
          if (e) {
            var r = De.get(e).__webglFramebuffer;
            e.isWebGLRenderTargetCube
              ? ((t = r[e.activeCubeFace]), (n = !0))
              : (t = r),
              ae.copy(e.viewport),
              le.copy(e.scissor),
              (he = e.scissorTest);
          } else
            ae.copy(ve).multiplyScalar(me),
              le.copy(ge).multiplyScalar(me),
              (he = ye);
          if (
            (te !== t && (Ne.bindFramebuffer(Ne.FRAMEBUFFER, t), (te = t)),
            Oe.viewport(ae),
            Oe.scissor(le),
            Oe.setScissorTest(he),
            n)
          ) {
            var i = De.get(e.texture);
            Ne.framebufferTexture2D(
              Ne.FRAMEBUFFER,
              Ne.COLOR_ATTACHMENT0,
              Ne.TEXTURE_CUBE_MAP_POSITIVE_X + e.activeCubeFace,
              i.__webglTexture,
              e.activeMipMapLevel
            );
          }
        }),
        (this.readRenderTargetPixels = function (e, t, n, r, i, o) {
          if (!e || !e.isWebGLRenderTarget)
            return void console.error(
              "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
            );
          var a = De.get(e).__webglFramebuffer;
          if (a) {
            var s = !1;
            a !== te && (Ne.bindFramebuffer(Ne.FRAMEBUFFER, a), (s = !0));
            try {
              var c = e.texture,
                u = c.format,
                l = c.type;
              if (
                u !== Za &&
                tt.convert(u) !==
                  Ne.getParameter(Ne.IMPLEMENTATION_COLOR_READ_FORMAT)
              )
                return void console.error(
                  "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                );
              if (
                !(
                  l === Ia ||
                  tt.convert(l) ===
                    Ne.getParameter(Ne.IMPLEMENTATION_COLOR_READ_TYPE) ||
                  (l === za &&
                    (Ae.get("OES_texture_float") ||
                      Ae.get("WEBGL_color_buffer_float"))) ||
                  (l === Ha && Ae.get("EXT_color_buffer_half_float"))
                )
              )
                return void console.error(
                  "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                );
              Ne.checkFramebufferStatus(Ne.FRAMEBUFFER) ===
              Ne.FRAMEBUFFER_COMPLETE
                ? t >= 0 &&
                  t <= e.width - r &&
                  n >= 0 &&
                  n <= e.height - i &&
                  Ne.readPixels(t, n, r, i, tt.convert(u), tt.convert(l), o)
                : console.error(
                    "THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."
                  );
            } finally {
              s && Ne.bindFramebuffer(Ne.FRAMEBUFFER, te);
            }
          }
        });
    }
    function Tt(e, t) {
      (this.name = ""),
        (this.color = new Y(e)),
        (this.density = void 0 !== t ? t : 25e-5);
    }
    function St(e, t, n) {
      (this.name = ""),
        (this.color = new Y(e)),
        (this.near = void 0 !== t ? t : 1),
        (this.far = void 0 !== n ? n : 1e3);
    }
    function Nt() {
      pe.call(this),
        (this.type = "Scene"),
        (this.background = null),
        (this.fog = null),
        (this.overrideMaterial = null),
        (this.autoUpdate = !0);
    }
    function Ct(e, t, n, r, i) {
      pe.call(this),
        (this.lensFlares = []),
        (this.positionScreen = new l()),
        (this.customUpdateCallback = void 0),
        void 0 !== e && this.add(e, t, n, r, i);
    }
    function At(e) {
      $.call(this),
        (this.type = "SpriteMaterial"),
        (this.color = new Y(16777215)),
        (this.map = null),
        (this.rotation = 0),
        (this.fog = !1),
        (this.lights = !1),
        this.setValues(e);
    }
    function Rt(e) {
      pe.call(this),
        (this.type = "Sprite"),
        (this.material = void 0 !== e ? e : new At());
    }
    function Pt() {
      pe.call(this),
        (this.type = "LOD"),
        Object.defineProperties(this, {
          levels: { enumerable: !0, value: [] },
        });
    }
    function Ot(e, t) {
      if (
        ((e = e || []),
        (this.bones = e.slice(0)),
        (this.boneMatrices = new Float32Array(16 * this.bones.length)),
        void 0 === t)
      )
        this.calculateInverses();
      else if (this.bones.length === t.length) this.boneInverses = t.slice(0);
      else {
        console.warn("THREE.Skeleton boneInverses is the wrong length."),
          (this.boneInverses = []);
        for (var n = 0, r = this.bones.length; n < r; n++)
          this.boneInverses.push(new h());
      }
    }
    function Dt() {
      pe.call(this), (this.type = "Bone");
    }
    function Lt(e, t) {
      Be.call(this, e, t),
        (this.type = "SkinnedMesh"),
        (this.bindMode = "attached"),
        (this.bindMatrix = new h()),
        (this.bindMatrixInverse = new h());
      var n = this.initBones(),
        r = new Ot(n);
      this.bind(r, this.matrixWorld), this.normalizeSkinWeights();
    }
    function It(e) {
      $.call(this),
        (this.type = "LineBasicMaterial"),
        (this.color = new Y(16777215)),
        (this.linewidth = 1),
        (this.linecap = "round"),
        (this.linejoin = "round"),
        (this.lights = !1),
        this.setValues(e);
    }
    function Ut(e, t, n) {
      if (1 === n)
        return (
          console.warn(
            "THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."
          ),
          new kt(e, t)
        );
      pe.call(this),
        (this.type = "Line"),
        (this.geometry = void 0 !== e ? e : new Pe()),
        (this.material =
          void 0 !== t ? t : new It({ color: 16777215 * Math.random() }));
    }
    function kt(e, t) {
      Ut.call(this, e, t), (this.type = "LineSegments");
    }
    function Ft(e, t) {
      Ut.call(this, e, t), (this.type = "LineLoop");
    }
    function Vt(e) {
      $.call(this),
        (this.type = "PointsMaterial"),
        (this.color = new Y(16777215)),
        (this.map = null),
        (this.size = 1),
        (this.sizeAttenuation = !0),
        (this.lights = !1),
        this.setValues(e);
    }
    function Bt(e, t) {
      pe.call(this),
        (this.type = "Points"),
        (this.geometry = void 0 !== e ? e : new Pe()),
        (this.material =
          void 0 !== t ? t : new Vt({ color: 16777215 * Math.random() }));
    }
    function zt() {
      pe.call(this), (this.type = "Group");
    }
    function Ht(e, t, n, r, i, a, s, c, u) {
      function l() {
        requestAnimationFrame(l),
          e.readyState >= e.HAVE_CURRENT_DATA && (h.needsUpdate = !0);
      }
      o.call(this, e, t, n, r, i, a, s, c, u), (this.generateMipmaps = !1);
      var h = this;
      l();
    }
    function jt(e, t, n, r, i, a, s, c, u, l, h, p) {
      o.call(this, null, a, s, c, u, l, r, i, h, p),
        (this.image = { width: t, height: n }),
        (this.mipmaps = e),
        (this.flipY = !1),
        (this.generateMipmaps = !1);
    }
    function Gt(e, t, n, r, i, a, s, c, u, l) {
      if ((l = void 0 !== l ? l : $a) !== $a && l !== es)
        throw new Error(
          "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
        );
      void 0 === n && l === $a && (n = Fa),
        void 0 === n && l === es && (n = qa),
        o.call(this, null, r, i, a, s, c, l, n, u),
        (this.image = { width: e, height: t }),
        (this.magFilter = void 0 !== s ? s : Aa),
        (this.minFilter = void 0 !== c ? c : Aa),
        (this.flipY = !1),
        (this.generateMipmaps = !1);
    }
    function Wt(e) {
      Pe.call(this), (this.type = "WireframeGeometry");
      var t,
        n,
        r,
        i,
        o,
        a,
        s,
        c,
        u,
        h,
        p = [],
        d = [0, 0],
        f = {},
        m = ["a", "b", "c"];
      if (e && e.isGeometry) {
        var v = e.faces;
        for (t = 0, r = v.length; t < r; t++) {
          var g = v[t];
          for (n = 0; n < 3; n++)
            (s = g[m[n]]),
              (c = g[m[(n + 1) % 3]]),
              (d[0] = Math.min(s, c)),
              (d[1] = Math.max(s, c)),
              (u = d[0] + "," + d[1]),
              void 0 === f[u] && (f[u] = { index1: d[0], index2: d[1] });
        }
        for (u in f)
          (a = f[u]),
            (h = e.vertices[a.index1]),
            p.push(h.x, h.y, h.z),
            (h = e.vertices[a.index2]),
            p.push(h.x, h.y, h.z);
      } else if (e && e.isBufferGeometry) {
        var y, _, b, x, E, w, M, T;
        if (((h = new l()), null !== e.index)) {
          for (
            y = e.attributes.position,
              _ = e.index,
              b = e.groups,
              0 === b.length &&
                (b = [{ start: 0, count: _.count, materialIndex: 0 }]),
              i = 0,
              o = b.length;
            i < o;
            ++i
          )
            for (
              x = b[i], E = x.start, w = x.count, t = E, r = E + w;
              t < r;
              t += 3
            )
              for (n = 0; n < 3; n++)
                (s = _.getX(t + n)),
                  (c = _.getX(t + ((n + 1) % 3))),
                  (d[0] = Math.min(s, c)),
                  (d[1] = Math.max(s, c)),
                  (u = d[0] + "," + d[1]),
                  void 0 === f[u] && (f[u] = { index1: d[0], index2: d[1] });
          for (u in f)
            (a = f[u]),
              h.fromBufferAttribute(y, a.index1),
              p.push(h.x, h.y, h.z),
              h.fromBufferAttribute(y, a.index2),
              p.push(h.x, h.y, h.z);
        } else
          for (y = e.attributes.position, t = 0, r = y.count / 3; t < r; t++)
            for (n = 0; n < 3; n++)
              (M = 3 * t + n),
                h.fromBufferAttribute(y, M),
                p.push(h.x, h.y, h.z),
                (T = 3 * t + ((n + 1) % 3)),
                h.fromBufferAttribute(y, T),
                p.push(h.x, h.y, h.z);
      }
      this.addAttribute("position", new Ne(p, 3));
    }
    function qt(e, t, n) {
      ye.call(this),
        (this.type = "ParametricGeometry"),
        (this.parameters = { func: e, slices: t, stacks: n }),
        this.fromBufferGeometry(new Xt(e, t, n)),
        this.mergeVertices();
    }
    function Xt(e, t, n) {
      Pe.call(this),
        (this.type = "ParametricBufferGeometry"),
        (this.parameters = { func: e, slices: t, stacks: n });
      var r,
        i,
        o = [],
        a = [],
        s = [],
        c = [],
        u = new l(),
        h = new l(),
        p = new l(),
        d = new l(),
        f = new l(),
        m = t + 1;
      for (r = 0; r <= n; r++) {
        var v = r / n;
        for (i = 0; i <= t; i++) {
          var g = i / t;
          (h = e(g, v, h)),
            a.push(h.x, h.y, h.z),
            g - 1e-5 >= 0
              ? ((p = e(g - 1e-5, v, p)), d.subVectors(h, p))
              : ((p = e(g + 1e-5, v, p)), d.subVectors(p, h)),
            v - 1e-5 >= 0
              ? ((p = e(g, v - 1e-5, p)), f.subVectors(h, p))
              : ((p = e(g, v + 1e-5, p)), f.subVectors(p, h)),
            u.crossVectors(d, f).normalize(),
            s.push(u.x, u.y, u.z),
            c.push(g, v);
        }
      }
      for (r = 0; r < n; r++)
        for (i = 0; i < t; i++) {
          var y = r * m + i,
            _ = r * m + i + 1,
            b = (r + 1) * m + i + 1,
            x = (r + 1) * m + i;
          o.push(y, _, x), o.push(_, b, x);
        }
      this.setIndex(o),
        this.addAttribute("position", new Ne(a, 3)),
        this.addAttribute("normal", new Ne(s, 3)),
        this.addAttribute("uv", new Ne(c, 2));
    }
    function Yt(e, t, n, r) {
      ye.call(this),
        (this.type = "PolyhedronGeometry"),
        (this.parameters = { vertices: e, indices: t, radius: n, detail: r }),
        this.fromBufferGeometry(new Zt(e, t, n, r)),
        this.mergeVertices();
    }
    function Zt(e, t, n, r) {
      function o(e, t, n, r) {
        var i,
          o,
          a = Math.pow(2, r),
          c = [];
        for (i = 0; i <= a; i++) {
          c[i] = [];
          var u = e.clone().lerp(n, i / a),
            l = t.clone().lerp(n, i / a),
            h = a - i;
          for (o = 0; o <= h; o++)
            c[i][o] = 0 === o && i === a ? u : u.clone().lerp(l, o / h);
        }
        for (i = 0; i < a; i++)
          for (o = 0; o < 2 * (a - i) - 1; o++) {
            var p = Math.floor(o / 2);
            o % 2 == 0
              ? (s(c[i][p + 1]), s(c[i + 1][p]), s(c[i][p]))
              : (s(c[i][p + 1]), s(c[i + 1][p + 1]), s(c[i + 1][p]));
          }
      }
      function a() {
        for (var e = 0; e < m.length; e += 6) {
          var t = m[e + 0],
            n = m[e + 2],
            r = m[e + 4],
            i = Math.max(t, n, r),
            o = Math.min(t, n, r);
          i > 0.9 &&
            o < 0.1 &&
            (t < 0.2 && (m[e + 0] += 1),
            n < 0.2 && (m[e + 2] += 1),
            r < 0.2 && (m[e + 4] += 1));
        }
      }
      function s(e) {
        f.push(e.x, e.y, e.z);
      }
      function c(t, n) {
        var r = 3 * t;
        (n.x = e[r + 0]), (n.y = e[r + 1]), (n.z = e[r + 2]);
      }
      function u() {
        for (
          var e = new l(),
            t = new l(),
            n = new l(),
            r = new l(),
            o = new i(),
            a = new i(),
            s = new i(),
            c = 0,
            u = 0;
          c < f.length;
          c += 9, u += 6
        ) {
          e.set(f[c + 0], f[c + 1], f[c + 2]),
            t.set(f[c + 3], f[c + 4], f[c + 5]),
            n.set(f[c + 6], f[c + 7], f[c + 8]),
            o.set(m[u + 0], m[u + 1]),
            a.set(m[u + 2], m[u + 3]),
            s.set(m[u + 4], m[u + 5]),
            r.copy(e).add(t).add(n).divideScalar(3);
          var d = p(r);
          h(o, u + 0, e, d), h(a, u + 2, t, d), h(s, u + 4, n, d);
        }
      }
      function h(e, t, n, r) {
        r < 0 && 1 === e.x && (m[t] = e.x - 1),
          0 === n.x && 0 === n.z && (m[t] = r / 2 / Math.PI + 0.5);
      }
      function p(e) {
        return Math.atan2(e.z, -e.x);
      }
      function d(e) {
        return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z));
      }
      Pe.call(this),
        (this.type = "PolyhedronBufferGeometry"),
        (this.parameters = { vertices: e, indices: t, radius: n, detail: r }),
        (n = n || 1),
        (r = r || 0);
      var f = [],
        m = [];
      !(function (e) {
        for (
          var n = new l(), r = new l(), i = new l(), a = 0;
          a < t.length;
          a += 3
        )
          c(t[a + 0], n), c(t[a + 1], r), c(t[a + 2], i), o(n, r, i, e);
      })(r),
        (function (e) {
          for (var t = new l(), n = 0; n < f.length; n += 3)
            (t.x = f[n + 0]),
              (t.y = f[n + 1]),
              (t.z = f[n + 2]),
              t.normalize().multiplyScalar(e),
              (f[n + 0] = t.x),
              (f[n + 1] = t.y),
              (f[n + 2] = t.z);
        })(n),
        (function () {
          for (var e = new l(), t = 0; t < f.length; t += 3) {
            (e.x = f[t + 0]), (e.y = f[t + 1]), (e.z = f[t + 2]);
            var n = p(e) / 2 / Math.PI + 0.5,
              r = d(e) / Math.PI + 0.5;
            m.push(n, 1 - r);
          }
          u(), a();
        })(),
        this.addAttribute("position", new Ne(f, 3)),
        this.addAttribute("normal", new Ne(f.slice(), 3)),
        this.addAttribute("uv", new Ne(m, 2)),
        0 === r ? this.computeVertexNormals() : this.normalizeNormals();
    }
    function Kt(e, t) {
      ye.call(this),
        (this.type = "TetrahedronGeometry"),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new Jt(e, t)),
        this.mergeVertices();
    }
    function Jt(e, t) {
      var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
        r = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
      Zt.call(this, n, r, e, t),
        (this.type = "TetrahedronBufferGeometry"),
        (this.parameters = { radius: e, detail: t });
    }
    function Qt(e, t) {
      ye.call(this),
        (this.type = "OctahedronGeometry"),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new $t(e, t)),
        this.mergeVertices();
    }
    function $t(e, t) {
      var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
        r = [
          0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4,
          2,
        ];
      Zt.call(this, n, r, e, t),
        (this.type = "OctahedronBufferGeometry"),
        (this.parameters = { radius: e, detail: t });
    }
    function en(e, t) {
      ye.call(this),
        (this.type = "IcosahedronGeometry"),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new tn(e, t)),
        this.mergeVertices();
    }
    function tn(e, t) {
      var n = (1 + Math.sqrt(5)) / 2,
        r = [
          -1,
          n,
          0,
          1,
          n,
          0,
          -1,
          -n,
          0,
          1,
          -n,
          0,
          0,
          -1,
          n,
          0,
          1,
          n,
          0,
          -1,
          -n,
          0,
          1,
          -n,
          n,
          0,
          -1,
          n,
          0,
          1,
          -n,
          0,
          -1,
          -n,
          0,
          1,
        ],
        i = [
          0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4,
          11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3,
          8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
        ];
      Zt.call(this, r, i, e, t),
        (this.type = "IcosahedronBufferGeometry"),
        (this.parameters = { radius: e, detail: t });
    }
    function nn(e, t) {
      ye.call(this),
        (this.type = "DodecahedronGeometry"),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new rn(e, t)),
        this.mergeVertices();
    }
    function rn(e, t) {
      var n = (1 + Math.sqrt(5)) / 2,
        r = 1 / n,
        i = [
          -1,
          -1,
          -1,
          -1,
          -1,
          1,
          -1,
          1,
          -1,
          -1,
          1,
          1,
          1,
          -1,
          -1,
          1,
          -1,
          1,
          1,
          1,
          -1,
          1,
          1,
          1,
          0,
          -r,
          -n,
          0,
          -r,
          n,
          0,
          r,
          -n,
          0,
          r,
          n,
          -r,
          -n,
          0,
          -r,
          n,
          0,
          r,
          -n,
          0,
          r,
          n,
          0,
          -n,
          0,
          -r,
          n,
          0,
          -r,
          -n,
          0,
          r,
          n,
          0,
          r,
        ],
        o = [
          3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4,
          8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1,
          18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2,
          3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8,
          11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1,
          12, 14, 1, 14, 5, 1, 5, 9,
        ];
      Zt.call(this, i, o, e, t),
        (this.type = "DodecahedronBufferGeometry"),
        (this.parameters = { radius: e, detail: t });
    }
    function on(e, t, n, r, i, o) {
      ye.call(this),
        (this.type = "TubeGeometry"),
        (this.parameters = {
          path: e,
          tubularSegments: t,
          radius: n,
          radialSegments: r,
          closed: i,
        }),
        void 0 !== o &&
          console.warn("THREE.TubeGeometry: taper has been removed.");
      var a = new an(e, t, n, r, i);
      (this.tangents = a.tangents),
        (this.normals = a.normals),
        (this.binormals = a.binormals),
        this.fromBufferGeometry(a),
        this.mergeVertices();
    }
    function an(e, t, n, r, o) {
      function a(i) {
        var o = e.getPointAt(i / t),
          a = u.normals[i],
          s = u.binormals[i];
        for (p = 0; p <= r; p++) {
          var c = (p / r) * Math.PI * 2,
            l = Math.sin(c),
            h = -Math.cos(c);
          (f.x = h * a.x + l * s.x),
            (f.y = h * a.y + l * s.y),
            (f.z = h * a.z + l * s.z),
            f.normalize(),
            g.push(f.x, f.y, f.z),
            (d.x = o.x + n * f.x),
            (d.y = o.y + n * f.y),
            (d.z = o.z + n * f.z),
            v.push(d.x, d.y, d.z);
        }
      }
      function s() {
        for (p = 1; p <= t; p++)
          for (h = 1; h <= r; h++) {
            var e = (r + 1) * (p - 1) + (h - 1),
              n = (r + 1) * p + (h - 1),
              i = (r + 1) * p + h,
              o = (r + 1) * (p - 1) + h;
            _.push(e, n, o), _.push(n, i, o);
          }
      }
      function c() {
        for (h = 0; h <= t; h++)
          for (p = 0; p <= r; p++)
            (m.x = h / t), (m.y = p / r), y.push(m.x, m.y);
      }
      Pe.call(this),
        (this.type = "TubeBufferGeometry"),
        (this.parameters = {
          path: e,
          tubularSegments: t,
          radius: n,
          radialSegments: r,
          closed: o,
        }),
        (t = t || 64),
        (n = n || 1),
        (r = r || 8),
        (o = o || !1);
      var u = e.computeFrenetFrames(t, o);
      (this.tangents = u.tangents),
        (this.normals = u.normals),
        (this.binormals = u.binormals);
      var h,
        p,
        d = new l(),
        f = new l(),
        m = new i(),
        v = [],
        g = [],
        y = [],
        _ = [];
      !(function () {
        for (h = 0; h < t; h++) a(h);
        a(!1 === o ? t : 0), c(), s();
      })(),
        this.setIndex(_),
        this.addAttribute("position", new Ne(v, 3)),
        this.addAttribute("normal", new Ne(g, 3)),
        this.addAttribute("uv", new Ne(y, 2));
    }
    function sn(e, t, n, r, i, o, a) {
      ye.call(this),
        (this.type = "TorusKnotGeometry"),
        (this.parameters = {
          radius: e,
          tube: t,
          tubularSegments: n,
          radialSegments: r,
          p: i,
          q: o,
        }),
        void 0 !== a &&
          console.warn(
            "THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."
          ),
        this.fromBufferGeometry(new cn(e, t, n, r, i, o)),
        this.mergeVertices();
    }
    function cn(e, t, n, r, i, o) {
      function a(e, t, n, r, i) {
        var o = Math.cos(e),
          a = Math.sin(e),
          s = (n / t) * e,
          c = Math.cos(s);
        (i.x = r * (2 + c) * 0.5 * o),
          (i.y = r * (2 + c) * a * 0.5),
          (i.z = r * Math.sin(s) * 0.5);
      }
      Pe.call(this),
        (this.type = "TorusKnotBufferGeometry"),
        (this.parameters = {
          radius: e,
          tube: t,
          tubularSegments: n,
          radialSegments: r,
          p: i,
          q: o,
        }),
        (e = e || 100),
        (t = t || 40),
        (n = Math.floor(n) || 64),
        (r = Math.floor(r) || 8),
        (i = i || 2),
        (o = o || 3);
      var s,
        c,
        u = [],
        h = [],
        p = [],
        d = [],
        f = new l(),
        m = new l(),
        v = new l(),
        g = new l(),
        y = new l(),
        _ = new l(),
        b = new l();
      for (s = 0; s <= n; ++s) {
        var x = (s / n) * i * Math.PI * 2;
        for (
          a(x, i, o, e, v),
            a(x + 0.01, i, o, e, g),
            _.subVectors(g, v),
            b.addVectors(g, v),
            y.crossVectors(_, b),
            b.crossVectors(y, _),
            y.normalize(),
            b.normalize(),
            c = 0;
          c <= r;
          ++c
        ) {
          var E = (c / r) * Math.PI * 2,
            w = -t * Math.cos(E),
            M = t * Math.sin(E);
          (f.x = v.x + (w * b.x + M * y.x)),
            (f.y = v.y + (w * b.y + M * y.y)),
            (f.z = v.z + (w * b.z + M * y.z)),
            h.push(f.x, f.y, f.z),
            m.subVectors(f, v).normalize(),
            p.push(m.x, m.y, m.z),
            d.push(s / n),
            d.push(c / r);
        }
      }
      for (c = 1; c <= n; c++)
        for (s = 1; s <= r; s++) {
          var T = (r + 1) * (c - 1) + (s - 1),
            S = (r + 1) * c + (s - 1),
            N = (r + 1) * c + s,
            C = (r + 1) * (c - 1) + s;
          u.push(T, S, C), u.push(S, N, C);
        }
      this.setIndex(u),
        this.addAttribute("position", new Ne(h, 3)),
        this.addAttribute("normal", new Ne(p, 3)),
        this.addAttribute("uv", new Ne(d, 2));
    }
    function un(e, t, n, r, i) {
      ye.call(this),
        (this.type = "TorusGeometry"),
        (this.parameters = {
          radius: e,
          tube: t,
          radialSegments: n,
          tubularSegments: r,
          arc: i,
        }),
        this.fromBufferGeometry(new ln(e, t, n, r, i)),
        this.mergeVertices();
    }
    function ln(e, t, n, r, i) {
      Pe.call(this),
        (this.type = "TorusBufferGeometry"),
        (this.parameters = {
          radius: e,
          tube: t,
          radialSegments: n,
          tubularSegments: r,
          arc: i,
        }),
        (e = e || 100),
        (t = t || 40),
        (n = Math.floor(n) || 8),
        (r = Math.floor(r) || 6),
        (i = i || 2 * Math.PI);
      var o,
        a,
        s = [],
        c = [],
        u = [],
        h = [],
        p = new l(),
        d = new l(),
        f = new l();
      for (o = 0; o <= n; o++)
        for (a = 0; a <= r; a++) {
          var m = (a / r) * i,
            v = (o / n) * Math.PI * 2;
          (d.x = (e + t * Math.cos(v)) * Math.cos(m)),
            (d.y = (e + t * Math.cos(v)) * Math.sin(m)),
            (d.z = t * Math.sin(v)),
            c.push(d.x, d.y, d.z),
            (p.x = e * Math.cos(m)),
            (p.y = e * Math.sin(m)),
            f.subVectors(d, p).normalize(),
            u.push(f.x, f.y, f.z),
            h.push(a / r),
            h.push(o / n);
        }
      for (o = 1; o <= n; o++)
        for (a = 1; a <= r; a++) {
          var g = (r + 1) * o + a - 1,
            y = (r + 1) * (o - 1) + a - 1,
            _ = (r + 1) * (o - 1) + a,
            b = (r + 1) * o + a;
          s.push(g, y, b), s.push(y, _, b);
        }
      this.setIndex(s),
        this.addAttribute("position", new Ne(c, 3)),
        this.addAttribute("normal", new Ne(u, 3)),
        this.addAttribute("uv", new Ne(h, 2));
    }
    function hn(e, t) {
      ye.call(this),
        (this.type = "ExtrudeGeometry"),
        (this.parameters = { shapes: e, options: t }),
        this.fromBufferGeometry(new pn(e, t)),
        this.mergeVertices();
    }
    function pn(e, t) {
      void 0 !== e &&
        (Pe.call(this),
        (this.type = "ExtrudeBufferGeometry"),
        (e = Array.isArray(e) ? e : [e]),
        this.addShapeList(e, t),
        this.computeVertexNormals());
    }
    function dn(e, t) {
      ye.call(this),
        (this.type = "TextGeometry"),
        (this.parameters = { text: e, parameters: t }),
        this.fromBufferGeometry(new fn(e, t)),
        this.mergeVertices();
    }
    function fn(e, t) {
      t = t || {};
      var n = t.font;
      if (!n || !n.isFont)
        return (
          console.error(
            "THREE.TextGeometry: font parameter is not an instance of THREE.Font."
          ),
          new ye()
        );
      var r = n.generateShapes(e, t.size, t.curveSegments);
      (t.amount = void 0 !== t.height ? t.height : 50),
        void 0 === t.bevelThickness && (t.bevelThickness = 10),
        void 0 === t.bevelSize && (t.bevelSize = 8),
        void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
        pn.call(this, r, t),
        (this.type = "TextBufferGeometry");
    }
    function mn(e, t, n, r, i, o, a) {
      ye.call(this),
        (this.type = "SphereGeometry"),
        (this.parameters = {
          radius: e,
          widthSegments: t,
          heightSegments: n,
          phiStart: r,
          phiLength: i,
          thetaStart: o,
          thetaLength: a,
        }),
        this.fromBufferGeometry(new vn(e, t, n, r, i, o, a)),
        this.mergeVertices();
    }
    function vn(e, t, n, r, i, o, a) {
      Pe.call(this),
        (this.type = "SphereBufferGeometry"),
        (this.parameters = {
          radius: e,
          widthSegments: t,
          heightSegments: n,
          phiStart: r,
          phiLength: i,
          thetaStart: o,
          thetaLength: a,
        }),
        (e = e || 50),
        (t = Math.max(3, Math.floor(t) || 8)),
        (n = Math.max(2, Math.floor(n) || 6)),
        (r = void 0 !== r ? r : 0),
        (i = void 0 !== i ? i : 2 * Math.PI),
        (o = void 0 !== o ? o : 0),
        (a = void 0 !== a ? a : Math.PI);
      var s,
        c,
        u = o + a,
        h = 0,
        p = [],
        d = new l(),
        f = new l(),
        m = [],
        v = [],
        g = [],
        y = [];
      for (c = 0; c <= n; c++) {
        var _ = [],
          b = c / n;
        for (s = 0; s <= t; s++) {
          var x = s / t;
          (d.x = -e * Math.cos(r + x * i) * Math.sin(o + b * a)),
            (d.y = e * Math.cos(o + b * a)),
            (d.z = e * Math.sin(r + x * i) * Math.sin(o + b * a)),
            v.push(d.x, d.y, d.z),
            f.set(d.x, d.y, d.z).normalize(),
            g.push(f.x, f.y, f.z),
            y.push(x, 1 - b),
            _.push(h++);
        }
        p.push(_);
      }
      for (c = 0; c < n; c++)
        for (s = 0; s < t; s++) {
          var E = p[c][s + 1],
            w = p[c][s],
            M = p[c + 1][s],
            T = p[c + 1][s + 1];
          (0 !== c || o > 0) && m.push(E, w, T),
            (c !== n - 1 || u < Math.PI) && m.push(w, M, T);
        }
      this.setIndex(m),
        this.addAttribute("position", new Ne(v, 3)),
        this.addAttribute("normal", new Ne(g, 3)),
        this.addAttribute("uv", new Ne(y, 2));
    }
    function gn(e, t, n, r, i, o) {
      ye.call(this),
        (this.type = "RingGeometry"),
        (this.parameters = {
          innerRadius: e,
          outerRadius: t,
          thetaSegments: n,
          phiSegments: r,
          thetaStart: i,
          thetaLength: o,
        }),
        this.fromBufferGeometry(new yn(e, t, n, r, i, o)),
        this.mergeVertices();
    }
    function yn(e, t, n, r, o, a) {
      Pe.call(this),
        (this.type = "RingBufferGeometry"),
        (this.parameters = {
          innerRadius: e,
          outerRadius: t,
          thetaSegments: n,
          phiSegments: r,
          thetaStart: o,
          thetaLength: a,
        }),
        (e = e || 20),
        (t = t || 50),
        (o = void 0 !== o ? o : 0),
        (a = void 0 !== a ? a : 2 * Math.PI),
        (n = void 0 !== n ? Math.max(3, n) : 8),
        (r = void 0 !== r ? Math.max(1, r) : 1);
      var s,
        c,
        u,
        h = [],
        p = [],
        d = [],
        f = [],
        m = e,
        v = (t - e) / r,
        g = new l(),
        y = new i();
      for (c = 0; c <= r; c++) {
        for (u = 0; u <= n; u++)
          (s = o + (u / n) * a),
            (g.x = m * Math.cos(s)),
            (g.y = m * Math.sin(s)),
            p.push(g.x, g.y, g.z),
            d.push(0, 0, 1),
            (y.x = (g.x / t + 1) / 2),
            (y.y = (g.y / t + 1) / 2),
            f.push(y.x, y.y);
        m += v;
      }
      for (c = 0; c < r; c++) {
        var _ = c * (n + 1);
        for (u = 0; u < n; u++) {
          s = u + _;
          var b = s,
            x = s + n + 1,
            E = s + n + 2,
            w = s + 1;
          h.push(b, x, w), h.push(x, E, w);
        }
      }
      this.setIndex(h),
        this.addAttribute("position", new Ne(p, 3)),
        this.addAttribute("normal", new Ne(d, 3)),
        this.addAttribute("uv", new Ne(f, 2));
    }
    function _n(e, t, n, r) {
      ye.call(this),
        (this.type = "LatheGeometry"),
        (this.parameters = {
          points: e,
          segments: t,
          phiStart: n,
          phiLength: r,
        }),
        this.fromBufferGeometry(new bn(e, t, n, r)),
        this.mergeVertices();
    }
    function bn(e, t, n, r) {
      Pe.call(this),
        (this.type = "LatheBufferGeometry"),
        (this.parameters = {
          points: e,
          segments: t,
          phiStart: n,
          phiLength: r,
        }),
        (t = Math.floor(t) || 12),
        (n = n || 0),
        (r = r || 2 * Math.PI),
        (r = Os.clamp(r, 0, 2 * Math.PI));
      var o,
        a,
        s,
        c = [],
        u = [],
        h = [],
        p = 1 / t,
        d = new l(),
        f = new i();
      for (a = 0; a <= t; a++) {
        var m = n + a * p * r,
          v = Math.sin(m),
          g = Math.cos(m);
        for (s = 0; s <= e.length - 1; s++)
          (d.x = e[s].x * v),
            (d.y = e[s].y),
            (d.z = e[s].x * g),
            u.push(d.x, d.y, d.z),
            (f.x = a / t),
            (f.y = s / (e.length - 1)),
            h.push(f.x, f.y);
      }
      for (a = 0; a < t; a++)
        for (s = 0; s < e.length - 1; s++) {
          o = s + a * e.length;
          var y = o,
            _ = o + e.length,
            b = o + e.length + 1,
            x = o + 1;
          c.push(y, _, x), c.push(_, b, x);
        }
      if (
        (this.setIndex(c),
        this.addAttribute("position", new Ne(u, 3)),
        this.addAttribute("uv", new Ne(h, 2)),
        this.computeVertexNormals(),
        r === 2 * Math.PI)
      ) {
        var E = this.attributes.normal.array,
          w = new l(),
          M = new l(),
          T = new l();
        for (o = t * e.length * 3, a = 0, s = 0; a < e.length; a++, s += 3)
          (w.x = E[s + 0]),
            (w.y = E[s + 1]),
            (w.z = E[s + 2]),
            (M.x = E[o + s + 0]),
            (M.y = E[o + s + 1]),
            (M.z = E[o + s + 2]),
            T.addVectors(w, M).normalize(),
            (E[s + 0] = E[o + s + 0] = T.x),
            (E[s + 1] = E[o + s + 1] = T.y),
            (E[s + 2] = E[o + s + 2] = T.z);
      }
    }
    function xn(e, t) {
      ye.call(this),
        (this.type = "ShapeGeometry"),
        "object" == typeof t &&
          (console.warn(
            "THREE.ShapeGeometry: Options parameter has been removed."
          ),
          (t = t.curveSegments)),
        (this.parameters = { shapes: e, curveSegments: t }),
        this.fromBufferGeometry(new En(e, t)),
        this.mergeVertices();
    }
    function En(e, t) {
      function n(e) {
        var n,
          s,
          u,
          l = i.length / 3,
          h = e.extractPoints(t),
          p = h.shape,
          d = h.holes;
        if (!1 === Ks.isClockWise(p))
          for (p = p.reverse(), n = 0, s = d.length; n < s; n++)
            (u = d[n]), !0 === Ks.isClockWise(u) && (d[n] = u.reverse());
        var f = Ks.triangulateShape(p, d);
        for (n = 0, s = d.length; n < s; n++) (u = d[n]), (p = p.concat(u));
        for (n = 0, s = p.length; n < s; n++) {
          var m = p[n];
          i.push(m.x, m.y, 0), o.push(0, 0, 1), a.push(m.x, m.y);
        }
        for (n = 0, s = f.length; n < s; n++) {
          var v = f[n],
            g = v[0] + l,
            y = v[1] + l,
            _ = v[2] + l;
          r.push(g, y, _), (c += 3);
        }
      }
      Pe.call(this),
        (this.type = "ShapeBufferGeometry"),
        (this.parameters = { shapes: e, curveSegments: t }),
        (t = t || 12);
      var r = [],
        i = [],
        o = [],
        a = [],
        s = 0,
        c = 0;
      if (!1 === Array.isArray(e)) n(e);
      else
        for (var u = 0; u < e.length; u++)
          n(e[u]), this.addGroup(s, c, u), (s += c), (c = 0);
      this.setIndex(r),
        this.addAttribute("position", new Ne(i, 3)),
        this.addAttribute("normal", new Ne(o, 3)),
        this.addAttribute("uv", new Ne(a, 2));
    }
    function wn(e, t) {
      Pe.call(this),
        (this.type = "EdgesGeometry"),
        (this.parameters = { thresholdAngle: t }),
        (t = void 0 !== t ? t : 1);
      var n,
        r,
        i,
        o,
        a = [],
        s = Math.cos(Os.DEG2RAD * t),
        c = [0, 0],
        u = {},
        l = ["a", "b", "c"];
      e.isBufferGeometry
        ? ((o = new ye()), o.fromBufferGeometry(e))
        : (o = e.clone()),
        o.mergeVertices(),
        o.computeFaceNormals();
      for (var h = o.vertices, p = o.faces, d = 0, f = p.length; d < f; d++)
        for (var m = p[d], v = 0; v < 3; v++)
          (n = m[l[v]]),
            (r = m[l[(v + 1) % 3]]),
            (c[0] = Math.min(n, r)),
            (c[1] = Math.max(n, r)),
            (i = c[0] + "," + c[1]),
            void 0 === u[i]
              ? (u[i] = { index1: c[0], index2: c[1], face1: d, face2: void 0 })
              : (u[i].face2 = d);
      for (i in u) {
        var g = u[i];
        if (
          void 0 === g.face2 ||
          p[g.face1].normal.dot(p[g.face2].normal) <= s
        ) {
          var y = h[g.index1];
          a.push(y.x, y.y, y.z), (y = h[g.index2]), a.push(y.x, y.y, y.z);
        }
      }
      this.addAttribute("position", new Ne(a, 3));
    }
    function Mn(e, t, n, r, i, o, a, s) {
      ye.call(this),
        (this.type = "CylinderGeometry"),
        (this.parameters = {
          radiusTop: e,
          radiusBottom: t,
          height: n,
          radialSegments: r,
          heightSegments: i,
          openEnded: o,
          thetaStart: a,
          thetaLength: s,
        }),
        this.fromBufferGeometry(new Tn(e, t, n, r, i, o, a, s)),
        this.mergeVertices();
    }
    function Tn(e, t, n, r, o, a, s, c) {
      function u(n) {
        var o,
          a,
          u,
          g = new i(),
          b = new l(),
          x = 0,
          E = !0 === n ? e : t,
          w = !0 === n ? 1 : -1;
        for (a = v, o = 1; o <= r; o++)
          d.push(0, y * w, 0), f.push(0, w, 0), m.push(0.5, 0.5), v++;
        for (u = v, o = 0; o <= r; o++) {
          var M = o / r,
            T = M * c + s,
            S = Math.cos(T),
            N = Math.sin(T);
          (b.x = E * N),
            (b.y = y * w),
            (b.z = E * S),
            d.push(b.x, b.y, b.z),
            f.push(0, w, 0),
            (g.x = 0.5 * S + 0.5),
            (g.y = 0.5 * N * w + 0.5),
            m.push(g.x, g.y),
            v++;
        }
        for (o = 0; o < r; o++) {
          var C = a + o,
            A = u + o;
          !0 === n ? p.push(A, A + 1, C) : p.push(A + 1, A, C), (x += 3);
        }
        h.addGroup(_, x, !0 === n ? 1 : 2), (_ += x);
      }
      Pe.call(this),
        (this.type = "CylinderBufferGeometry"),
        (this.parameters = {
          radiusTop: e,
          radiusBottom: t,
          height: n,
          radialSegments: r,
          heightSegments: o,
          openEnded: a,
          thetaStart: s,
          thetaLength: c,
        });
      var h = this;
      (e = void 0 !== e ? e : 20),
        (t = void 0 !== t ? t : 20),
        (n = void 0 !== n ? n : 100),
        (r = Math.floor(r) || 8),
        (o = Math.floor(o) || 1),
        (a = void 0 !== a && a),
        (s = void 0 !== s ? s : 0),
        (c = void 0 !== c ? c : 2 * Math.PI);
      var p = [],
        d = [],
        f = [],
        m = [],
        v = 0,
        g = [],
        y = n / 2,
        _ = 0;
      !(function () {
        var i,
          a,
          u = new l(),
          b = new l(),
          x = 0,
          E = (t - e) / n;
        for (a = 0; a <= o; a++) {
          var w = [],
            M = a / o,
            T = M * (t - e) + e;
          for (i = 0; i <= r; i++) {
            var S = i / r,
              N = S * c + s,
              C = Math.sin(N),
              A = Math.cos(N);
            (b.x = T * C),
              (b.y = -M * n + y),
              (b.z = T * A),
              d.push(b.x, b.y, b.z),
              u.set(C, E, A).normalize(),
              f.push(u.x, u.y, u.z),
              m.push(S, 1 - M),
              w.push(v++);
          }
          g.push(w);
        }
        for (i = 0; i < r; i++)
          for (a = 0; a < o; a++) {
            var R = g[a][i],
              P = g[a + 1][i],
              O = g[a + 1][i + 1],
              D = g[a][i + 1];
            p.push(R, P, D), p.push(P, O, D), (x += 6);
          }
        h.addGroup(_, x, 0), (_ += x);
      })(),
        !1 === a && (e > 0 && u(!0), t > 0 && u(!1)),
        this.setIndex(p),
        this.addAttribute("position", new Ne(d, 3)),
        this.addAttribute("normal", new Ne(f, 3)),
        this.addAttribute("uv", new Ne(m, 2));
    }
    function Sn(e, t, n, r, i, o, a) {
      Mn.call(this, 0, e, t, n, r, i, o, a),
        (this.type = "ConeGeometry"),
        (this.parameters = {
          radius: e,
          height: t,
          radialSegments: n,
          heightSegments: r,
          openEnded: i,
          thetaStart: o,
          thetaLength: a,
        });
    }
    function Nn(e, t, n, r, i, o, a) {
      Tn.call(this, 0, e, t, n, r, i, o, a),
        (this.type = "ConeBufferGeometry"),
        (this.parameters = {
          radius: e,
          height: t,
          radialSegments: n,
          heightSegments: r,
          openEnded: i,
          thetaStart: o,
          thetaLength: a,
        });
    }
    function Cn(e, t, n, r) {
      ye.call(this),
        (this.type = "CircleGeometry"),
        (this.parameters = {
          radius: e,
          segments: t,
          thetaStart: n,
          thetaLength: r,
        }),
        this.fromBufferGeometry(new An(e, t, n, r)),
        this.mergeVertices();
    }
    function An(e, t, n, r) {
      Pe.call(this),
        (this.type = "CircleBufferGeometry"),
        (this.parameters = {
          radius: e,
          segments: t,
          thetaStart: n,
          thetaLength: r,
        }),
        (e = e || 50),
        (t = void 0 !== t ? Math.max(3, t) : 8),
        (n = void 0 !== n ? n : 0),
        (r = void 0 !== r ? r : 2 * Math.PI);
      var o,
        a,
        s = [],
        c = [],
        u = [],
        h = [],
        p = new l(),
        d = new i();
      for (
        c.push(0, 0, 0), u.push(0, 0, 1), h.push(0.5, 0.5), a = 0, o = 3;
        a <= t;
        a++, o += 3
      ) {
        var f = n + (a / t) * r;
        (p.x = e * Math.cos(f)),
          (p.y = e * Math.sin(f)),
          c.push(p.x, p.y, p.z),
          u.push(0, 0, 1),
          (d.x = (c[o] / e + 1) / 2),
          (d.y = (c[o + 1] / e + 1) / 2),
          h.push(d.x, d.y);
      }
      for (o = 1; o <= t; o++) s.push(o, o + 1, 0);
      this.setIndex(s),
        this.addAttribute("position", new Ne(c, 3)),
        this.addAttribute("normal", new Ne(u, 3)),
        this.addAttribute("uv", new Ne(h, 2));
    }
    function Rn(e) {
      $.call(this),
        (this.type = "ShadowMaterial"),
        (this.color = new Y(0)),
        (this.opacity = 1),
        (this.lights = !0),
        (this.transparent = !0),
        this.setValues(e);
    }
    function Pn(e) {
      ee.call(this, e), (this.type = "RawShaderMaterial");
    }
    function On(e) {
      $.call(this),
        (this.defines = { STANDARD: "" }),
        (this.type = "MeshStandardMaterial"),
        (this.color = new Y(16777215)),
        (this.roughness = 0.5),
        (this.metalness = 0.5),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.emissive = new Y(0)),
        (this.emissiveIntensity = 1),
        (this.emissiveMap = null),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalScale = new i(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.roughnessMap = null),
        (this.metalnessMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.envMapIntensity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = "round"),
        (this.wireframeLinejoin = "round"),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function Dn(e) {
      On.call(this),
        (this.defines = { PHYSICAL: "" }),
        (this.type = "MeshPhysicalMaterial"),
        (this.reflectivity = 0.5),
        (this.clearCoat = 0),
        (this.clearCoatRoughness = 0),
        this.setValues(e);
    }
    function Ln(e) {
      $.call(this),
        (this.type = "MeshPhongMaterial"),
        (this.color = new Y(16777215)),
        (this.specular = new Y(1118481)),
        (this.shininess = 30),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.emissive = new Y(0)),
        (this.emissiveIntensity = 1),
        (this.emissiveMap = null),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalScale = new i(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.combine = la),
        (this.reflectivity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = "round"),
        (this.wireframeLinejoin = "round"),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function In(e) {
      Ln.call(this),
        (this.defines = { TOON: "" }),
        (this.type = "MeshToonMaterial"),
        (this.gradientMap = null),
        this.setValues(e);
    }
    function Un(e) {
      $.call(this),
        (this.type = "MeshNormalMaterial"),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalScale = new i(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.fog = !1),
        (this.lights = !1),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function kn(e) {
      $.call(this),
        (this.type = "MeshLambertMaterial"),
        (this.color = new Y(16777215)),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.emissive = new Y(0)),
        (this.emissiveIntensity = 1),
        (this.emissiveMap = null),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.combine = la),
        (this.reflectivity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = "round"),
        (this.wireframeLinejoin = "round"),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function Fn(e) {
      It.call(this),
        (this.type = "LineDashedMaterial"),
        (this.scale = 1),
        (this.dashSize = 3),
        (this.gapSize = 1),
        this.setValues(e);
    }
    function Vn(e, t, n) {
      var r = this,
        i = !1,
        o = 0,
        a = 0;
      (this.onStart = void 0),
        (this.onLoad = e),
        (this.onProgress = t),
        (this.onError = n),
        (this.itemStart = function (e) {
          a++, !1 === i && void 0 !== r.onStart && r.onStart(e, o, a), (i = !0);
        }),
        (this.itemEnd = function (e) {
          o++,
            void 0 !== r.onProgress && r.onProgress(e, o, a),
            o === a && ((i = !1), void 0 !== r.onLoad && r.onLoad());
        }),
        (this.itemError = function (e) {
          void 0 !== r.onError && r.onError(e);
        });
    }
    function Bn(e) {
      this.manager = void 0 !== e ? e : ec;
    }
    function zn(e) {
      (this.manager = void 0 !== e ? e : ec), (this._parser = null);
    }
    function Hn(e) {
      (this.manager = void 0 !== e ? e : ec), (this._parser = null);
    }
    function jn(e) {
      this.manager = void 0 !== e ? e : ec;
    }
    function Gn(e) {
      this.manager = void 0 !== e ? e : ec;
    }
    function Wn(e) {
      this.manager = void 0 !== e ? e : ec;
    }
    function qn(e, t) {
      pe.call(this),
        (this.type = "Light"),
        (this.color = new Y(e)),
        (this.intensity = void 0 !== t ? t : 1),
        (this.receiveShadow = void 0);
    }
    function Xn(e, t, n) {
      qn.call(this, e, n),
        (this.type = "HemisphereLight"),
        (this.castShadow = void 0),
        this.position.copy(pe.DefaultUp),
        this.updateMatrix(),
        (this.groundColor = new Y(t));
    }
    function Yn(e) {
      (this.camera = e),
        (this.bias = 0),
        (this.radius = 1),
        (this.mapSize = new i(512, 512)),
        (this.map = null),
        (this.matrix = new h());
    }
    function Zn() {
      Yn.call(this, new me(50, 1, 0.5, 500));
    }
    function Kn(e, t, n, r, i, o) {
      qn.call(this, e, t),
        (this.type = "SpotLight"),
        this.position.copy(pe.DefaultUp),
        this.updateMatrix(),
        (this.target = new pe()),
        Object.defineProperty(this, "power", {
          get: function () {
            return this.intensity * Math.PI;
          },
          set: function (e) {
            this.intensity = e / Math.PI;
          },
        }),
        (this.distance = void 0 !== n ? n : 0),
        (this.angle = void 0 !== r ? r : Math.PI / 3),
        (this.penumbra = void 0 !== i ? i : 0),
        (this.decay = void 0 !== o ? o : 1),
        (this.shadow = new Zn());
    }
    function Jn(e, t, n, r) {
      qn.call(this, e, t),
        (this.type = "PointLight"),
        Object.defineProperty(this, "power", {
          get: function () {
            return 4 * this.intensity * Math.PI;
          },
          set: function (e) {
            this.intensity = e / (4 * Math.PI);
          },
        }),
        (this.distance = void 0 !== n ? n : 0),
        (this.decay = void 0 !== r ? r : 1),
        (this.shadow = new Yn(new me(90, 1, 0.5, 500)));
    }
    function Qn() {
      Yn.call(this, new fe(-5, 5, 5, -5, 0.5, 500));
    }
    function $n(e, t) {
      qn.call(this, e, t),
        (this.type = "DirectionalLight"),
        this.position.copy(pe.DefaultUp),
        this.updateMatrix(),
        (this.target = new pe()),
        (this.shadow = new Qn());
    }
    function er(e, t) {
      qn.call(this, e, t),
        (this.type = "AmbientLight"),
        (this.castShadow = void 0);
    }
    function tr(e, t, n, r) {
      qn.call(this, e, t),
        (this.type = "RectAreaLight"),
        this.position.set(0, 1, 0),
        this.updateMatrix(),
        (this.width = void 0 !== n ? n : 10),
        (this.height = void 0 !== r ? r : 10);
    }
    function nr(e, t, n, r) {
      (this.parameterPositions = e),
        (this._cachedIndex = 0),
        (this.resultBuffer = void 0 !== r ? r : new t.constructor(n)),
        (this.sampleValues = t),
        (this.valueSize = n);
    }
    function rr(e, t, n, r) {
      nr.call(this, e, t, n, r),
        (this._weightPrev = -0),
        (this._offsetPrev = -0),
        (this._weightNext = -0),
        (this._offsetNext = -0);
    }
    function ir(e, t, n, r) {
      nr.call(this, e, t, n, r);
    }
    function or(e, t, n, r) {
      nr.call(this, e, t, n, r);
    }
    function ar(e, t, n, r) {
      if (void 0 === e) throw new Error("track name is undefined");
      if (void 0 === t || 0 === t.length)
        throw new Error("no keyframes in track named " + e);
      (this.name = e),
        (this.times = tc.convertArray(t, this.TimeBufferType)),
        (this.values = tc.convertArray(n, this.ValueBufferType)),
        this.setInterpolation(r || this.DefaultInterpolation),
        this.validate(),
        this.optimize();
    }
    function sr(e, t, n, r) {
      ar.call(this, e, t, n, r);
    }
    function cr(e, t, n, r) {
      nr.call(this, e, t, n, r);
    }
    function ur(e, t, n, r) {
      ar.call(this, e, t, n, r);
    }
    function lr(e, t, n, r) {
      ar.call(this, e, t, n, r);
    }
    function hr(e, t, n, r) {
      ar.call(this, e, t, n, r);
    }
    function pr(e, t, n) {
      ar.call(this, e, t, n);
    }
    function dr(e, t, n, r) {
      ar.call(this, e, t, n, r);
    }
    function fr(e, t, n, r) {
      ar.apply(this, arguments);
    }
    function mr(e, t, n) {
      (this.name = e),
        (this.tracks = n),
        (this.duration = void 0 !== t ? t : -1),
        (this.uuid = Os.generateUUID()),
        this.duration < 0 && this.resetDuration(),
        this.optimize();
    }
    function vr(e) {
      (this.manager = void 0 !== e ? e : ec), (this.textures = {});
    }
    function gr(e) {
      this.manager = void 0 !== e ? e : ec;
    }
    function yr() {
      (this.onLoadStart = function () {}),
        (this.onLoadProgress = function () {}),
        (this.onLoadComplete = function () {});
    }
    function _r(e) {
      "boolean" == typeof e &&
        (console.warn(
          "THREE.JSONLoader: showStatus parameter has been removed from constructor."
        ),
        (e = void 0)),
        (this.manager = void 0 !== e ? e : ec),
        (this.withCredentials = !1);
    }
    function br(e) {
      (this.manager = void 0 !== e ? e : ec), (this.texturePath = "");
    }
    function xr(e, t, n, r, i) {
      var o = 0.5 * (r - t),
        a = 0.5 * (i - n),
        s = e * e;
      return (
        (2 * n - 2 * r + o + a) * (e * s) +
        (-3 * n + 3 * r - 2 * o - a) * s +
        o * e +
        n
      );
    }
    function Er(e, t) {
      var n = 1 - e;
      return n * n * t;
    }
    function wr(e, t) {
      return 2 * (1 - e) * e * t;
    }
    function Mr(e, t) {
      return e * e * t;
    }
    function Tr(e, t, n, r) {
      return Er(e, t) + wr(e, n) + Mr(e, r);
    }
    function Sr(e, t) {
      var n = 1 - e;
      return n * n * n * t;
    }
    function Nr(e, t) {
      var n = 1 - e;
      return 3 * n * n * e * t;
    }
    function Cr(e, t) {
      return 3 * (1 - e) * e * e * t;
    }
    function Ar(e, t) {
      return e * e * e * t;
    }
    function Rr(e, t, n, r, i) {
      return Sr(e, t) + Nr(e, n) + Cr(e, r) + Ar(e, i);
    }
    function Pr() {
      this.arcLengthDivisions = 200;
    }
    function Or(e, t) {
      Pr.call(this), (this.v1 = e), (this.v2 = t);
    }
    function Dr() {
      Pr.call(this), (this.curves = []), (this.autoClose = !1);
    }
    function Lr(e, t, n, r, i, o, a, s) {
      Pr.call(this),
        (this.aX = e),
        (this.aY = t),
        (this.xRadius = n),
        (this.yRadius = r),
        (this.aStartAngle = i),
        (this.aEndAngle = o),
        (this.aClockwise = a),
        (this.aRotation = s || 0);
    }
    function Ir(e) {
      Pr.call(this), (this.points = void 0 === e ? [] : e);
    }
    function Ur(e, t, n, r) {
      Pr.call(this), (this.v0 = e), (this.v1 = t), (this.v2 = n), (this.v3 = r);
    }
    function kr(e, t, n) {
      Pr.call(this), (this.v0 = e), (this.v1 = t), (this.v2 = n);
    }
    function Fr(e) {
      Dr.call(this), (this.currentPoint = new i()), e && this.fromPoints(e);
    }
    function Vr() {
      Fr.apply(this, arguments), (this.holes = []);
    }
    function Br() {
      (this.subPaths = []), (this.currentPath = null);
    }
    function zr(e) {
      this.data = e;
    }
    function Hr(e) {
      this.manager = void 0 !== e ? e : ec;
    }
    function jr(e) {
      this.manager = void 0 !== e ? e : ec;
    }
    function Gr() {
      (this.type = "StereoCamera"),
        (this.aspect = 1),
        (this.eyeSep = 0.064),
        (this.cameraL = new me()),
        this.cameraL.layers.enable(1),
        (this.cameraL.matrixAutoUpdate = !1),
        (this.cameraR = new me()),
        this.cameraR.layers.enable(2),
        (this.cameraR.matrixAutoUpdate = !1);
    }
    function Wr(e, t, n) {
      pe.call(this), (this.type = "CubeCamera");
      var r = new me(90, 1, e, t);
      r.up.set(0, -1, 0), r.lookAt(new l(1, 0, 0)), this.add(r);
      var i = new me(90, 1, e, t);
      i.up.set(0, -1, 0), i.lookAt(new l(-1, 0, 0)), this.add(i);
      var o = new me(90, 1, e, t);
      o.up.set(0, 0, 1), o.lookAt(new l(0, 1, 0)), this.add(o);
      var a = new me(90, 1, e, t);
      a.up.set(0, 0, -1), a.lookAt(new l(0, -1, 0)), this.add(a);
      var s = new me(90, 1, e, t);
      s.up.set(0, -1, 0), s.lookAt(new l(0, 0, 1)), this.add(s);
      var u = new me(90, 1, e, t);
      u.up.set(0, -1, 0), u.lookAt(new l(0, 0, -1)), this.add(u);
      var h = { format: Ya, magFilter: Oa, minFilter: Oa };
      (this.renderTarget = new c(n, n, h)),
        (this.renderTarget.texture.name = "CubeCamera"),
        (this.update = function (e, t) {
          null === this.parent && this.updateMatrixWorld();
          var n = this.renderTarget,
            c = n.texture.generateMipmaps;
          (n.texture.generateMipmaps = !1),
            (n.activeCubeFace = 0),
            e.render(t, r, n),
            (n.activeCubeFace = 1),
            e.render(t, i, n),
            (n.activeCubeFace = 2),
            e.render(t, o, n),
            (n.activeCubeFace = 3),
            e.render(t, a, n),
            (n.activeCubeFace = 4),
            e.render(t, s, n),
            (n.texture.generateMipmaps = c),
            (n.activeCubeFace = 5),
            e.render(t, u, n),
            e.setRenderTarget(null);
        }),
        (this.clear = function (e, t, n, r) {
          for (var i = this.renderTarget, o = 0; o < 6; o++)
            (i.activeCubeFace = o), e.setRenderTarget(i), e.clear(t, n, r);
          e.setRenderTarget(null);
        });
    }
    function qr() {
      pe.call(this),
        (this.type = "AudioListener"),
        (this.context = uc.getContext()),
        (this.gain = this.context.createGain()),
        this.gain.connect(this.context.destination),
        (this.filter = null);
    }
    function Xr(e) {
      pe.call(this),
        (this.type = "Audio"),
        (this.context = e.context),
        (this.gain = this.context.createGain()),
        this.gain.connect(e.getInput()),
        (this.autoplay = !1),
        (this.buffer = null),
        (this.loop = !1),
        (this.startTime = 0),
        (this.playbackRate = 1),
        (this.isPlaying = !1),
        (this.hasPlaybackControl = !0),
        (this.sourceType = "empty"),
        (this.filters = []);
    }
    function Yr(e) {
      Xr.call(this, e),
        (this.panner = this.context.createPanner()),
        this.panner.connect(this.gain);
    }
    function Zr(e, t) {
      (this.analyser = e.context.createAnalyser()),
        (this.analyser.fftSize = void 0 !== t ? t : 2048),
        (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
        e.getOutput().connect(this.analyser);
    }
    function Kr(e, t, n) {
      (this.binding = e), (this.valueSize = n);
      var r,
        i = Float64Array;
      switch (t) {
        case "quaternion":
          r = this._slerp;
          break;
        case "string":
        case "bool":
          (i = Array), (r = this._select);
          break;
        default:
          r = this._lerp;
      }
      (this.buffer = new i(4 * n)),
        (this._mixBufferRegion = r),
        (this.cumulativeWeight = 0),
        (this.useCount = 0),
        (this.referenceCount = 0);
    }
    function Jr(e, t, n) {
      var r = n || Qr.parseTrackName(t);
      (this._targetGroup = e), (this._bindings = e.subscribe_(t, r));
    }
    function Qr(e, t, n) {
      (this.path = t),
        (this.parsedPath = n || Qr.parseTrackName(t)),
        (this.node = Qr.findNode(e, this.parsedPath.nodeName) || e),
        (this.rootNode = e);
    }
    function $r(e) {
      (this.uuid = Os.generateUUID()),
        (this._objects = Array.prototype.slice.call(arguments)),
        (this.nCachedObjects_ = 0);
      var t = {};
      this._indicesByUUID = t;
      for (var n = 0, r = arguments.length; n !== r; ++n)
        t[arguments[n].uuid] = n;
      (this._paths = []),
        (this._parsedPaths = []),
        (this._bindings = []),
        (this._bindingsIndicesByPath = {});
      var i = this;
      this.stats = {
        objects: {
          get total() {
            return i._objects.length;
          },
          get inUse() {
            return this.total - i.nCachedObjects_;
          },
        },
        get bindingsPerObject() {
          return i._bindings.length;
        },
      };
    }
    function ei(e, t, n) {
      (this._mixer = e), (this._clip = t), (this._localRoot = n || null);
      for (
        var r = t.tracks,
          i = r.length,
          o = new Array(i),
          a = { endingStart: vs, endingEnd: vs },
          s = 0;
        s !== i;
        ++s
      ) {
        var c = r[s].createInterpolant(null);
        (o[s] = c), (c.settings = a);
      }
      (this._interpolantSettings = a),
        (this._interpolants = o),
        (this._propertyBindings = new Array(i)),
        (this._cacheIndex = null),
        (this._byClipCacheIndex = null),
        (this._timeScaleInterpolant = null),
        (this._weightInterpolant = null),
        (this.loop = hs),
        (this._loopCount = -1),
        (this._startTime = null),
        (this.time = 0),
        (this.timeScale = 1),
        (this._effectiveTimeScale = 1),
        (this.weight = 1),
        (this._effectiveWeight = 1),
        (this.repetitions = 1 / 0),
        (this.paused = !1),
        (this.enabled = !0),
        (this.clampWhenFinished = !1),
        (this.zeroSlopeAtStart = !0),
        (this.zeroSlopeAtEnd = !0);
    }
    function ti(e) {
      (this._root = e),
        this._initMemoryManager(),
        (this._accuIndex = 0),
        (this.time = 0),
        (this.timeScale = 1);
    }
    function ni(e) {
      "string" == typeof e &&
        (console.warn("THREE.Uniform: Type parameter is no longer needed."),
        (e = arguments[1])),
        (this.value = e);
    }
    function ri() {
      Pe.call(this),
        (this.type = "InstancedBufferGeometry"),
        (this.maxInstancedCount = void 0);
    }
    function ii(e, t, n, r) {
      (this.uuid = Os.generateUUID()),
        (this.data = e),
        (this.itemSize = t),
        (this.offset = n),
        (this.normalized = !0 === r);
    }
    function oi(e, t) {
      (this.uuid = Os.generateUUID()),
        (this.array = e),
        (this.stride = t),
        (this.count = void 0 !== e ? e.length / t : 0),
        (this.dynamic = !1),
        (this.updateRange = { offset: 0, count: -1 }),
        (this.onUploadCallback = function () {}),
        (this.version = 0);
    }
    function ai(e, t, n) {
      oi.call(this, e, t), (this.meshPerAttribute = n || 1);
    }
    function si(e, t, n) {
      _e.call(this, e, t), (this.meshPerAttribute = n || 1);
    }
    function ci(e, t, n, r) {
      (this.ray = new ke(e, t)),
        (this.near = n || 0),
        (this.far = r || 1 / 0),
        (this.params = {
          Mesh: {},
          Line: {},
          LOD: {},
          Points: { threshold: 1 },
          Sprite: {},
        }),
        Object.defineProperties(this.params, {
          PointCloud: {
            get: function () {
              return (
                console.warn(
                  "THREE.Raycaster: params.PointCloud has been renamed to params.Points."
                ),
                this.Points
              );
            },
          },
        });
    }
    function ui(e, t) {
      return e.distance - t.distance;
    }
    function li(e, t, n, r) {
      if (!1 !== e.visible && (e.raycast(t, n), !0 === r))
        for (var i = e.children, o = 0, a = i.length; o < a; o++)
          li(i[o], t, n, !0);
    }
    function hi(e) {
      (this.autoStart = void 0 === e || e),
        (this.startTime = 0),
        (this.oldTime = 0),
        (this.elapsedTime = 0),
        (this.running = !1);
    }
    function pi(e, t, n) {
      return (
        (this.radius = void 0 !== e ? e : 1),
        (this.phi = void 0 !== t ? t : 0),
        (this.theta = void 0 !== n ? n : 0),
        this
      );
    }
    function di(e, t, n) {
      return (
        (this.radius = void 0 !== e ? e : 1),
        (this.theta = void 0 !== t ? t : 0),
        (this.y = void 0 !== n ? n : 0),
        this
      );
    }
    function fi(e) {
      pe.call(this), (this.material = e), (this.render = function (e) {});
    }
    function mi(e, t, n, r) {
      (this.object = e), (this.size = void 0 !== t ? t : 1);
      var i = void 0 !== n ? n : 16711680,
        o = void 0 !== r ? r : 1,
        a = 0,
        s = this.object.geometry;
      s && s.isGeometry
        ? (a = 3 * s.faces.length)
        : s && s.isBufferGeometry && (a = s.attributes.normal.count);
      var c = new Pe(),
        u = new Ne(2 * a * 3, 3);
      c.addAttribute("position", u),
        kt.call(this, c, new It({ color: i, linewidth: o })),
        (this.matrixAutoUpdate = !1),
        this.update();
    }
    function vi(e, t) {
      pe.call(this),
        (this.light = e),
        this.light.updateMatrixWorld(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.color = t);
      for (
        var n = new Pe(),
          r = [
            0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0,
            1, 1, 0, 0, 0, 0, -1, 1,
          ],
          i = 0,
          o = 1;
        i < 32;
        i++, o++
      ) {
        var a = (i / 32) * Math.PI * 2,
          s = (o / 32) * Math.PI * 2;
        r.push(Math.cos(a), Math.sin(a), 1, Math.cos(s), Math.sin(s), 1);
      }
      n.addAttribute("position", new Ne(r, 3));
      var c = new It({ fog: !1 });
      (this.cone = new kt(n, c)), this.add(this.cone), this.update();
    }
    function gi(e) {
      var t = [];
      e && e.isBone && t.push(e);
      for (var n = 0; n < e.children.length; n++)
        t.push.apply(t, gi(e.children[n]));
      return t;
    }
    function yi(e) {
      for (
        var t = gi(e),
          n = new Pe(),
          r = [],
          i = [],
          o = new Y(0, 0, 1),
          a = new Y(0, 1, 0),
          s = 0;
        s < t.length;
        s++
      ) {
        var c = t[s];
        c.parent &&
          c.parent.isBone &&
          (r.push(0, 0, 0),
          r.push(0, 0, 0),
          i.push(o.r, o.g, o.b),
          i.push(a.r, a.g, a.b));
      }
      n.addAttribute("position", new Ne(r, 3)),
        n.addAttribute("color", new Ne(i, 3));
      var u = new It({
        vertexColors: Do,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0,
      });
      kt.call(this, n, u),
        (this.root = e),
        (this.bones = t),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        this.onBeforeRender();
    }
    function _i(e, t, n) {
      (this.light = e), this.light.updateMatrixWorld(), (this.color = n);
      var r = new vn(t, 4, 2),
        i = new Ue({ wireframe: !0, fog: !1 });
      Be.call(this, r, i),
        (this.matrix = this.light.matrixWorld),
        (this.matrixAutoUpdate = !1),
        this.update();
    }
    function bi(e, t) {
      pe.call(this),
        (this.light = e),
        this.light.updateMatrixWorld(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.color = t);
      var n = new It({ fog: !1 }),
        r = new Pe();
      r.addAttribute("position", new _e(new Float32Array(15), 3)),
        (this.line = new Ut(r, n)),
        this.add(this.line),
        this.update();
    }
    function xi(e, t, n) {
      pe.call(this),
        (this.light = e),
        this.light.updateMatrixWorld(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.color = n);
      var r = new $t(t);
      r.rotateY(0.5 * Math.PI),
        (this.material = new Ue({ wireframe: !0, fog: !1 })),
        void 0 === this.color && (this.material.vertexColors = Do);
      var i = r.getAttribute("position"),
        o = new Float32Array(3 * i.count);
      r.addAttribute("color", new _e(o, 3)),
        this.add(new Be(r, this.material)),
        this.update();
    }
    function Ei(e, t, n, r) {
      (e = e || 10),
        (t = t || 10),
        (n = new Y(void 0 !== n ? n : 4473924)),
        (r = new Y(void 0 !== r ? r : 8947848));
      for (
        var i = t / 2,
          o = e / t,
          a = e / 2,
          s = [],
          c = [],
          u = 0,
          l = 0,
          h = -a;
        u <= t;
        u++, h += o
      ) {
        s.push(-a, 0, h, a, 0, h), s.push(h, 0, -a, h, 0, a);
        var p = u === i ? n : r;
        p.toArray(c, l),
          (l += 3),
          p.toArray(c, l),
          (l += 3),
          p.toArray(c, l),
          (l += 3),
          p.toArray(c, l),
          (l += 3);
      }
      var d = new Pe();
      d.addAttribute("position", new Ne(s, 3)),
        d.addAttribute("color", new Ne(c, 3));
      var f = new It({ vertexColors: Do });
      kt.call(this, d, f);
    }
    function wi(e, t, n, r, i, o) {
      (e = e || 10),
        (t = t || 16),
        (n = n || 8),
        (r = r || 64),
        (i = new Y(void 0 !== i ? i : 4473924)),
        (o = new Y(void 0 !== o ? o : 8947848));
      var a,
        s,
        c,
        u,
        l,
        h,
        p,
        d = [],
        f = [];
      for (u = 0; u <= t; u++)
        (c = (u / t) * (2 * Math.PI)),
          (a = Math.sin(c) * e),
          (s = Math.cos(c) * e),
          d.push(0, 0, 0),
          d.push(a, 0, s),
          (p = 1 & u ? i : o),
          f.push(p.r, p.g, p.b),
          f.push(p.r, p.g, p.b);
      for (u = 0; u <= n; u++)
        for (p = 1 & u ? i : o, h = e - (e / n) * u, l = 0; l < r; l++)
          (c = (l / r) * (2 * Math.PI)),
            (a = Math.sin(c) * h),
            (s = Math.cos(c) * h),
            d.push(a, 0, s),
            f.push(p.r, p.g, p.b),
            (c = ((l + 1) / r) * (2 * Math.PI)),
            (a = Math.sin(c) * h),
            (s = Math.cos(c) * h),
            d.push(a, 0, s),
            f.push(p.r, p.g, p.b);
      var m = new Pe();
      m.addAttribute("position", new Ne(d, 3)),
        m.addAttribute("color", new Ne(f, 3));
      var v = new It({ vertexColors: Do });
      kt.call(this, m, v);
    }
    function Mi(e, t, n, r) {
      (this.object = e), (this.size = void 0 !== t ? t : 1);
      var i = void 0 !== n ? n : 16776960,
        o = void 0 !== r ? r : 1,
        a = 0,
        s = this.object.geometry;
      s && s.isGeometry
        ? (a = s.faces.length)
        : console.warn(
            "THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead."
          );
      var c = new Pe(),
        u = new Ne(2 * a * 3, 3);
      c.addAttribute("position", u),
        kt.call(this, c, new It({ color: i, linewidth: o })),
        (this.matrixAutoUpdate = !1),
        this.update();
    }
    function Ti(e, t, n) {
      pe.call(this),
        (this.light = e),
        this.light.updateMatrixWorld(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.color = n),
        void 0 === t && (t = 1);
      var r = new Pe();
      r.addAttribute(
        "position",
        new Ne([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3)
      );
      var i = new It({ fog: !1 });
      (this.lightPlane = new Ut(r, i)),
        this.add(this.lightPlane),
        (r = new Pe()),
        r.addAttribute("position", new Ne([0, 0, 0, 0, 0, 1], 3)),
        (this.targetLine = new Ut(r, i)),
        this.add(this.targetLine),
        this.update();
    }
    function Si(e) {
      function t(e, t, r) {
        n(e, r), n(t, r);
      }
      function n(e, t) {
        o.push(0, 0, 0),
          a.push(t.r, t.g, t.b),
          void 0 === s[e] && (s[e] = []),
          s[e].push(o.length / 3 - 1);
      }
      var r = new Pe(),
        i = new It({ color: 16777215, vertexColors: Oo }),
        o = [],
        a = [],
        s = {},
        c = new Y(16755200),
        u = new Y(16711680),
        l = new Y(43775),
        h = new Y(16777215),
        p = new Y(3355443);
      t("n1", "n2", c),
        t("n2", "n4", c),
        t("n4", "n3", c),
        t("n3", "n1", c),
        t("f1", "f2", c),
        t("f2", "f4", c),
        t("f4", "f3", c),
        t("f3", "f1", c),
        t("n1", "f1", c),
        t("n2", "f2", c),
        t("n3", "f3", c),
        t("n4", "f4", c),
        t("p", "n1", u),
        t("p", "n2", u),
        t("p", "n3", u),
        t("p", "n4", u),
        t("u1", "u2", l),
        t("u2", "u3", l),
        t("u3", "u1", l),
        t("c", "t", h),
        t("p", "c", p),
        t("cn1", "cn2", p),
        t("cn3", "cn4", p),
        t("cf1", "cf2", p),
        t("cf3", "cf4", p),
        r.addAttribute("position", new Ne(o, 3)),
        r.addAttribute("color", new Ne(a, 3)),
        kt.call(this, r, i),
        (this.camera = e),
        this.camera.updateProjectionMatrix &&
          this.camera.updateProjectionMatrix(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.pointMap = s),
        this.update();
    }
    function Ni(e, t) {
      (this.object = e), void 0 === t && (t = 16776960);
      var n = new Uint16Array([
          0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3,
          7,
        ]),
        r = new Float32Array(24),
        i = new Pe();
      i.setIndex(new _e(n, 1)),
        i.addAttribute("position", new _e(r, 3)),
        kt.call(this, i, new It({ color: t })),
        (this.matrixAutoUpdate = !1),
        this.update();
    }
    function Ci(e, t) {
      (this.type = "Box3Helper"), (this.box = e);
      var n = void 0 !== t ? t : 16776960,
        r = new Uint16Array([
          0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3,
          7,
        ]),
        i = [
          1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1,
          -1, 1, -1, -1,
        ],
        o = new Pe();
      o.setIndex(new _e(r, 1)),
        o.addAttribute("position", new Ne(i, 3)),
        kt.call(this, o, new It({ color: n })),
        this.geometry.computeBoundingSphere(),
        this.onBeforeRender();
    }
    function Ai(e, t, n) {
      (this.type = "PlaneHelper"),
        (this.plane = e),
        (this.size = void 0 === t ? 1 : t);
      var r = void 0 !== n ? n : 16776960,
        i = [
          1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1,
          1, 1, 1, 0, 0, 1, 0, 0, 0,
        ],
        o = new Pe();
      o.addAttribute("position", new Ne(i, 3)),
        o.computeBoundingSphere(),
        Ut.call(this, o, new It({ color: r }));
      var a = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],
        s = new Pe();
      s.addAttribute("position", new Ne(a, 3)),
        s.computeBoundingSphere(),
        this.add(
          new Be(
            s,
            new Ue({ color: r, opacity: 0.2, transparent: !0, depthWrite: !1 })
          )
        ),
        this.onBeforeRender();
    }
    function Ri(e, t, n, r, i, o) {
      pe.call(this),
        void 0 === r && (r = 16776960),
        void 0 === n && (n = 1),
        void 0 === i && (i = 0.2 * n),
        void 0 === o && (o = 0.2 * i),
        void 0 === lc &&
          ((lc = new Pe()),
          lc.addAttribute("position", new Ne([0, 0, 0, 0, 1, 0], 3)),
          (hc = new Tn(0, 0.5, 1, 5, 1)),
          hc.translate(0, -0.5, 0)),
        this.position.copy(t),
        (this.line = new Ut(lc, new It({ color: r }))),
        (this.line.matrixAutoUpdate = !1),
        this.add(this.line),
        (this.cone = new Be(hc, new Ue({ color: r }))),
        (this.cone.matrixAutoUpdate = !1),
        this.add(this.cone),
        this.setDirection(e),
        this.setLength(n, i, o);
    }
    function Pi(e) {
      e = e || 1;
      var t = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
        n = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
        r = new Pe();
      r.addAttribute("position", new Ne(t, 3)),
        r.addAttribute("color", new Ne(n, 3));
      var i = new It({ vertexColors: Do });
      kt.call(this, r, i);
    }
    function Oi() {
      function e(e, o, a, s) {
        (t = e),
          (n = a),
          (r = -3 * e + 3 * o - 2 * a - s),
          (i = 2 * e - 2 * o + a + s);
      }
      var t = 0,
        n = 0,
        r = 0,
        i = 0;
      return {
        initCatmullRom: function (t, n, r, i, o) {
          e(n, r, o * (r - t), o * (i - n));
        },
        initNonuniformCatmullRom: function (t, n, r, i, o, a, s) {
          var c = (n - t) / o - (r - t) / (o + a) + (r - n) / a,
            u = (r - n) / a - (i - n) / (a + s) + (i - r) / s;
          (c *= a), (u *= a), e(n, r, c, u);
        },
        calc: function (e) {
          var o = e * e;
          return t + n * e + r * o + i * (o * e);
        },
      };
    }
    function Di(e) {
      Pr.call(this),
        e.length < 2 &&
          console.warn(
            "THREE.CatmullRomCurve3: Points array needs at least two entries."
          ),
        (this.points = e || []),
        (this.closed = !1);
    }
    function Li(e, t, n, r) {
      Pr.call(this), (this.v0 = e), (this.v1 = t), (this.v2 = n), (this.v3 = r);
    }
    function Ii(e, t, n) {
      Pr.call(this), (this.v0 = e), (this.v1 = t), (this.v2 = n);
    }
    function Ui(e, t) {
      Pr.call(this), (this.v1 = e), (this.v2 = t);
    }
    function ki(e, t, n, r, i, o) {
      Lr.call(this, e, t, n, n, r, i, o);
    }
    function Fi(e, t, n, r, i, o, a) {
      return (
        console.warn(
          "THREE.Face4 has been removed. A THREE.Face3 will be created instead."
        ),
        new ve(e, t, n, i, o, a)
      );
    }
    function Vi(e) {
      return (
        console.warn(
          "THREE.MeshFaceMaterial has been removed. Use an Array instead."
        ),
        e
      );
    }
    function Bi(e) {
      return (
        void 0 === e && (e = []),
        console.warn(
          "THREE.MultiMaterial has been removed. Use an Array instead."
        ),
        (e.isMultiMaterial = !0),
        (e.materials = e),
        (e.clone = function () {
          return e.slice();
        }),
        e
      );
    }
    function zi(e, t) {
      return (
        console.warn("THREE.PointCloud has been renamed to THREE.Points."),
        new Bt(e, t)
      );
    }
    function Hi(e) {
      return (
        console.warn("THREE.Particle has been renamed to THREE.Sprite."),
        new Rt(e)
      );
    }
    function ji(e, t) {
      return (
        console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
        new Bt(e, t)
      );
    }
    function Gi(e) {
      return (
        console.warn(
          "THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."
        ),
        new Vt(e)
      );
    }
    function Wi(e) {
      return (
        console.warn(
          "THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."
        ),
        new Vt(e)
      );
    }
    function qi(e) {
      return (
        console.warn(
          "THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."
        ),
        new Vt(e)
      );
    }
    function Xi(e, t, n) {
      return (
        console.warn(
          "THREE.Vertex has been removed. Use THREE.Vector3 instead."
        ),
        new l(e, t, n)
      );
    }
    function Yi(e, t) {
      return (
        console.warn(
          "THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."
        ),
        new _e(e, t).setDynamic(!0)
      );
    }
    function Zi(e, t) {
      return (
        console.warn(
          "THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."
        ),
        new be(e, t)
      );
    }
    function Ki(e, t) {
      return (
        console.warn(
          "THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."
        ),
        new xe(e, t)
      );
    }
    function Ji(e, t) {
      return (
        console.warn(
          "THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."
        ),
        new Ee(e, t)
      );
    }
    function Qi(e, t) {
      return (
        console.warn(
          "THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."
        ),
        new we(e, t)
      );
    }
    function $i(e, t) {
      return (
        console.warn(
          "THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."
        ),
        new Me(e, t)
      );
    }
    function eo(e, t) {
      return (
        console.warn(
          "THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."
        ),
        new Te(e, t)
      );
    }
    function to(e, t) {
      return (
        console.warn(
          "THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."
        ),
        new Se(e, t)
      );
    }
    function no(e, t) {
      return (
        console.warn(
          "THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."
        ),
        new Ne(e, t)
      );
    }
    function ro(e, t) {
      return (
        console.warn(
          "THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."
        ),
        new Ce(e, t)
      );
    }
    function io(e) {
      console.warn(
        "THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."
      ),
        Di.call(this, e),
        (this.type = "catmullrom"),
        (this.closed = !0);
    }
    function oo(e) {
      console.warn(
        "THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."
      ),
        Di.call(this, e),
        (this.type = "catmullrom");
    }
    function ao(e) {
      console.warn(
        "THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."
      ),
        Di.call(this, e),
        (this.type = "catmullrom");
    }
    function so(e, t) {
      return (
        console.warn(
          "THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."
        ),
        new Ni(e, t)
      );
    }
    function co(e, t) {
      return (
        console.warn(
          "THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."
        ),
        new kt(
          new wn(e.geometry),
          new It({ color: void 0 !== t ? t : 16777215 })
        )
      );
    }
    function uo(e, t) {
      return (
        console.warn(
          "THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."
        ),
        new kt(
          new Wt(e.geometry),
          new It({ color: void 0 !== t ? t : 16777215 })
        )
      );
    }
    function lo(e) {
      return (
        console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),
        new Bn(e)
      );
    }
    function ho(e) {
      return (
        console.warn(
          "THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."
        ),
        new Hn(e)
      );
    }
    function po() {
      console.error(
        "THREE.Projector has been moved to /examples/js/renderers/Projector.js."
      ),
        (this.projectVector = function (e, t) {
          console.warn(
            "THREE.Projector: .projectVector() is now vector.project()."
          ),
            e.project(t);
        }),
        (this.unprojectVector = function (e, t) {
          console.warn(
            "THREE.Projector: .unprojectVector() is now vector.unproject()."
          ),
            e.unproject(t);
        }),
        (this.pickingRay = function () {
          console.error(
            "THREE.Projector: .pickingRay() is now raycaster.setFromCamera()."
          );
        });
    }
    function fo() {
      console.error(
        "THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"
      ),
        (this.domElement = document.createElementNS(
          "http://www.w3.org/1999/xhtml",
          "canvas"
        )),
        (this.clear = function () {}),
        (this.render = function () {}),
        (this.setClearColor = function () {}),
        (this.setSize = function () {});
    }
    Object.defineProperty(t, "__esModule", { value: !0 }),
      n.d(t, "WebGLRenderTargetCube", function () {
        return c;
      }),
      n.d(t, "WebGLRenderTarget", function () {
        return s;
      }),
      n.d(t, "WebGLRenderer", function () {
        return Mt;
      }),
      n.d(t, "ShaderLib", function () {
        return Ws;
      }),
      n.d(t, "UniformsLib", function () {
        return Hs;
      }),
      n.d(t, "UniformsUtils", function () {
        return js;
      }),
      n.d(t, "ShaderChunk", function () {
        return Gs;
      }),
      n.d(t, "FogExp2", function () {
        return Tt;
      }),
      n.d(t, "Fog", function () {
        return St;
      }),
      n.d(t, "Scene", function () {
        return Nt;
      }),
      n.d(t, "LensFlare", function () {
        return Ct;
      }),
      n.d(t, "Sprite", function () {
        return Rt;
      }),
      n.d(t, "LOD", function () {
        return Pt;
      }),
      n.d(t, "SkinnedMesh", function () {
        return Lt;
      }),
      n.d(t, "Skeleton", function () {
        return Ot;
      }),
      n.d(t, "Bone", function () {
        return Dt;
      }),
      n.d(t, "Mesh", function () {
        return Be;
      }),
      n.d(t, "LineSegments", function () {
        return kt;
      }),
      n.d(t, "LineLoop", function () {
        return Ft;
      }),
      n.d(t, "Line", function () {
        return Ut;
      }),
      n.d(t, "Points", function () {
        return Bt;
      }),
      n.d(t, "Group", function () {
        return zt;
      }),
      n.d(t, "VideoTexture", function () {
        return Ht;
      }),
      n.d(t, "DataTexture", function () {
        return p;
      }),
      n.d(t, "CompressedTexture", function () {
        return jt;
      }),
      n.d(t, "CubeTexture", function () {
        return d;
      }),
      n.d(t, "CanvasTexture", function () {
        return J;
      }),
      n.d(t, "DepthTexture", function () {
        return Gt;
      }),
      n.d(t, "Texture", function () {
        return o;
      }),
      n.d(t, "CompressedTextureLoader", function () {
        return zn;
      }),
      n.d(t, "DataTextureLoader", function () {
        return Hn;
      }),
      n.d(t, "CubeTextureLoader", function () {
        return Gn;
      }),
      n.d(t, "TextureLoader", function () {
        return Wn;
      }),
      n.d(t, "ObjectLoader", function () {
        return br;
      }),
      n.d(t, "MaterialLoader", function () {
        return vr;
      }),
      n.d(t, "BufferGeometryLoader", function () {
        return gr;
      }),
      n.d(t, "DefaultLoadingManager", function () {
        return ec;
      }),
      n.d(t, "LoadingManager", function () {
        return Vn;
      }),
      n.d(t, "JSONLoader", function () {
        return _r;
      }),
      n.d(t, "ImageLoader", function () {
        return jn;
      }),
      n.d(t, "FontLoader", function () {
        return Hr;
      }),
      n.d(t, "FileLoader", function () {
        return Bn;
      }),
      n.d(t, "Loader", function () {
        return yr;
      }),
      n.d(t, "Cache", function () {
        return $s;
      }),
      n.d(t, "AudioLoader", function () {
        return jr;
      }),
      n.d(t, "SpotLightShadow", function () {
        return Zn;
      }),
      n.d(t, "SpotLight", function () {
        return Kn;
      }),
      n.d(t, "PointLight", function () {
        return Jn;
      }),
      n.d(t, "RectAreaLight", function () {
        return tr;
      }),
      n.d(t, "HemisphereLight", function () {
        return Xn;
      }),
      n.d(t, "DirectionalLightShadow", function () {
        return Qn;
      }),
      n.d(t, "DirectionalLight", function () {
        return $n;
      }),
      n.d(t, "AmbientLight", function () {
        return er;
      }),
      n.d(t, "LightShadow", function () {
        return Yn;
      }),
      n.d(t, "Light", function () {
        return qn;
      }),
      n.d(t, "StereoCamera", function () {
        return Gr;
      }),
      n.d(t, "PerspectiveCamera", function () {
        return me;
      }),
      n.d(t, "OrthographicCamera", function () {
        return fe;
      }),
      n.d(t, "CubeCamera", function () {
        return Wr;
      }),
      n.d(t, "ArrayCamera", function () {
        return _t;
      }),
      n.d(t, "Camera", function () {
        return de;
      }),
      n.d(t, "AudioListener", function () {
        return qr;
      }),
      n.d(t, "PositionalAudio", function () {
        return Yr;
      }),
      n.d(t, "AudioContext", function () {
        return uc;
      }),
      n.d(t, "AudioAnalyser", function () {
        return Zr;
      }),
      n.d(t, "Audio", function () {
        return Xr;
      }),
      n.d(t, "VectorKeyframeTrack", function () {
        return sr;
      }),
      n.d(t, "StringKeyframeTrack", function () {
        return hr;
      }),
      n.d(t, "QuaternionKeyframeTrack", function () {
        return ur;
      }),
      n.d(t, "NumberKeyframeTrack", function () {
        return lr;
      }),
      n.d(t, "ColorKeyframeTrack", function () {
        return dr;
      }),
      n.d(t, "BooleanKeyframeTrack", function () {
        return pr;
      }),
      n.d(t, "PropertyMixer", function () {
        return Kr;
      }),
      n.d(t, "PropertyBinding", function () {
        return Qr;
      }),
      n.d(t, "KeyframeTrack", function () {
        return fr;
      }),
      n.d(t, "AnimationUtils", function () {
        return tc;
      }),
      n.d(t, "AnimationObjectGroup", function () {
        return $r;
      }),
      n.d(t, "AnimationMixer", function () {
        return ti;
      }),
      n.d(t, "AnimationClip", function () {
        return mr;
      }),
      n.d(t, "Uniform", function () {
        return ni;
      }),
      n.d(t, "InstancedBufferGeometry", function () {
        return ri;
      }),
      n.d(t, "BufferGeometry", function () {
        return Pe;
      }),
      n.d(t, "GeometryIdCount", function () {
        return ge;
      }),
      n.d(t, "Geometry", function () {
        return ye;
      }),
      n.d(t, "InterleavedBufferAttribute", function () {
        return ii;
      }),
      n.d(t, "InstancedInterleavedBuffer", function () {
        return ai;
      }),
      n.d(t, "InterleavedBuffer", function () {
        return oi;
      }),
      n.d(t, "InstancedBufferAttribute", function () {
        return si;
      }),
      n.d(t, "Face3", function () {
        return ve;
      }),
      n.d(t, "Object3D", function () {
        return pe;
      }),
      n.d(t, "Raycaster", function () {
        return ci;
      }),
      n.d(t, "Layers", function () {
        return he;
      }),
      n.d(t, "EventDispatcher", function () {
        return r;
      }),
      n.d(t, "Clock", function () {
        return hi;
      }),
      n.d(t, "QuaternionLinearInterpolant", function () {
        return cr;
      }),
      n.d(t, "LinearInterpolant", function () {
        return ir;
      }),
      n.d(t, "DiscreteInterpolant", function () {
        return or;
      }),
      n.d(t, "CubicInterpolant", function () {
        return rr;
      }),
      n.d(t, "Interpolant", function () {
        return nr;
      }),
      n.d(t, "Triangle", function () {
        return Ve;
      }),
      n.d(t, "Math", function () {
        return Os;
      }),
      n.d(t, "Spherical", function () {
        return pi;
      }),
      n.d(t, "Cylindrical", function () {
        return di;
      }),
      n.d(t, "Plane", function () {
        return ae;
      }),
      n.d(t, "Frustum", function () {
        return se;
      }),
      n.d(t, "Sphere", function () {
        return ie;
      }),
      n.d(t, "Ray", function () {
        return ke;
      }),
      n.d(t, "Matrix4", function () {
        return h;
      }),
      n.d(t, "Matrix3", function () {
        return oe;
      }),
      n.d(t, "Box3", function () {
        return re;
      }),
      n.d(t, "Box2", function () {
        return Z;
      }),
      n.d(t, "Line3", function () {
        return Fe;
      }),
      n.d(t, "Euler", function () {
        return le;
      }),
      n.d(t, "Vector4", function () {
        return a;
      }),
      n.d(t, "Vector3", function () {
        return l;
      }),
      n.d(t, "Vector2", function () {
        return i;
      }),
      n.d(t, "Quaternion", function () {
        return u;
      }),
      n.d(t, "Color", function () {
        return Y;
      }),
      n.d(t, "ImmediateRenderObject", function () {
        return fi;
      }),
      n.d(t, "VertexNormalsHelper", function () {
        return mi;
      }),
      n.d(t, "SpotLightHelper", function () {
        return vi;
      }),
      n.d(t, "SkeletonHelper", function () {
        return yi;
      }),
      n.d(t, "PointLightHelper", function () {
        return _i;
      }),
      n.d(t, "RectAreaLightHelper", function () {
        return bi;
      }),
      n.d(t, "HemisphereLightHelper", function () {
        return xi;
      }),
      n.d(t, "GridHelper", function () {
        return Ei;
      }),
      n.d(t, "PolarGridHelper", function () {
        return wi;
      }),
      n.d(t, "FaceNormalsHelper", function () {
        return Mi;
      }),
      n.d(t, "DirectionalLightHelper", function () {
        return Ti;
      }),
      n.d(t, "CameraHelper", function () {
        return Si;
      }),
      n.d(t, "BoxHelper", function () {
        return Ni;
      }),
      n.d(t, "Box3Helper", function () {
        return Ci;
      }),
      n.d(t, "PlaneHelper", function () {
        return Ai;
      }),
      n.d(t, "ArrowHelper", function () {
        return Ri;
      }),
      n.d(t, "AxisHelper", function () {
        return Pi;
      }),
      n.d(t, "CatmullRomCurve3", function () {
        return Di;
      }),
      n.d(t, "CubicBezierCurve3", function () {
        return Li;
      }),
      n.d(t, "QuadraticBezierCurve3", function () {
        return Ii;
      }),
      n.d(t, "LineCurve3", function () {
        return Ui;
      }),
      n.d(t, "ArcCurve", function () {
        return ki;
      }),
      n.d(t, "EllipseCurve", function () {
        return Lr;
      }),
      n.d(t, "SplineCurve", function () {
        return Ir;
      }),
      n.d(t, "CubicBezierCurve", function () {
        return Ur;
      }),
      n.d(t, "QuadraticBezierCurve", function () {
        return kr;
      }),
      n.d(t, "LineCurve", function () {
        return Or;
      }),
      n.d(t, "Shape", function () {
        return Vr;
      }),
      n.d(t, "Path", function () {
        return Fr;
      }),
      n.d(t, "ShapePath", function () {
        return Br;
      }),
      n.d(t, "Font", function () {
        return zr;
      }),
      n.d(t, "CurvePath", function () {
        return Dr;
      }),
      n.d(t, "Curve", function () {
        return Pr;
      }),
      n.d(t, "ShapeUtils", function () {
        return Ks;
      }),
      n.d(t, "SceneUtils", function () {
        return vc;
      }),
      n.d(t, "WebGLUtils", function () {
        return wt;
      }),
      n.d(t, "WireframeGeometry", function () {
        return Wt;
      }),
      n.d(t, "ParametricGeometry", function () {
        return qt;
      }),
      n.d(t, "ParametricBufferGeometry", function () {
        return Xt;
      }),
      n.d(t, "TetrahedronGeometry", function () {
        return Kt;
      }),
      n.d(t, "TetrahedronBufferGeometry", function () {
        return Jt;
      }),
      n.d(t, "OctahedronGeometry", function () {
        return Qt;
      }),
      n.d(t, "OctahedronBufferGeometry", function () {
        return $t;
      }),
      n.d(t, "IcosahedronGeometry", function () {
        return en;
      }),
      n.d(t, "IcosahedronBufferGeometry", function () {
        return tn;
      }),
      n.d(t, "DodecahedronGeometry", function () {
        return nn;
      }),
      n.d(t, "DodecahedronBufferGeometry", function () {
        return rn;
      }),
      n.d(t, "PolyhedronGeometry", function () {
        return Yt;
      }),
      n.d(t, "PolyhedronBufferGeometry", function () {
        return Zt;
      }),
      n.d(t, "TubeGeometry", function () {
        return on;
      }),
      n.d(t, "TubeBufferGeometry", function () {
        return an;
      }),
      n.d(t, "TorusKnotGeometry", function () {
        return sn;
      }),
      n.d(t, "TorusKnotBufferGeometry", function () {
        return cn;
      }),
      n.d(t, "TorusGeometry", function () {
        return un;
      }),
      n.d(t, "TorusBufferGeometry", function () {
        return ln;
      }),
      n.d(t, "TextGeometry", function () {
        return dn;
      }),
      n.d(t, "TextBufferGeometry", function () {
        return fn;
      }),
      n.d(t, "SphereGeometry", function () {
        return mn;
      }),
      n.d(t, "SphereBufferGeometry", function () {
        return vn;
      }),
      n.d(t, "RingGeometry", function () {
        return gn;
      }),
      n.d(t, "RingBufferGeometry", function () {
        return yn;
      }),
      n.d(t, "PlaneGeometry", function () {
        return Le;
      }),
      n.d(t, "PlaneBufferGeometry", function () {
        return Ie;
      }),
      n.d(t, "LatheGeometry", function () {
        return _n;
      }),
      n.d(t, "LatheBufferGeometry", function () {
        return bn;
      }),
      n.d(t, "ShapeGeometry", function () {
        return xn;
      }),
      n.d(t, "ShapeBufferGeometry", function () {
        return En;
      }),
      n.d(t, "ExtrudeGeometry", function () {
        return hn;
      }),
      n.d(t, "ExtrudeBufferGeometry", function () {
        return pn;
      }),
      n.d(t, "EdgesGeometry", function () {
        return wn;
      }),
      n.d(t, "ConeGeometry", function () {
        return Sn;
      }),
      n.d(t, "ConeBufferGeometry", function () {
        return Nn;
      }),
      n.d(t, "CylinderGeometry", function () {
        return Mn;
      }),
      n.d(t, "CylinderBufferGeometry", function () {
        return Tn;
      }),
      n.d(t, "CircleGeometry", function () {
        return Cn;
      }),
      n.d(t, "CircleBufferGeometry", function () {
        return An;
      }),
      n.d(t, "BoxGeometry", function () {
        return Oe;
      }),
      n.d(t, "BoxBufferGeometry", function () {
        return De;
      }),
      n.d(t, "ShadowMaterial", function () {
        return Rn;
      }),
      n.d(t, "SpriteMaterial", function () {
        return At;
      }),
      n.d(t, "RawShaderMaterial", function () {
        return Pn;
      });
    n.d(t, "ShaderMaterial", function () {
      return ee;
    }),
      n.d(t, "PointsMaterial", function () {
        return Vt;
      }),
      n.d(t, "MeshPhysicalMaterial", function () {
        return Dn;
      }),
      n.d(t, "MeshStandardMaterial", function () {
        return On;
      }),
      n.d(t, "MeshPhongMaterial", function () {
        return Ln;
      }),
      n.d(t, "MeshToonMaterial", function () {
        return In;
      }),
      n.d(t, "MeshNormalMaterial", function () {
        return Un;
      }),
      n.d(t, "MeshLambertMaterial", function () {
        return kn;
      }),
      n.d(t, "MeshDepthMaterial", function () {
        return te;
      }),
      n.d(t, "MeshDistanceMaterial", function () {
        return ne;
      }),
      n.d(t, "MeshBasicMaterial", function () {
        return Ue;
      }),
      n.d(t, "LineDashedMaterial", function () {
        return Fn;
      }),
      n.d(t, "LineBasicMaterial", function () {
        return It;
      }),
      n.d(t, "Material", function () {
        return $;
      }),
      n.d(t, "Float64BufferAttribute", function () {
        return Ce;
      }),
      n.d(t, "Float32BufferAttribute", function () {
        return Ne;
      }),
      n.d(t, "Uint32BufferAttribute", function () {
        return Se;
      }),
      n.d(t, "Int32BufferAttribute", function () {
        return Te;
      }),
      n.d(t, "Uint16BufferAttribute", function () {
        return Me;
      }),
      n.d(t, "Int16BufferAttribute", function () {
        return we;
      }),
      n.d(t, "Uint8ClampedBufferAttribute", function () {
        return Ee;
      }),
      n.d(t, "Uint8BufferAttribute", function () {
        return xe;
      }),
      n.d(t, "Int8BufferAttribute", function () {
        return be;
      }),
      n.d(t, "BufferAttribute", function () {
        return _e;
      }),
      n.d(t, "REVISION", function () {
        return mo;
      }),
      n.d(t, "MOUSE", function () {
        return vo;
      }),
      n.d(t, "CullFaceNone", function () {
        return go;
      }),
      n.d(t, "CullFaceBack", function () {
        return yo;
      }),
      n.d(t, "CullFaceFront", function () {
        return _o;
      }),
      n.d(t, "CullFaceFrontBack", function () {
        return bo;
      }),
      n.d(t, "FrontFaceDirectionCW", function () {
        return xo;
      }),
      n.d(t, "FrontFaceDirectionCCW", function () {
        return Eo;
      }),
      n.d(t, "BasicShadowMap", function () {
        return wo;
      }),
      n.d(t, "PCFShadowMap", function () {
        return Mo;
      }),
      n.d(t, "PCFSoftShadowMap", function () {
        return To;
      }),
      n.d(t, "FrontSide", function () {
        return So;
      }),
      n.d(t, "BackSide", function () {
        return No;
      }),
      n.d(t, "DoubleSide", function () {
        return Co;
      }),
      n.d(t, "FlatShading", function () {
        return Ao;
      }),
      n.d(t, "SmoothShading", function () {
        return Ro;
      }),
      n.d(t, "NoColors", function () {
        return Po;
      }),
      n.d(t, "FaceColors", function () {
        return Oo;
      }),
      n.d(t, "VertexColors", function () {
        return Do;
      }),
      n.d(t, "NoBlending", function () {
        return Lo;
      }),
      n.d(t, "NormalBlending", function () {
        return Io;
      }),
      n.d(t, "AdditiveBlending", function () {
        return Uo;
      }),
      n.d(t, "SubtractiveBlending", function () {
        return ko;
      }),
      n.d(t, "MultiplyBlending", function () {
        return Fo;
      }),
      n.d(t, "CustomBlending", function () {
        return Vo;
      }),
      n.d(t, "AddEquation", function () {
        return Bo;
      }),
      n.d(t, "SubtractEquation", function () {
        return zo;
      }),
      n.d(t, "ReverseSubtractEquation", function () {
        return Ho;
      }),
      n.d(t, "MinEquation", function () {
        return jo;
      }),
      n.d(t, "MaxEquation", function () {
        return Go;
      }),
      n.d(t, "ZeroFactor", function () {
        return Wo;
      }),
      n.d(t, "OneFactor", function () {
        return qo;
      }),
      n.d(t, "SrcColorFactor", function () {
        return Xo;
      }),
      n.d(t, "OneMinusSrcColorFactor", function () {
        return Yo;
      }),
      n.d(t, "SrcAlphaFactor", function () {
        return Zo;
      }),
      n.d(t, "OneMinusSrcAlphaFactor", function () {
        return Ko;
      }),
      n.d(t, "DstAlphaFactor", function () {
        return Jo;
      }),
      n.d(t, "OneMinusDstAlphaFactor", function () {
        return Qo;
      }),
      n.d(t, "DstColorFactor", function () {
        return $o;
      }),
      n.d(t, "OneMinusDstColorFactor", function () {
        return ea;
      }),
      n.d(t, "SrcAlphaSaturateFactor", function () {
        return ta;
      }),
      n.d(t, "NeverDepth", function () {
        return na;
      }),
      n.d(t, "AlwaysDepth", function () {
        return ra;
      }),
      n.d(t, "LessDepth", function () {
        return ia;
      }),
      n.d(t, "LessEqualDepth", function () {
        return oa;
      }),
      n.d(t, "EqualDepth", function () {
        return aa;
      }),
      n.d(t, "GreaterEqualDepth", function () {
        return sa;
      }),
      n.d(t, "GreaterDepth", function () {
        return ca;
      }),
      n.d(t, "NotEqualDepth", function () {
        return ua;
      }),
      n.d(t, "MultiplyOperation", function () {
        return la;
      }),
      n.d(t, "MixOperation", function () {
        return ha;
      }),
      n.d(t, "AddOperation", function () {
        return pa;
      }),
      n.d(t, "NoToneMapping", function () {
        return da;
      }),
      n.d(t, "LinearToneMapping", function () {
        return fa;
      }),
      n.d(t, "ReinhardToneMapping", function () {
        return ma;
      }),
      n.d(t, "Uncharted2ToneMapping", function () {
        return va;
      }),
      n.d(t, "CineonToneMapping", function () {
        return ga;
      }),
      n.d(t, "UVMapping", function () {
        return ya;
      }),
      n.d(t, "CubeReflectionMapping", function () {
        return _a;
      }),
      n.d(t, "CubeRefractionMapping", function () {
        return ba;
      }),
      n.d(t, "EquirectangularReflectionMapping", function () {
        return xa;
      }),
      n.d(t, "EquirectangularRefractionMapping", function () {
        return Ea;
      }),
      n.d(t, "SphericalReflectionMapping", function () {
        return wa;
      }),
      n.d(t, "CubeUVReflectionMapping", function () {
        return Ma;
      }),
      n.d(t, "CubeUVRefractionMapping", function () {
        return Ta;
      }),
      n.d(t, "RepeatWrapping", function () {
        return Sa;
      }),
      n.d(t, "ClampToEdgeWrapping", function () {
        return Na;
      }),
      n.d(t, "MirroredRepeatWrapping", function () {
        return Ca;
      }),
      n.d(t, "NearestFilter", function () {
        return Aa;
      }),
      n.d(t, "NearestMipMapNearestFilter", function () {
        return Ra;
      }),
      n.d(t, "NearestMipMapLinearFilter", function () {
        return Pa;
      }),
      n.d(t, "LinearFilter", function () {
        return Oa;
      }),
      n.d(t, "LinearMipMapNearestFilter", function () {
        return Da;
      }),
      n.d(t, "LinearMipMapLinearFilter", function () {
        return La;
      }),
      n.d(t, "UnsignedByteType", function () {
        return Ia;
      }),
      n.d(t, "ByteType", function () {
        return Ua;
      }),
      n.d(t, "ShortType", function () {
        return ka;
      }),
      n.d(t, "UnsignedShortType", function () {
        return Fa;
      }),
      n.d(t, "IntType", function () {
        return Va;
      }),
      n.d(t, "UnsignedIntType", function () {
        return Ba;
      }),
      n.d(t, "FloatType", function () {
        return za;
      }),
      n.d(t, "HalfFloatType", function () {
        return Ha;
      }),
      n.d(t, "UnsignedShort4444Type", function () {
        return ja;
      }),
      n.d(t, "UnsignedShort5551Type", function () {
        return Ga;
      }),
      n.d(t, "UnsignedShort565Type", function () {
        return Wa;
      }),
      n.d(t, "UnsignedInt248Type", function () {
        return qa;
      }),
      n.d(t, "AlphaFormat", function () {
        return Xa;
      }),
      n.d(t, "RGBFormat", function () {
        return Ya;
      }),
      n.d(t, "RGBAFormat", function () {
        return Za;
      }),
      n.d(t, "LuminanceFormat", function () {
        return Ka;
      }),
      n.d(t, "LuminanceAlphaFormat", function () {
        return Ja;
      }),
      n.d(t, "RGBEFormat", function () {
        return Qa;
      }),
      n.d(t, "DepthFormat", function () {
        return $a;
      }),
      n.d(t, "DepthStencilFormat", function () {
        return es;
      }),
      n.d(t, "RGB_S3TC_DXT1_Format", function () {
        return ts;
      }),
      n.d(t, "RGBA_S3TC_DXT1_Format", function () {
        return ns;
      }),
      n.d(t, "RGBA_S3TC_DXT3_Format", function () {
        return rs;
      }),
      n.d(t, "RGBA_S3TC_DXT5_Format", function () {
        return is;
      }),
      n.d(t, "RGB_PVRTC_4BPPV1_Format", function () {
        return os;
      }),
      n.d(t, "RGB_PVRTC_2BPPV1_Format", function () {
        return as;
      }),
      n.d(t, "RGBA_PVRTC_4BPPV1_Format", function () {
        return ss;
      }),
      n.d(t, "RGBA_PVRTC_2BPPV1_Format", function () {
        return cs;
      }),
      n.d(t, "RGB_ETC1_Format", function () {
        return us;
      }),
      n.d(t, "LoopOnce", function () {
        return ls;
      }),
      n.d(t, "LoopRepeat", function () {
        return hs;
      }),
      n.d(t, "LoopPingPong", function () {
        return ps;
      }),
      n.d(t, "InterpolateDiscrete", function () {
        return ds;
      }),
      n.d(t, "InterpolateLinear", function () {
        return fs;
      }),
      n.d(t, "InterpolateSmooth", function () {
        return ms;
      }),
      n.d(t, "ZeroCurvatureEnding", function () {
        return vs;
      }),
      n.d(t, "ZeroSlopeEnding", function () {
        return gs;
      }),
      n.d(t, "WrapAroundEnding", function () {
        return ys;
      }),
      n.d(t, "TrianglesDrawMode", function () {
        return _s;
      }),
      n.d(t, "TriangleStripDrawMode", function () {
        return bs;
      }),
      n.d(t, "TriangleFanDrawMode", function () {
        return xs;
      }),
      n.d(t, "LinearEncoding", function () {
        return Es;
      }),
      n.d(t, "sRGBEncoding", function () {
        return ws;
      }),
      n.d(t, "GammaEncoding", function () {
        return Ms;
      }),
      n.d(t, "RGBEEncoding", function () {
        return Ts;
      }),
      n.d(t, "LogLuvEncoding", function () {
        return Ss;
      }),
      n.d(t, "RGBM7Encoding", function () {
        return Ns;
      }),
      n.d(t, "RGBM16Encoding", function () {
        return Cs;
      }),
      n.d(t, "RGBDEncoding", function () {
        return As;
      }),
      n.d(t, "BasicDepthPacking", function () {
        return Rs;
      }),
      n.d(t, "RGBADepthPacking", function () {
        return Ps;
      }),
      n.d(t, "CubeGeometry", function () {
        return Oe;
      }),
      n.d(t, "Face4", function () {
        return Fi;
      }),
      n.d(t, "LineStrip", function () {
        return gc;
      }),
      n.d(t, "LinePieces", function () {
        return yc;
      }),
      n.d(t, "MeshFaceMaterial", function () {
        return Vi;
      }),
      n.d(t, "MultiMaterial", function () {
        return Bi;
      }),
      n.d(t, "PointCloud", function () {
        return zi;
      }),
      n.d(t, "Particle", function () {
        return Hi;
      }),
      n.d(t, "ParticleSystem", function () {
        return ji;
      }),
      n.d(t, "PointCloudMaterial", function () {
        return Gi;
      }),
      n.d(t, "ParticleBasicMaterial", function () {
        return Wi;
      }),
      n.d(t, "ParticleSystemMaterial", function () {
        return qi;
      }),
      n.d(t, "Vertex", function () {
        return Xi;
      }),
      n.d(t, "DynamicBufferAttribute", function () {
        return Yi;
      }),
      n.d(t, "Int8Attribute", function () {
        return Zi;
      }),
      n.d(t, "Uint8Attribute", function () {
        return Ki;
      }),
      n.d(t, "Uint8ClampedAttribute", function () {
        return Ji;
      }),
      n.d(t, "Int16Attribute", function () {
        return Qi;
      }),
      n.d(t, "Uint16Attribute", function () {
        return $i;
      }),
      n.d(t, "Int32Attribute", function () {
        return eo;
      }),
      n.d(t, "Uint32Attribute", function () {
        return to;
      }),
      n.d(t, "Float32Attribute", function () {
        return no;
      }),
      n.d(t, "Float64Attribute", function () {
        return ro;
      }),
      n.d(t, "ClosedSplineCurve3", function () {
        return io;
      }),
      n.d(t, "SplineCurve3", function () {
        return oo;
      }),
      n.d(t, "Spline", function () {
        return ao;
      }),
      n.d(t, "BoundingBoxHelper", function () {
        return so;
      }),
      n.d(t, "EdgesHelper", function () {
        return co;
      }),
      n.d(t, "WireframeHelper", function () {
        return uo;
      }),
      n.d(t, "XHRLoader", function () {
        return lo;
      }),
      n.d(t, "BinaryTextureLoader", function () {
        return ho;
      }),
      n.d(t, "GeometryUtils", function () {
        return _c;
      }),
      n.d(t, "ImageUtils", function () {
        return bc;
      }),
      n.d(t, "Projector", function () {
        return po;
      }),
      n.d(t, "CanvasRenderer", function () {
        return fo;
      }),
      void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
      void 0 === Number.isInteger &&
        (Number.isInteger = function (e) {
          return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
        }),
      void 0 === Math.sign &&
        (Math.sign = function (e) {
          return e < 0 ? -1 : e > 0 ? 1 : +e;
        }),
      void 0 === Function.prototype.name &&
        Object.defineProperty(Function.prototype, "name", {
          get: function () {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
          },
        }),
      void 0 === Object.assign &&
        (function () {
          Object.assign = function (e) {
            if (void 0 === e || null === e)
              throw new TypeError("Cannot convert undefined or null to object");
            for (var t = Object(e), n = 1; n < arguments.length; n++) {
              var r = arguments[n];
              if (void 0 !== r && null !== r)
                for (var i in r)
                  Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
            }
            return t;
          };
        })(),
      Object.assign(r.prototype, {
        addEventListener: function (e, t) {
          void 0 === this._listeners && (this._listeners = {});
          var n = this._listeners;
          void 0 === n[e] && (n[e] = []),
            -1 === n[e].indexOf(t) && n[e].push(t);
        },
        hasEventListener: function (e, t) {
          if (void 0 === this._listeners) return !1;
          var n = this._listeners;
          return void 0 !== n[e] && -1 !== n[e].indexOf(t);
        },
        removeEventListener: function (e, t) {
          if (void 0 !== this._listeners) {
            var n = this._listeners,
              r = n[e];
            if (void 0 !== r) {
              var i = r.indexOf(t);
              -1 !== i && r.splice(i, 1);
            }
          }
        },
        dispatchEvent: function (e) {
          if (void 0 !== this._listeners) {
            var t = this._listeners,
              n = t[e.type];
            if (void 0 !== n) {
              e.target = this;
              for (var r = n.slice(0), i = 0, o = r.length; i < o; i++)
                r[i].call(this, e);
            }
          }
        },
      });
    var mo = "87",
      vo = { LEFT: 0, MIDDLE: 1, RIGHT: 2 },
      go = 0,
      yo = 1,
      _o = 2,
      bo = 3,
      xo = 0,
      Eo = 1,
      wo = 0,
      Mo = 1,
      To = 2,
      So = 0,
      No = 1,
      Co = 2,
      Ao = 1,
      Ro = 2,
      Po = 0,
      Oo = 1,
      Do = 2,
      Lo = 0,
      Io = 1,
      Uo = 2,
      ko = 3,
      Fo = 4,
      Vo = 5,
      Bo = 100,
      zo = 101,
      Ho = 102,
      jo = 103,
      Go = 104,
      Wo = 200,
      qo = 201,
      Xo = 202,
      Yo = 203,
      Zo = 204,
      Ko = 205,
      Jo = 206,
      Qo = 207,
      $o = 208,
      ea = 209,
      ta = 210,
      na = 0,
      ra = 1,
      ia = 2,
      oa = 3,
      aa = 4,
      sa = 5,
      ca = 6,
      ua = 7,
      la = 0,
      ha = 1,
      pa = 2,
      da = 0,
      fa = 1,
      ma = 2,
      va = 3,
      ga = 4,
      ya = 300,
      _a = 301,
      ba = 302,
      xa = 303,
      Ea = 304,
      wa = 305,
      Ma = 306,
      Ta = 307,
      Sa = 1e3,
      Na = 1001,
      Ca = 1002,
      Aa = 1003,
      Ra = 1004,
      Pa = 1005,
      Oa = 1006,
      Da = 1007,
      La = 1008,
      Ia = 1009,
      Ua = 1010,
      ka = 1011,
      Fa = 1012,
      Va = 1013,
      Ba = 1014,
      za = 1015,
      Ha = 1016,
      ja = 1017,
      Ga = 1018,
      Wa = 1019,
      qa = 1020,
      Xa = 1021,
      Ya = 1022,
      Za = 1023,
      Ka = 1024,
      Ja = 1025,
      Qa = Za,
      $a = 1026,
      es = 1027,
      ts = 2001,
      ns = 2002,
      rs = 2003,
      is = 2004,
      os = 2100,
      as = 2101,
      ss = 2102,
      cs = 2103,
      us = 2151,
      ls = 2200,
      hs = 2201,
      ps = 2202,
      ds = 2300,
      fs = 2301,
      ms = 2302,
      vs = 2400,
      gs = 2401,
      ys = 2402,
      _s = 0,
      bs = 1,
      xs = 2,
      Es = 3e3,
      ws = 3001,
      Ms = 3007,
      Ts = 3002,
      Ss = 3003,
      Ns = 3004,
      Cs = 3005,
      As = 3006,
      Rs = 3200,
      Ps = 3201,
      Os = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: (function () {
          var e,
            t =
              "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(
                ""
              ),
            n = new Array(36),
            r = 0;
          return function () {
            for (var i = 0; i < 36; i++)
              8 === i || 13 === i || 18 === i || 23 === i
                ? (n[i] = "-")
                : 14 === i
                ? (n[i] = "4")
                : (r <= 2 && (r = (33554432 + 16777216 * Math.random()) | 0),
                  (e = 15 & r),
                  (r >>= 4),
                  (n[i] = t[19 === i ? (3 & e) | 8 : e]));
            return n.join("");
          };
        })(),
        clamp: function (e, t, n) {
          return Math.max(t, Math.min(n, e));
        },
        euclideanModulo: function (e, t) {
          return ((e % t) + t) % t;
        },
        mapLinear: function (e, t, n, r, i) {
          return r + ((e - t) * (i - r)) / (n - t);
        },
        lerp: function (e, t, n) {
          return (1 - n) * e + n * t;
        },
        smoothstep: function (e, t, n) {
          return e <= t
            ? 0
            : e >= n
            ? 1
            : (e = (e - t) / (n - t)) * e * (3 - 2 * e);
        },
        smootherstep: function (e, t, n) {
          return e <= t
            ? 0
            : e >= n
            ? 1
            : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10);
        },
        randInt: function (e, t) {
          return e + Math.floor(Math.random() * (t - e + 1));
        },
        randFloat: function (e, t) {
          return e + Math.random() * (t - e);
        },
        randFloatSpread: function (e) {
          return e * (0.5 - Math.random());
        },
        degToRad: function (e) {
          return e * Os.DEG2RAD;
        },
        radToDeg: function (e) {
          return e * Os.RAD2DEG;
        },
        isPowerOfTwo: function (e) {
          return 0 == (e & (e - 1)) && 0 !== e;
        },
        nearestPowerOfTwo: function (e) {
          return Math.pow(2, Math.round(Math.log(e) / Math.LN2));
        },
        nextPowerOfTwo: function (e) {
          return (
            e--,
            (e |= e >> 1),
            (e |= e >> 2),
            (e |= e >> 4),
            (e |= e >> 8),
            (e |= e >> 16),
            ++e
          );
        },
      };
    Object.defineProperties(i.prototype, {
      width: {
        get: function () {
          return this.x;
        },
        set: function (e) {
          this.x = e;
        },
      },
      height: {
        get: function () {
          return this.y;
        },
        set: function (e) {
          this.y = e;
        },
      },
    }),
      Object.assign(i.prototype, {
        isVector2: !0,
        set: function (e, t) {
          return (this.x = e), (this.y = t), this;
        },
        setScalar: function (e) {
          return (this.x = e), (this.y = e), this;
        },
        setX: function (e) {
          return (this.x = e), this;
        },
        setY: function (e) {
          return (this.y = e), this;
        },
        setComponent: function (e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            default:
              throw new Error("index is out of range: " + e);
          }
          return this;
        },
        getComponent: function (e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            default:
              throw new Error("index is out of range: " + e);
          }
        },
        clone: function () {
          return new this.constructor(this.x, this.y);
        },
        copy: function (e) {
          return (this.x = e.x), (this.y = e.y), this;
        },
        add: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
              ),
              this.addVectors(e, t))
            : ((this.x += e.x), (this.y += e.y), this);
        },
        addScalar: function (e) {
          return (this.x += e), (this.y += e), this;
        },
        addVectors: function (e, t) {
          return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
        },
        addScaledVector: function (e, t) {
          return (this.x += e.x * t), (this.y += e.y * t), this;
        },
        sub: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
              ),
              this.subVectors(e, t))
            : ((this.x -= e.x), (this.y -= e.y), this);
        },
        subScalar: function (e) {
          return (this.x -= e), (this.y -= e), this;
        },
        subVectors: function (e, t) {
          return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
        },
        multiply: function (e) {
          return (this.x *= e.x), (this.y *= e.y), this;
        },
        multiplyScalar: function (e) {
          return (this.x *= e), (this.y *= e), this;
        },
        divide: function (e) {
          return (this.x /= e.x), (this.y /= e.y), this;
        },
        divideScalar: function (e) {
          return this.multiplyScalar(1 / e);
        },
        min: function (e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            this
          );
        },
        max: function (e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            this
          );
        },
        clamp: function (e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            this
          );
        },
        clampScalar: (function () {
          var e = new i(),
            t = new i();
          return function (n, r) {
            return e.set(n, n), t.set(r, r), this.clamp(e, t);
          };
        })(),
        clampLength: function (e, t) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        },
        floor: function () {
          return (
            (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
          );
        },
        ceil: function () {
          return (
            (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
          );
        },
        round: function () {
          return (
            (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
          );
        },
        roundToZero: function () {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            this
          );
        },
        negate: function () {
          return (this.x = -this.x), (this.y = -this.y), this;
        },
        dot: function (e) {
          return this.x * e.x + this.y * e.y;
        },
        lengthSq: function () {
          return this.x * this.x + this.y * this.y;
        },
        length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        lengthManhattan: function () {
          return Math.abs(this.x) + Math.abs(this.y);
        },
        normalize: function () {
          return this.divideScalar(this.length() || 1);
        },
        angle: function () {
          var e = Math.atan2(this.y, this.x);
          return e < 0 && (e += 2 * Math.PI), e;
        },
        distanceTo: function (e) {
          return Math.sqrt(this.distanceToSquared(e));
        },
        distanceToSquared: function (e) {
          var t = this.x - e.x,
            n = this.y - e.y;
          return t * t + n * n;
        },
        distanceToManhattan: function (e) {
          return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
        },
        setLength: function (e) {
          return this.normalize().multiplyScalar(e);
        },
        lerp: function (e, t) {
          return (
            (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this
          );
        },
        lerpVectors: function (e, t, n) {
          return this.subVectors(t, e).multiplyScalar(n).add(e);
        },
        equals: function (e) {
          return e.x === this.x && e.y === this.y;
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0), (this.x = e[t]), (this.y = e[t + 1]), this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.x),
            (e[t + 1] = this.y),
            e
          );
        },
        fromBufferAttribute: function (e, t, n) {
          return (
            void 0 !== n &&
              console.warn(
                "THREE.Vector2: offset has been removed from .fromBufferAttribute()."
              ),
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            this
          );
        },
        rotateAround: function (e, t) {
          var n = Math.cos(t),
            r = Math.sin(t),
            i = this.x - e.x,
            o = this.y - e.y;
          return (
            (this.x = i * n - o * r + e.x), (this.y = i * r + o * n + e.y), this
          );
        },
      });
    var Ds = 0;
    (o.DEFAULT_IMAGE = void 0),
      (o.DEFAULT_MAPPING = ya),
      Object.defineProperty(o.prototype, "needsUpdate", {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      Object.assign(o.prototype, r.prototype, {
        constructor: o,
        isTexture: !0,
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.name = e.name),
            (this.image = e.image),
            (this.mipmaps = e.mipmaps.slice(0)),
            (this.mapping = e.mapping),
            (this.wrapS = e.wrapS),
            (this.wrapT = e.wrapT),
            (this.magFilter = e.magFilter),
            (this.minFilter = e.minFilter),
            (this.anisotropy = e.anisotropy),
            (this.format = e.format),
            (this.type = e.type),
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            (this.generateMipmaps = e.generateMipmaps),
            (this.premultiplyAlpha = e.premultiplyAlpha),
            (this.flipY = e.flipY),
            (this.unpackAlignment = e.unpackAlignment),
            (this.encoding = e.encoding),
            this
          );
        },
        toJSON: function (e) {
          if (void 0 !== e.textures[this.uuid]) return e.textures[this.uuid];
          var t = {
            metadata: {
              version: 4.5,
              type: "Texture",
              generator: "Texture.toJSON",
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            wrap: [this.wrapS, this.wrapT],
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
          };
          if (void 0 !== this.image) {
            var n = this.image;
            void 0 === n.uuid && (n.uuid = Os.generateUUID()),
              void 0 === e.images[n.uuid] &&
                (e.images[n.uuid] = {
                  uuid: n.uuid,
                  url: (function (e) {
                    var t;
                    if (e instanceof HTMLCanvasElement) t = e;
                    else {
                      (t = document.createElementNS(
                        "http://www.w3.org/1999/xhtml",
                        "canvas"
                      )),
                        (t.width = e.width),
                        (t.height = e.height);
                      var n = t.getContext("2d");
                      e instanceof ImageData
                        ? n.putImageData(e, 0, 0)
                        : n.drawImage(e, 0, 0, e.width, e.height);
                    }
                    return t.width > 2048 || t.height > 2048
                      ? t.toDataURL("image/jpeg", 0.6)
                      : t.toDataURL("image/png");
                  })(n),
                }),
              (t.image = n.uuid);
          }
          return (e.textures[this.uuid] = t), t;
        },
        dispose: function () {
          this.dispatchEvent({ type: "dispose" });
        },
        transformUv: function (e) {
          if (this.mapping === ya) {
            if (
              (e.multiply(this.repeat), e.add(this.offset), e.x < 0 || e.x > 1)
            )
              switch (this.wrapS) {
                case Sa:
                  e.x = e.x - Math.floor(e.x);
                  break;
                case Na:
                  e.x = e.x < 0 ? 0 : 1;
                  break;
                case Ca:
                  1 === Math.abs(Math.floor(e.x) % 2)
                    ? (e.x = Math.ceil(e.x) - e.x)
                    : (e.x = e.x - Math.floor(e.x));
              }
            if (e.y < 0 || e.y > 1)
              switch (this.wrapT) {
                case Sa:
                  e.y = e.y - Math.floor(e.y);
                  break;
                case Na:
                  e.y = e.y < 0 ? 0 : 1;
                  break;
                case Ca:
                  1 === Math.abs(Math.floor(e.y) % 2)
                    ? (e.y = Math.ceil(e.y) - e.y)
                    : (e.y = e.y - Math.floor(e.y));
              }
            this.flipY && (e.y = 1 - e.y);
          }
        },
      }),
      Object.assign(a.prototype, {
        isVector4: !0,
        set: function (e, t, n, r) {
          return (this.x = e), (this.y = t), (this.z = n), (this.w = r), this;
        },
        setScalar: function (e) {
          return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
        },
        setX: function (e) {
          return (this.x = e), this;
        },
        setY: function (e) {
          return (this.y = e), this;
        },
        setZ: function (e) {
          return (this.z = e), this;
        },
        setW: function (e) {
          return (this.w = e), this;
        },
        setComponent: function (e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            case 3:
              this.w = t;
              break;
            default:
              throw new Error("index is out of range: " + e);
          }
          return this;
        },
        getComponent: function (e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            case 3:
              return this.w;
            default:
              throw new Error("index is out of range: " + e);
          }
        },
        clone: function () {
          return new this.constructor(this.x, this.y, this.z, this.w);
        },
        copy: function (e) {
          return (
            (this.x = e.x),
            (this.y = e.y),
            (this.z = e.z),
            (this.w = void 0 !== e.w ? e.w : 1),
            this
          );
        },
        add: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
              ),
              this.addVectors(e, t))
            : ((this.x += e.x),
              (this.y += e.y),
              (this.z += e.z),
              (this.w += e.w),
              this);
        },
        addScalar: function (e) {
          return (
            (this.x += e), (this.y += e), (this.z += e), (this.w += e), this
          );
        },
        addVectors: function (e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            (this.w = e.w + t.w),
            this
          );
        },
        addScaledVector: function (e, t) {
          return (
            (this.x += e.x * t),
            (this.y += e.y * t),
            (this.z += e.z * t),
            (this.w += e.w * t),
            this
          );
        },
        sub: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
              ),
              this.subVectors(e, t))
            : ((this.x -= e.x),
              (this.y -= e.y),
              (this.z -= e.z),
              (this.w -= e.w),
              this);
        },
        subScalar: function (e) {
          return (
            (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this
          );
        },
        subVectors: function (e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            (this.w = e.w - t.w),
            this
          );
        },
        multiplyScalar: function (e) {
          return (
            (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this
          );
        },
        applyMatrix4: function (e) {
          var t = this.x,
            n = this.y,
            r = this.z,
            i = this.w,
            o = e.elements;
          return (
            (this.x = o[0] * t + o[4] * n + o[8] * r + o[12] * i),
            (this.y = o[1] * t + o[5] * n + o[9] * r + o[13] * i),
            (this.z = o[2] * t + o[6] * n + o[10] * r + o[14] * i),
            (this.w = o[3] * t + o[7] * n + o[11] * r + o[15] * i),
            this
          );
        },
        divideScalar: function (e) {
          return this.multiplyScalar(1 / e);
        },
        setAxisAngleFromQuaternion: function (e) {
          this.w = 2 * Math.acos(e.w);
          var t = Math.sqrt(1 - e.w * e.w);
          return (
            t < 1e-4
              ? ((this.x = 1), (this.y = 0), (this.z = 0))
              : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
            this
          );
        },
        setAxisAngleFromRotationMatrix: function (e) {
          var t,
            n,
            r,
            i,
            o = e.elements,
            a = o[0],
            s = o[4],
            c = o[8],
            u = o[1],
            l = o[5],
            h = o[9],
            p = o[2],
            d = o[6],
            f = o[10];
          if (
            Math.abs(s - u) < 0.01 &&
            Math.abs(c - p) < 0.01 &&
            Math.abs(h - d) < 0.01
          ) {
            if (
              Math.abs(s + u) < 0.1 &&
              Math.abs(c + p) < 0.1 &&
              Math.abs(h + d) < 0.1 &&
              Math.abs(a + l + f - 3) < 0.1
            )
              return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            var m = (a + 1) / 2,
              v = (l + 1) / 2,
              g = (f + 1) / 2,
              y = (s + u) / 4,
              _ = (c + p) / 4,
              b = (h + d) / 4;
            return (
              m > v && m > g
                ? m < 0.01
                  ? ((n = 0), (r = 0.707106781), (i = 0.707106781))
                  : ((n = Math.sqrt(m)), (r = y / n), (i = _ / n))
                : v > g
                ? v < 0.01
                  ? ((n = 0.707106781), (r = 0), (i = 0.707106781))
                  : ((r = Math.sqrt(v)), (n = y / r), (i = b / r))
                : g < 0.01
                ? ((n = 0.707106781), (r = 0.707106781), (i = 0))
                : ((i = Math.sqrt(g)), (n = _ / i), (r = b / i)),
              this.set(n, r, i, t),
              this
            );
          }
          var x = Math.sqrt(
            (d - h) * (d - h) + (c - p) * (c - p) + (u - s) * (u - s)
          );
          return (
            Math.abs(x) < 0.001 && (x = 1),
            (this.x = (d - h) / x),
            (this.y = (c - p) / x),
            (this.z = (u - s) / x),
            (this.w = Math.acos((a + l + f - 1) / 2)),
            this
          );
        },
        min: function (e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            (this.w = Math.min(this.w, e.w)),
            this
          );
        },
        max: function (e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            (this.w = Math.max(this.w, e.w)),
            this
          );
        },
        clamp: function (e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            (this.w = Math.max(e.w, Math.min(t.w, this.w))),
            this
          );
        },
        clampScalar: (function () {
          var e, t;
          return function (n, r) {
            return (
              void 0 === e && ((e = new a()), (t = new a())),
              e.set(n, n, n, n),
              t.set(r, r, r, r),
              this.clamp(e, t)
            );
          };
        })(),
        clampLength: function (e, t) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        },
        floor: function () {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            (this.w = Math.floor(this.w)),
            this
          );
        },
        ceil: function () {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            (this.w = Math.ceil(this.w)),
            this
          );
        },
        round: function () {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            (this.w = Math.round(this.w)),
            this
          );
        },
        roundToZero: function () {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
            (this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
            this
          );
        },
        negate: function () {
          return (
            (this.x = -this.x),
            (this.y = -this.y),
            (this.z = -this.z),
            (this.w = -this.w),
            this
          );
        },
        dot: function (e) {
          return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
        },
        lengthSq: function () {
          return (
            this.x * this.x +
            this.y * this.y +
            this.z * this.z +
            this.w * this.w
          );
        },
        length: function () {
          return Math.sqrt(
            this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
          );
        },
        lengthManhattan: function () {
          return (
            Math.abs(this.x) +
            Math.abs(this.y) +
            Math.abs(this.z) +
            Math.abs(this.w)
          );
        },
        normalize: function () {
          return this.divideScalar(this.length() || 1);
        },
        setLength: function (e) {
          return this.normalize().multiplyScalar(e);
        },
        lerp: function (e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            (this.w += (e.w - this.w) * t),
            this
          );
        },
        lerpVectors: function (e, t, n) {
          return this.subVectors(t, e).multiplyScalar(n).add(e);
        },
        equals: function (e) {
          return (
            e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
          );
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this.x = e[t]),
            (this.y = e[t + 1]),
            (this.z = e[t + 2]),
            (this.w = e[t + 3]),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.x),
            (e[t + 1] = this.y),
            (e[t + 2] = this.z),
            (e[t + 3] = this.w),
            e
          );
        },
        fromBufferAttribute: function (e, t, n) {
          return (
            void 0 !== n &&
              console.warn(
                "THREE.Vector4: offset has been removed from .fromBufferAttribute()."
              ),
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            (this.w = e.getW(t)),
            this
          );
        },
      }),
      Object.assign(s.prototype, r.prototype, {
        isWebGLRenderTarget: !0,
        setSize: function (e, t) {
          (this.width === e && this.height === t) ||
            ((this.width = e), (this.height = t), this.dispose()),
            this.viewport.set(0, 0, e, t),
            this.scissor.set(0, 0, e, t);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.width = e.width),
            (this.height = e.height),
            this.viewport.copy(e.viewport),
            (this.texture = e.texture.clone()),
            (this.depthBuffer = e.depthBuffer),
            (this.stencilBuffer = e.stencilBuffer),
            (this.depthTexture = e.depthTexture),
            this
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: "dispose" });
        },
      }),
      (c.prototype = Object.create(s.prototype)),
      (c.prototype.constructor = c),
      (c.prototype.isWebGLRenderTargetCube = !0),
      Object.assign(u, {
        slerp: function (e, t, n, r) {
          return n.copy(e).slerp(t, r);
        },
        slerpFlat: function (e, t, n, r, i, o, a) {
          var s = n[r + 0],
            c = n[r + 1],
            u = n[r + 2],
            l = n[r + 3],
            h = i[o + 0],
            p = i[o + 1],
            d = i[o + 2],
            f = i[o + 3];
          if (l !== f || s !== h || c !== p || u !== d) {
            var m = 1 - a,
              v = s * h + c * p + u * d + l * f,
              g = v >= 0 ? 1 : -1,
              y = 1 - v * v;
            if (y > Number.EPSILON) {
              var _ = Math.sqrt(y),
                b = Math.atan2(_, v * g);
              (m = Math.sin(m * b) / _), (a = Math.sin(a * b) / _);
            }
            var x = a * g;
            if (
              ((s = s * m + h * x),
              (c = c * m + p * x),
              (u = u * m + d * x),
              (l = l * m + f * x),
              m === 1 - a)
            ) {
              var E = 1 / Math.sqrt(s * s + c * c + u * u + l * l);
              (s *= E), (c *= E), (u *= E), (l *= E);
            }
          }
          (e[t] = s), (e[t + 1] = c), (e[t + 2] = u), (e[t + 3] = l);
        },
      }),
      Object.defineProperties(u.prototype, {
        x: {
          get: function () {
            return this._x;
          },
          set: function (e) {
            (this._x = e), this.onChangeCallback();
          },
        },
        y: {
          get: function () {
            return this._y;
          },
          set: function (e) {
            (this._y = e), this.onChangeCallback();
          },
        },
        z: {
          get: function () {
            return this._z;
          },
          set: function (e) {
            (this._z = e), this.onChangeCallback();
          },
        },
        w: {
          get: function () {
            return this._w;
          },
          set: function (e) {
            (this._w = e), this.onChangeCallback();
          },
        },
      }),
      Object.assign(u.prototype, {
        set: function (e, t, n, r) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = r),
            this.onChangeCallback(),
            this
          );
        },
        clone: function () {
          return new this.constructor(this._x, this._y, this._z, this._w);
        },
        copy: function (e) {
          return (
            (this._x = e.x),
            (this._y = e.y),
            (this._z = e.z),
            (this._w = e.w),
            this.onChangeCallback(),
            this
          );
        },
        setFromEuler: function (e, t) {
          if (!e || !e.isEuler)
            throw new Error(
              "THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order."
            );
          var n = e._x,
            r = e._y,
            i = e._z,
            o = e.order,
            a = Math.cos,
            s = Math.sin,
            c = a(n / 2),
            u = a(r / 2),
            l = a(i / 2),
            h = s(n / 2),
            p = s(r / 2),
            d = s(i / 2);
          return (
            "XYZ" === o
              ? ((this._x = h * u * l + c * p * d),
                (this._y = c * p * l - h * u * d),
                (this._z = c * u * d + h * p * l),
                (this._w = c * u * l - h * p * d))
              : "YXZ" === o
              ? ((this._x = h * u * l + c * p * d),
                (this._y = c * p * l - h * u * d),
                (this._z = c * u * d - h * p * l),
                (this._w = c * u * l + h * p * d))
              : "ZXY" === o
              ? ((this._x = h * u * l - c * p * d),
                (this._y = c * p * l + h * u * d),
                (this._z = c * u * d + h * p * l),
                (this._w = c * u * l - h * p * d))
              : "ZYX" === o
              ? ((this._x = h * u * l - c * p * d),
                (this._y = c * p * l + h * u * d),
                (this._z = c * u * d - h * p * l),
                (this._w = c * u * l + h * p * d))
              : "YZX" === o
              ? ((this._x = h * u * l + c * p * d),
                (this._y = c * p * l + h * u * d),
                (this._z = c * u * d - h * p * l),
                (this._w = c * u * l - h * p * d))
              : "XZY" === o &&
                ((this._x = h * u * l - c * p * d),
                (this._y = c * p * l - h * u * d),
                (this._z = c * u * d + h * p * l),
                (this._w = c * u * l + h * p * d)),
            !1 !== t && this.onChangeCallback(),
            this
          );
        },
        setFromAxisAngle: function (e, t) {
          var n = t / 2,
            r = Math.sin(n);
          return (
            (this._x = e.x * r),
            (this._y = e.y * r),
            (this._z = e.z * r),
            (this._w = Math.cos(n)),
            this.onChangeCallback(),
            this
          );
        },
        setFromRotationMatrix: function (e) {
          var t,
            n = e.elements,
            r = n[0],
            i = n[4],
            o = n[8],
            a = n[1],
            s = n[5],
            c = n[9],
            u = n[2],
            l = n[6],
            h = n[10],
            p = r + s + h;
          return (
            p > 0
              ? ((t = 0.5 / Math.sqrt(p + 1)),
                (this._w = 0.25 / t),
                (this._x = (l - c) * t),
                (this._y = (o - u) * t),
                (this._z = (a - i) * t))
              : r > s && r > h
              ? ((t = 2 * Math.sqrt(1 + r - s - h)),
                (this._w = (l - c) / t),
                (this._x = 0.25 * t),
                (this._y = (i + a) / t),
                (this._z = (o + u) / t))
              : s > h
              ? ((t = 2 * Math.sqrt(1 + s - r - h)),
                (this._w = (o - u) / t),
                (this._x = (i + a) / t),
                (this._y = 0.25 * t),
                (this._z = (c + l) / t))
              : ((t = 2 * Math.sqrt(1 + h - r - s)),
                (this._w = (a - i) / t),
                (this._x = (o + u) / t),
                (this._y = (c + l) / t),
                (this._z = 0.25 * t)),
            this.onChangeCallback(),
            this
          );
        },
        setFromUnitVectors: (function () {
          var e,
            t = new l();
          return function (n, r) {
            return (
              void 0 === t && (t = new l()),
              (e = n.dot(r) + 1),
              e < 1e-6
                ? ((e = 0),
                  Math.abs(n.x) > Math.abs(n.z)
                    ? t.set(-n.y, n.x, 0)
                    : t.set(0, -n.z, n.y))
                : t.crossVectors(n, r),
              (this._x = t.x),
              (this._y = t.y),
              (this._z = t.z),
              (this._w = e),
              this.normalize()
            );
          };
        })(),
        inverse: function () {
          return this.conjugate().normalize();
        },
        conjugate: function () {
          return (
            (this._x *= -1),
            (this._y *= -1),
            (this._z *= -1),
            this.onChangeCallback(),
            this
          );
        },
        dot: function (e) {
          return (
            this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
          );
        },
        lengthSq: function () {
          return (
            this._x * this._x +
            this._y * this._y +
            this._z * this._z +
            this._w * this._w
          );
        },
        length: function () {
          return Math.sqrt(
            this._x * this._x +
              this._y * this._y +
              this._z * this._z +
              this._w * this._w
          );
        },
        normalize: function () {
          var e = this.length();
          return (
            0 === e
              ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
              : ((e = 1 / e),
                (this._x = this._x * e),
                (this._y = this._y * e),
                (this._z = this._z * e),
                (this._w = this._w * e)),
            this.onChangeCallback(),
            this
          );
        },
        multiply: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."
              ),
              this.multiplyQuaternions(e, t))
            : this.multiplyQuaternions(this, e);
        },
        premultiply: function (e) {
          return this.multiplyQuaternions(e, this);
        },
        multiplyQuaternions: function (e, t) {
          var n = e._x,
            r = e._y,
            i = e._z,
            o = e._w,
            a = t._x,
            s = t._y,
            c = t._z,
            u = t._w;
          return (
            (this._x = n * u + o * a + r * c - i * s),
            (this._y = r * u + o * s + i * a - n * c),
            (this._z = i * u + o * c + n * s - r * a),
            (this._w = o * u - n * a - r * s - i * c),
            this.onChangeCallback(),
            this
          );
        },
        slerp: function (e, t) {
          if (0 === t) return this;
          if (1 === t) return this.copy(e);
          var n = this._x,
            r = this._y,
            i = this._z,
            o = this._w,
            a = o * e._w + n * e._x + r * e._y + i * e._z;
          if (
            (a < 0
              ? ((this._w = -e._w),
                (this._x = -e._x),
                (this._y = -e._y),
                (this._z = -e._z),
                (a = -a))
              : this.copy(e),
            a >= 1)
          )
            return (
              (this._w = o), (this._x = n), (this._y = r), (this._z = i), this
            );
          var s = Math.sqrt(1 - a * a);
          if (Math.abs(s) < 0.001)
            return (
              (this._w = 0.5 * (o + this._w)),
              (this._x = 0.5 * (n + this._x)),
              (this._y = 0.5 * (r + this._y)),
              (this._z = 0.5 * (i + this._z)),
              this
            );
          var c = Math.atan2(s, a),
            u = Math.sin((1 - t) * c) / s,
            l = Math.sin(t * c) / s;
          return (
            (this._w = o * u + this._w * l),
            (this._x = n * u + this._x * l),
            (this._y = r * u + this._y * l),
            (this._z = i * u + this._z * l),
            this.onChangeCallback(),
            this
          );
        },
        equals: function (e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._w === this._w
          );
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this._x = e[t]),
            (this._y = e[t + 1]),
            (this._z = e[t + 2]),
            (this._w = e[t + 3]),
            this.onChangeCallback(),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._w),
            e
          );
        },
        onChange: function (e) {
          return (this.onChangeCallback = e), this;
        },
        onChangeCallback: function () {},
      }),
      Object.assign(l.prototype, {
        isVector3: !0,
        set: function (e, t, n) {
          return (this.x = e), (this.y = t), (this.z = n), this;
        },
        setScalar: function (e) {
          return (this.x = e), (this.y = e), (this.z = e), this;
        },
        setX: function (e) {
          return (this.x = e), this;
        },
        setY: function (e) {
          return (this.y = e), this;
        },
        setZ: function (e) {
          return (this.z = e), this;
        },
        setComponent: function (e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            default:
              throw new Error("index is out of range: " + e);
          }
          return this;
        },
        getComponent: function (e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            default:
              throw new Error("index is out of range: " + e);
          }
        },
        clone: function () {
          return new this.constructor(this.x, this.y, this.z);
        },
        copy: function (e) {
          return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
        },
        add: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
              ),
              this.addVectors(e, t))
            : ((this.x += e.x), (this.y += e.y), (this.z += e.z), this);
        },
        addScalar: function (e) {
          return (this.x += e), (this.y += e), (this.z += e), this;
        },
        addVectors: function (e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            this
          );
        },
        addScaledVector: function (e, t) {
          return (
            (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this
          );
        },
        sub: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
              ),
              this.subVectors(e, t))
            : ((this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this);
        },
        subScalar: function (e) {
          return (this.x -= e), (this.y -= e), (this.z -= e), this;
        },
        subVectors: function (e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            this
          );
        },
        multiply: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."
              ),
              this.multiplyVectors(e, t))
            : ((this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this);
        },
        multiplyScalar: function (e) {
          return (this.x *= e), (this.y *= e), (this.z *= e), this;
        },
        multiplyVectors: function (e, t) {
          return (
            (this.x = e.x * t.x),
            (this.y = e.y * t.y),
            (this.z = e.z * t.z),
            this
          );
        },
        applyEuler: (function () {
          var e = new u();
          return function (t) {
            return (
              (t && t.isEuler) ||
                console.error(
                  "THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."
                ),
              this.applyQuaternion(e.setFromEuler(t))
            );
          };
        })(),
        applyAxisAngle: (function () {
          var e = new u();
          return function (t, n) {
            return this.applyQuaternion(e.setFromAxisAngle(t, n));
          };
        })(),
        applyMatrix3: function (e) {
          var t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[3] * n + i[6] * r),
            (this.y = i[1] * t + i[4] * n + i[7] * r),
            (this.z = i[2] * t + i[5] * n + i[8] * r),
            this
          );
        },
        applyMatrix4: function (e) {
          var t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements,
            o = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
          return (
            (this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * o),
            (this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * o),
            (this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * o),
            this
          );
        },
        applyQuaternion: function (e) {
          var t = this.x,
            n = this.y,
            r = this.z,
            i = e.x,
            o = e.y,
            a = e.z,
            s = e.w,
            c = s * t + o * r - a * n,
            u = s * n + a * t - i * r,
            l = s * r + i * n - o * t,
            h = -i * t - o * n - a * r;
          return (
            (this.x = c * s + h * -i + u * -a - l * -o),
            (this.y = u * s + h * -o + l * -i - c * -a),
            (this.z = l * s + h * -a + c * -o - u * -i),
            this
          );
        },
        project: (function () {
          var e = new h();
          return function (t) {
            return (
              e.multiplyMatrices(
                t.projectionMatrix,
                e.getInverse(t.matrixWorld)
              ),
              this.applyMatrix4(e)
            );
          };
        })(),
        unproject: (function () {
          var e = new h();
          return function (t) {
            return (
              e.multiplyMatrices(
                t.matrixWorld,
                e.getInverse(t.projectionMatrix)
              ),
              this.applyMatrix4(e)
            );
          };
        })(),
        transformDirection: function (e) {
          var t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[4] * n + i[8] * r),
            (this.y = i[1] * t + i[5] * n + i[9] * r),
            (this.z = i[2] * t + i[6] * n + i[10] * r),
            this.normalize()
          );
        },
        divide: function (e) {
          return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
        },
        divideScalar: function (e) {
          return this.multiplyScalar(1 / e);
        },
        min: function (e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            this
          );
        },
        max: function (e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            this
          );
        },
        clamp: function (e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            this
          );
        },
        clampScalar: (function () {
          var e = new l(),
            t = new l();
          return function (n, r) {
            return e.set(n, n, n), t.set(r, r, r), this.clamp(e, t);
          };
        })(),
        clampLength: function (e, t) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        },
        floor: function () {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            this
          );
        },
        ceil: function () {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            this
          );
        },
        round: function () {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            this
          );
        },
        roundToZero: function () {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
            this
          );
        },
        negate: function () {
          return (
            (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this
          );
        },
        dot: function (e) {
          return this.x * e.x + this.y * e.y + this.z * e.z;
        },
        lengthSq: function () {
          return this.x * this.x + this.y * this.y + this.z * this.z;
        },
        length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        },
        lengthManhattan: function () {
          return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
        },
        normalize: function () {
          return this.divideScalar(this.length() || 1);
        },
        setLength: function (e) {
          return this.normalize().multiplyScalar(e);
        },
        lerp: function (e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            this
          );
        },
        lerpVectors: function (e, t, n) {
          return this.subVectors(t, e).multiplyScalar(n).add(e);
        },
        cross: function (e, t) {
          if (void 0 !== t)
            return (
              console.warn(
                "THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."
              ),
              this.crossVectors(e, t)
            );
          var n = this.x,
            r = this.y,
            i = this.z;
          return (
            (this.x = r * e.z - i * e.y),
            (this.y = i * e.x - n * e.z),
            (this.z = n * e.y - r * e.x),
            this
          );
        },
        crossVectors: function (e, t) {
          var n = e.x,
            r = e.y,
            i = e.z,
            o = t.x,
            a = t.y,
            s = t.z;
          return (
            (this.x = r * s - i * a),
            (this.y = i * o - n * s),
            (this.z = n * a - r * o),
            this
          );
        },
        projectOnVector: function (e) {
          var t = e.dot(this) / e.lengthSq();
          return this.copy(e).multiplyScalar(t);
        },
        projectOnPlane: (function () {
          var e = new l();
          return function (t) {
            return e.copy(this).projectOnVector(t), this.sub(e);
          };
        })(),
        reflect: (function () {
          var e = new l();
          return function (t) {
            return this.sub(e.copy(t).multiplyScalar(2 * this.dot(t)));
          };
        })(),
        angleTo: function (e) {
          var t = this.dot(e) / Math.sqrt(this.lengthSq() * e.lengthSq());
          return Math.acos(Os.clamp(t, -1, 1));
        },
        distanceTo: function (e) {
          return Math.sqrt(this.distanceToSquared(e));
        },
        distanceToSquared: function (e) {
          var t = this.x - e.x,
            n = this.y - e.y,
            r = this.z - e.z;
          return t * t + n * n + r * r;
        },
        distanceToManhattan: function (e) {
          return (
            Math.abs(this.x - e.x) +
            Math.abs(this.y - e.y) +
            Math.abs(this.z - e.z)
          );
        },
        setFromSpherical: function (e) {
          var t = Math.sin(e.phi) * e.radius;
          return (
            (this.x = t * Math.sin(e.theta)),
            (this.y = Math.cos(e.phi) * e.radius),
            (this.z = t * Math.cos(e.theta)),
            this
          );
        },
        setFromCylindrical: function (e) {
          return (
            (this.x = e.radius * Math.sin(e.theta)),
            (this.y = e.y),
            (this.z = e.radius * Math.cos(e.theta)),
            this
          );
        },
        setFromMatrixPosition: function (e) {
          var t = e.elements;
          return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
        },
        setFromMatrixScale: function (e) {
          var t = this.setFromMatrixColumn(e, 0).length(),
            n = this.setFromMatrixColumn(e, 1).length(),
            r = this.setFromMatrixColumn(e, 2).length();
          return (this.x = t), (this.y = n), (this.z = r), this;
        },
        setFromMatrixColumn: function (e, t) {
          return this.fromArray(e.elements, 4 * t);
        },
        equals: function (e) {
          return e.x === this.x && e.y === this.y && e.z === this.z;
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this.x = e[t]),
            (this.y = e[t + 1]),
            (this.z = e[t + 2]),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.x),
            (e[t + 1] = this.y),
            (e[t + 2] = this.z),
            e
          );
        },
        fromBufferAttribute: function (e, t, n) {
          return (
            void 0 !== n &&
              console.warn(
                "THREE.Vector3: offset has been removed from .fromBufferAttribute()."
              ),
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            this
          );
        },
      }),
      Object.assign(h.prototype, {
        isMatrix4: !0,
        set: function (e, t, n, r, i, o, a, s, c, u, l, h, p, d, f, m) {
          var v = this.elements;
          return (
            (v[0] = e),
            (v[4] = t),
            (v[8] = n),
            (v[12] = r),
            (v[1] = i),
            (v[5] = o),
            (v[9] = a),
            (v[13] = s),
            (v[2] = c),
            (v[6] = u),
            (v[10] = l),
            (v[14] = h),
            (v[3] = p),
            (v[7] = d),
            (v[11] = f),
            (v[15] = m),
            this
          );
        },
        identity: function () {
          return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        },
        clone: function () {
          return new h().fromArray(this.elements);
        },
        copy: function (e) {
          var t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            (t[9] = n[9]),
            (t[10] = n[10]),
            (t[11] = n[11]),
            (t[12] = n[12]),
            (t[13] = n[13]),
            (t[14] = n[14]),
            (t[15] = n[15]),
            this
          );
        },
        copyPosition: function (e) {
          var t = this.elements,
            n = e.elements;
          return (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this;
        },
        extractBasis: function (e, t, n) {
          return (
            e.setFromMatrixColumn(this, 0),
            t.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
          );
        },
        makeBasis: function (e, t, n) {
          return (
            this.set(
              e.x,
              t.x,
              n.x,
              0,
              e.y,
              t.y,
              n.y,
              0,
              e.z,
              t.z,
              n.z,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        },
        extractRotation: (function () {
          var e = new l();
          return function (t) {
            var n = this.elements,
              r = t.elements,
              i = 1 / e.setFromMatrixColumn(t, 0).length(),
              o = 1 / e.setFromMatrixColumn(t, 1).length(),
              a = 1 / e.setFromMatrixColumn(t, 2).length();
            return (
              (n[0] = r[0] * i),
              (n[1] = r[1] * i),
              (n[2] = r[2] * i),
              (n[4] = r[4] * o),
              (n[5] = r[5] * o),
              (n[6] = r[6] * o),
              (n[8] = r[8] * a),
              (n[9] = r[9] * a),
              (n[10] = r[10] * a),
              this
            );
          };
        })(),
        makeRotationFromEuler: function (e) {
          (e && e.isEuler) ||
            console.error(
              "THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order."
            );
          var t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z,
            o = Math.cos(n),
            a = Math.sin(n),
            s = Math.cos(r),
            c = Math.sin(r),
            u = Math.cos(i),
            l = Math.sin(i);
          if ("XYZ" === e.order) {
            var h = o * u,
              p = o * l,
              d = a * u,
              f = a * l;
            (t[0] = s * u),
              (t[4] = -s * l),
              (t[8] = c),
              (t[1] = p + d * c),
              (t[5] = h - f * c),
              (t[9] = -a * s),
              (t[2] = f - h * c),
              (t[6] = d + p * c),
              (t[10] = o * s);
          } else if ("YXZ" === e.order) {
            var m = s * u,
              v = s * l,
              g = c * u,
              y = c * l;
            (t[0] = m + y * a),
              (t[4] = g * a - v),
              (t[8] = o * c),
              (t[1] = o * l),
              (t[5] = o * u),
              (t[9] = -a),
              (t[2] = v * a - g),
              (t[6] = y + m * a),
              (t[10] = o * s);
          } else if ("ZXY" === e.order) {
            var m = s * u,
              v = s * l,
              g = c * u,
              y = c * l;
            (t[0] = m - y * a),
              (t[4] = -o * l),
              (t[8] = g + v * a),
              (t[1] = v + g * a),
              (t[5] = o * u),
              (t[9] = y - m * a),
              (t[2] = -o * c),
              (t[6] = a),
              (t[10] = o * s);
          } else if ("ZYX" === e.order) {
            var h = o * u,
              p = o * l,
              d = a * u,
              f = a * l;
            (t[0] = s * u),
              (t[4] = d * c - p),
              (t[8] = h * c + f),
              (t[1] = s * l),
              (t[5] = f * c + h),
              (t[9] = p * c - d),
              (t[2] = -c),
              (t[6] = a * s),
              (t[10] = o * s);
          } else if ("YZX" === e.order) {
            var _ = o * s,
              b = o * c,
              x = a * s,
              E = a * c;
            (t[0] = s * u),
              (t[4] = E - _ * l),
              (t[8] = x * l + b),
              (t[1] = l),
              (t[5] = o * u),
              (t[9] = -a * u),
              (t[2] = -c * u),
              (t[6] = b * l + x),
              (t[10] = _ - E * l);
          } else if ("XZY" === e.order) {
            var _ = o * s,
              b = o * c,
              x = a * s,
              E = a * c;
            (t[0] = s * u),
              (t[4] = -l),
              (t[8] = c * u),
              (t[1] = _ * l + E),
              (t[5] = o * u),
              (t[9] = b * l - x),
              (t[2] = x * l - b),
              (t[6] = a * u),
              (t[10] = E * l + _);
          }
          return (
            (t[3] = 0),
            (t[7] = 0),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
          );
        },
        makeRotationFromQuaternion: function (e) {
          var t = this.elements,
            n = e._x,
            r = e._y,
            i = e._z,
            o = e._w,
            a = n + n,
            s = r + r,
            c = i + i,
            u = n * a,
            l = n * s,
            h = n * c,
            p = r * s,
            d = r * c,
            f = i * c,
            m = o * a,
            v = o * s,
            g = o * c;
          return (
            (t[0] = 1 - (p + f)),
            (t[4] = l - g),
            (t[8] = h + v),
            (t[1] = l + g),
            (t[5] = 1 - (u + f)),
            (t[9] = d - m),
            (t[2] = h - v),
            (t[6] = d + m),
            (t[10] = 1 - (u + p)),
            (t[3] = 0),
            (t[7] = 0),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
          );
        },
        lookAt: (function () {
          var e = new l(),
            t = new l(),
            n = new l();
          return function (r, i, o) {
            var a = this.elements;
            return (
              n.subVectors(r, i),
              0 === n.lengthSq() && (n.z = 1),
              n.normalize(),
              e.crossVectors(o, n),
              0 === e.lengthSq() &&
                (1 === Math.abs(o.z) ? (n.x += 1e-4) : (n.z += 1e-4),
                n.normalize(),
                e.crossVectors(o, n)),
              e.normalize(),
              t.crossVectors(n, e),
              (a[0] = e.x),
              (a[4] = t.x),
              (a[8] = n.x),
              (a[1] = e.y),
              (a[5] = t.y),
              (a[9] = n.y),
              (a[2] = e.z),
              (a[6] = t.z),
              (a[10] = n.z),
              this
            );
          };
        })(),
        multiply: function (e, t) {
          return void 0 !== t
            ? (console.warn(
                "THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."
              ),
              this.multiplyMatrices(e, t))
            : this.multiplyMatrices(this, e);
        },
        premultiply: function (e) {
          return this.multiplyMatrices(e, this);
        },
        multiplyMatrices: function (e, t) {
          var n = e.elements,
            r = t.elements,
            i = this.elements,
            o = n[0],
            a = n[4],
            s = n[8],
            c = n[12],
            u = n[1],
            l = n[5],
            h = n[9],
            p = n[13],
            d = n[2],
            f = n[6],
            m = n[10],
            v = n[14],
            g = n[3],
            y = n[7],
            _ = n[11],
            b = n[15],
            x = r[0],
            E = r[4],
            w = r[8],
            M = r[12],
            T = r[1],
            S = r[5],
            N = r[9],
            C = r[13],
            A = r[2],
            R = r[6],
            P = r[10],
            O = r[14],
            D = r[3],
            L = r[7],
            I = r[11],
            U = r[15];
          return (
            (i[0] = o * x + a * T + s * A + c * D),
            (i[4] = o * E + a * S + s * R + c * L),
            (i[8] = o * w + a * N + s * P + c * I),
            (i[12] = o * M + a * C + s * O + c * U),
            (i[1] = u * x + l * T + h * A + p * D),
            (i[5] = u * E + l * S + h * R + p * L),
            (i[9] = u * w + l * N + h * P + p * I),
            (i[13] = u * M + l * C + h * O + p * U),
            (i[2] = d * x + f * T + m * A + v * D),
            (i[6] = d * E + f * S + m * R + v * L),
            (i[10] = d * w + f * N + m * P + v * I),
            (i[14] = d * M + f * C + m * O + v * U),
            (i[3] = g * x + y * T + _ * A + b * D),
            (i[7] = g * E + y * S + _ * R + b * L),
            (i[11] = g * w + y * N + _ * P + b * I),
            (i[15] = g * M + y * C + _ * O + b * U),
            this
          );
        },
        multiplyScalar: function (e) {
          var t = this.elements;
          return (
            (t[0] *= e),
            (t[4] *= e),
            (t[8] *= e),
            (t[12] *= e),
            (t[1] *= e),
            (t[5] *= e),
            (t[9] *= e),
            (t[13] *= e),
            (t[2] *= e),
            (t[6] *= e),
            (t[10] *= e),
            (t[14] *= e),
            (t[3] *= e),
            (t[7] *= e),
            (t[11] *= e),
            (t[15] *= e),
            this
          );
        },
        applyToBufferAttribute: (function () {
          var e = new l();
          return function (t) {
            for (var n = 0, r = t.count; n < r; n++)
              (e.x = t.getX(n)),
                (e.y = t.getY(n)),
                (e.z = t.getZ(n)),
                e.applyMatrix4(this),
                t.setXYZ(n, e.x, e.y, e.z);
            return t;
          };
        })(),
        determinant: function () {
          var e = this.elements,
            t = e[0],
            n = e[4],
            r = e[8],
            i = e[12],
            o = e[1],
            a = e[5],
            s = e[9],
            c = e[13],
            u = e[2],
            l = e[6],
            h = e[10],
            p = e[14];
          return (
            e[3] *
              (+i * s * l -
                r * c * l -
                i * a * h +
                n * c * h +
                r * a * p -
                n * s * p) +
            e[7] *
              (+t * s * p -
                t * c * h +
                i * o * h -
                r * o * p +
                r * c * u -
                i * s * u) +
            e[11] *
              (+t * c * l -
                t * a * p -
                i * o * l +
                n * o * p +
                i * a * u -
                n * c * u) +
            e[15] *
              (-r * a * u -
                t * s * l +
                t * a * h +
                r * o * l -
                n * o * h +
                n * s * u)
          );
        },
        transpose: function () {
          var e,
            t = this.elements;
          return (
            (e = t[1]),
            (t[1] = t[4]),
            (t[4] = e),
            (e = t[2]),
            (t[2] = t[8]),
            (t[8] = e),
            (e = t[6]),
            (t[6] = t[9]),
            (t[9] = e),
            (e = t[3]),
            (t[3] = t[12]),
            (t[12] = e),
            (e = t[7]),
            (t[7] = t[13]),
            (t[13] = e),
            (e = t[11]),
            (t[11] = t[14]),
            (t[14] = e),
            this
          );
        },
        setPosition: function (e) {
          var t = this.elements;
          return (t[12] = e.x), (t[13] = e.y), (t[14] = e.z), this;
        },
        getInverse: function (e, t) {
          var n = this.elements,
            r = e.elements,
            i = r[0],
            o = r[1],
            a = r[2],
            s = r[3],
            c = r[4],
            u = r[5],
            l = r[6],
            h = r[7],
            p = r[8],
            d = r[9],
            f = r[10],
            m = r[11],
            v = r[12],
            g = r[13],
            y = r[14],
            _ = r[15],
            b =
              d * y * h -
              g * f * h +
              g * l * m -
              u * y * m -
              d * l * _ +
              u * f * _,
            x =
              v * f * h -
              p * y * h -
              v * l * m +
              c * y * m +
              p * l * _ -
              c * f * _,
            E =
              p * g * h -
              v * d * h +
              v * u * m -
              c * g * m -
              p * u * _ +
              c * d * _,
            w =
              v * d * l -
              p * g * l -
              v * u * f +
              c * g * f +
              p * u * y -
              c * d * y,
            M = i * b + o * x + a * E + s * w;
          if (0 === M) {
            var T =
              "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
            if (!0 === t) throw new Error(T);
            return console.warn(T), this.identity();
          }
          var S = 1 / M;
          return (
            (n[0] = b * S),
            (n[1] =
              (g * f * s -
                d * y * s -
                g * a * m +
                o * y * m +
                d * a * _ -
                o * f * _) *
              S),
            (n[2] =
              (u * y * s -
                g * l * s +
                g * a * h -
                o * y * h -
                u * a * _ +
                o * l * _) *
              S),
            (n[3] =
              (d * l * s -
                u * f * s -
                d * a * h +
                o * f * h +
                u * a * m -
                o * l * m) *
              S),
            (n[4] = x * S),
            (n[5] =
              (p * y * s -
                v * f * s +
                v * a * m -
                i * y * m -
                p * a * _ +
                i * f * _) *
              S),
            (n[6] =
              (v * l * s -
                c * y * s -
                v * a * h +
                i * y * h +
                c * a * _ -
                i * l * _) *
              S),
            (n[7] =
              (c * f * s -
                p * l * s +
                p * a * h -
                i * f * h -
                c * a * m +
                i * l * m) *
              S),
            (n[8] = E * S),
            (n[9] =
              (v * d * s -
                p * g * s -
                v * o * m +
                i * g * m +
                p * o * _ -
                i * d * _) *
              S),
            (n[10] =
              (c * g * s -
                v * u * s +
                v * o * h -
                i * g * h -
                c * o * _ +
                i * u * _) *
              S),
            (n[11] =
              (p * u * s -
                c * d * s -
                p * o * h +
                i * d * h +
                c * o * m -
                i * u * m) *
              S),
            (n[12] = w * S),
            (n[13] =
              (p * g * a -
                v * d * a +
                v * o * f -
                i * g * f -
                p * o * y +
                i * d * y) *
              S),
            (n[14] =
              (v * u * a -
                c * g * a -
                v * o * l +
                i * g * l +
                c * o * y -
                i * u * y) *
              S),
            (n[15] =
              (c * d * a -
                p * u * a +
                p * o * l -
                i * d * l -
                c * o * f +
                i * u * f) *
              S),
            this
          );
        },
        scale: function (e) {
          var t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z;
          return (
            (t[0] *= n),
            (t[4] *= r),
            (t[8] *= i),
            (t[1] *= n),
            (t[5] *= r),
            (t[9] *= i),
            (t[2] *= n),
            (t[6] *= r),
            (t[10] *= i),
            (t[3] *= n),
            (t[7] *= r),
            (t[11] *= i),
            this
          );
        },
        getMaxScaleOnAxis: function () {
          var e = this.elements,
            t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
            n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
            r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
          return Math.sqrt(Math.max(t, n, r));
        },
        makeTranslation: function (e, t, n) {
          return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
        },
        makeRotationX: function (e) {
          var t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
          );
        },
        makeRotationY: function (e) {
          var t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
          );
        },
        makeRotationZ: function (e) {
          var t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
          );
        },
        makeRotationAxis: function (e, t) {
          var n = Math.cos(t),
            r = Math.sin(t),
            i = 1 - n,
            o = e.x,
            a = e.y,
            s = e.z,
            c = i * o,
            u = i * a;
          return (
            this.set(
              c * o + n,
              c * a - r * s,
              c * s + r * a,
              0,
              c * a + r * s,
              u * a + n,
              u * s - r * o,
              0,
              c * s - r * a,
              u * s + r * o,
              i * s * s + n,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        },
        makeScale: function (e, t, n) {
          return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
        },
        makeShear: function (e, t, n) {
          return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1), this;
        },
        compose: function (e, t, n) {
          return (
            this.makeRotationFromQuaternion(t),
            this.scale(n),
            this.setPosition(e),
            this
          );
        },
        decompose: (function () {
          var e = new l(),
            t = new h();
          return function (n, r, i) {
            var o = this.elements,
              a = e.set(o[0], o[1], o[2]).length(),
              s = e.set(o[4], o[5], o[6]).length(),
              c = e.set(o[8], o[9], o[10]).length();
            this.determinant() < 0 && (a = -a),
              (n.x = o[12]),
              (n.y = o[13]),
              (n.z = o[14]),
              t.copy(this);
            var u = 1 / a,
              l = 1 / s,
              h = 1 / c;
            return (
              (t.elements[0] *= u),
              (t.elements[1] *= u),
              (t.elements[2] *= u),
              (t.elements[4] *= l),
              (t.elements[5] *= l),
              (t.elements[6] *= l),
              (t.elements[8] *= h),
              (t.elements[9] *= h),
              (t.elements[10] *= h),
              r.setFromRotationMatrix(t),
              (i.x = a),
              (i.y = s),
              (i.z = c),
              this
            );
          };
        })(),
        makePerspective: function (e, t, n, r, i, o) {
          void 0 === o &&
            console.warn(
              "THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs."
            );
          var a = this.elements,
            s = (2 * i) / (t - e),
            c = (2 * i) / (n - r),
            u = (t + e) / (t - e),
            l = (n + r) / (n - r),
            h = -(o + i) / (o - i),
            p = (-2 * o * i) / (o - i);
          return (
            (a[0] = s),
            (a[4] = 0),
            (a[8] = u),
            (a[12] = 0),
            (a[1] = 0),
            (a[5] = c),
            (a[9] = l),
            (a[13] = 0),
            (a[2] = 0),
            (a[6] = 0),
            (a[10] = h),
            (a[14] = p),
            (a[3] = 0),
            (a[7] = 0),
            (a[11] = -1),
            (a[15] = 0),
            this
          );
        },
        makeOrthographic: function (e, t, n, r, i, o) {
          var a = this.elements,
            s = 1 / (t - e),
            c = 1 / (n - r),
            u = 1 / (o - i),
            l = (t + e) * s,
            h = (n + r) * c,
            p = (o + i) * u;
          return (
            (a[0] = 2 * s),
            (a[4] = 0),
            (a[8] = 0),
            (a[12] = -l),
            (a[1] = 0),
            (a[5] = 2 * c),
            (a[9] = 0),
            (a[13] = -h),
            (a[2] = 0),
            (a[6] = 0),
            (a[10] = -2 * u),
            (a[14] = -p),
            (a[3] = 0),
            (a[7] = 0),
            (a[11] = 0),
            (a[15] = 1),
            this
          );
        },
        equals: function (e) {
          for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
            if (t[r] !== n[r]) return !1;
          return !0;
        },
        fromArray: function (e, t) {
          void 0 === t && (t = 0);
          for (var n = 0; n < 16; n++) this.elements[n] = e[n + t];
          return this;
        },
        toArray: function (e, t) {
          void 0 === e && (e = []), void 0 === t && (t = 0);
          var n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            (e[t + 9] = n[9]),
            (e[t + 10] = n[10]),
            (e[t + 11] = n[11]),
            (e[t + 12] = n[12]),
            (e[t + 13] = n[13]),
            (e[t + 14] = n[14]),
            (e[t + 15] = n[15]),
            e
          );
        },
      }),
      (p.prototype = Object.create(o.prototype)),
      (p.prototype.constructor = p),
      (p.prototype.isDataTexture = !0),
      (d.prototype = Object.create(o.prototype)),
      (d.prototype.constructor = d),
      (d.prototype.isCubeTexture = !0),
      Object.defineProperty(d.prototype, "images", {
        get: function () {
          return this.image;
        },
        set: function (e) {
          this.image = e;
        },
      });
    var Ls = new o(),
      Is = new d(),
      Us = [],
      ks = [],
      Fs = new Float32Array(16),
      Vs = new Float32Array(9);
    G.prototype.setValue = function (e, t) {
      for (var n = this.seq, r = 0, i = n.length; r !== i; ++r) {
        var o = n[r];
        o.setValue(e, t[o.id]);
      }
    };
    var Bs = /([\w\d_]+)(\])?(\[|\.)?/g;
    (X.prototype.setValue = function (e, t, n) {
      var r = this.map[t];
      void 0 !== r && r.setValue(e, n, this.renderer);
    }),
      (X.prototype.setOptional = function (e, t, n) {
        var r = t[n];
        void 0 !== r && this.setValue(e, n, r);
      }),
      (X.upload = function (e, t, n, r) {
        for (var i = 0, o = t.length; i !== o; ++i) {
          var a = t[i],
            s = n[a.id];
          !1 !== s.needsUpdate && a.setValue(e, s.value, r);
        }
      }),
      (X.seqWithValue = function (e, t) {
        for (var n = [], r = 0, i = e.length; r !== i; ++r) {
          var o = e[r];
          o.id in t && n.push(o);
        }
        return n;
      });
    var zs = {
      aliceblue: 15792383,
      antiquewhite: 16444375,
      aqua: 65535,
      aquamarine: 8388564,
      azure: 15794175,
      beige: 16119260,
      bisque: 16770244,
      black: 0,
      blanchedalmond: 16772045,
      blue: 255,
      blueviolet: 9055202,
      brown: 10824234,
      burlywood: 14596231,
      cadetblue: 6266528,
      chartreuse: 8388352,
      chocolate: 13789470,
      coral: 16744272,
      cornflowerblue: 6591981,
      cornsilk: 16775388,
      crimson: 14423100,
      cyan: 65535,
      darkblue: 139,
      darkcyan: 35723,
      darkgoldenrod: 12092939,
      darkgray: 11119017,
      darkgreen: 25600,
      darkgrey: 11119017,
      darkkhaki: 12433259,
      darkmagenta: 9109643,
      darkolivegreen: 5597999,
      darkorange: 16747520,
      darkorchid: 10040012,
      darkred: 9109504,
      darksalmon: 15308410,
      darkseagreen: 9419919,
      darkslateblue: 4734347,
      darkslategray: 3100495,
      darkslategrey: 3100495,
      darkturquoise: 52945,
      darkviolet: 9699539,
      deeppink: 16716947,
      deepskyblue: 49151,
      dimgray: 6908265,
      dimgrey: 6908265,
      dodgerblue: 2003199,
      firebrick: 11674146,
      floralwhite: 16775920,
      forestgreen: 2263842,
      fuchsia: 16711935,
      gainsboro: 14474460,
      ghostwhite: 16316671,
      gold: 16766720,
      goldenrod: 14329120,
      gray: 8421504,
      green: 32768,
      greenyellow: 11403055,
      grey: 8421504,
      honeydew: 15794160,
      hotpink: 16738740,
      indianred: 13458524,
      indigo: 4915330,
      ivory: 16777200,
      khaki: 15787660,
      lavender: 15132410,
      lavenderblush: 16773365,
      lawngreen: 8190976,
      lemonchiffon: 16775885,
      lightblue: 11393254,
      lightcoral: 15761536,
      lightcyan: 14745599,
      lightgoldenrodyellow: 16448210,
      lightgray: 13882323,
      lightgreen: 9498256,
      lightgrey: 13882323,
      lightpink: 16758465,
      lightsalmon: 16752762,
      lightseagreen: 2142890,
      lightskyblue: 8900346,
      lightslategray: 7833753,
      lightslategrey: 7833753,
      lightsteelblue: 11584734,
      lightyellow: 16777184,
      lime: 65280,
      limegreen: 3329330,
      linen: 16445670,
      magenta: 16711935,
      maroon: 8388608,
      mediumaquamarine: 6737322,
      mediumblue: 205,
      mediumorchid: 12211667,
      mediumpurple: 9662683,
      mediumseagreen: 3978097,
      mediumslateblue: 8087790,
      mediumspringgreen: 64154,
      mediumturquoise: 4772300,
      mediumvioletred: 13047173,
      midnightblue: 1644912,
      mintcream: 16121850,
      mistyrose: 16770273,
      moccasin: 16770229,
      navajowhite: 16768685,
      navy: 128,
      oldlace: 16643558,
      olive: 8421376,
      olivedrab: 7048739,
      orange: 16753920,
      orangered: 16729344,
      orchid: 14315734,
      palegoldenrod: 15657130,
      palegreen: 10025880,
      paleturquoise: 11529966,
      palevioletred: 14381203,
      papayawhip: 16773077,
      peachpuff: 16767673,
      peru: 13468991,
      pink: 16761035,
      plum: 14524637,
      powderblue: 11591910,
      purple: 8388736,
      rebeccapurple: 6697881,
      red: 16711680,
      rosybrown: 12357519,
      royalblue: 4286945,
      saddlebrown: 9127187,
      salmon: 16416882,
      sandybrown: 16032864,
      seagreen: 3050327,
      seashell: 16774638,
      sienna: 10506797,
      silver: 12632256,
      skyblue: 8900331,
      slateblue: 6970061,
      slategray: 7372944,
      slategrey: 7372944,
      snow: 16775930,
      springgreen: 65407,
      steelblue: 4620980,
      tan: 13808780,
      teal: 32896,
      thistle: 14204888,
      tomato: 16737095,
      turquoise: 4251856,
      violet: 15631086,
      wheat: 16113331,
      white: 16777215,
      whitesmoke: 16119285,
      yellow: 16776960,
      yellowgreen: 10145074,
    };
    Object.assign(Y.prototype, {
      isColor: !0,
      r: 1,
      g: 1,
      b: 1,
      set: function (e) {
        return (
          e && e.isColor
            ? this.copy(e)
            : "number" == typeof e
            ? this.setHex(e)
            : "string" == typeof e && this.setStyle(e),
          this
        );
      },
      setScalar: function (e) {
        return (this.r = e), (this.g = e), (this.b = e), this;
      },
      setHex: function (e) {
        return (
          (e = Math.floor(e)),
          (this.r = ((e >> 16) & 255) / 255),
          (this.g = ((e >> 8) & 255) / 255),
          (this.b = (255 & e) / 255),
          this
        );
      },
      setRGB: function (e, t, n) {
        return (this.r = e), (this.g = t), (this.b = n), this;
      },
      setHSL: (function () {
        function e(e, t, n) {
          return (
            n < 0 && (n += 1),
            n > 1 && (n -= 1),
            n < 1 / 6
              ? e + 6 * (t - e) * n
              : n < 0.5
              ? t
              : n < 2 / 3
              ? e + 6 * (t - e) * (2 / 3 - n)
              : e
          );
        }
        return function (t, n, r) {
          if (
            ((t = Os.euclideanModulo(t, 1)),
            (n = Os.clamp(n, 0, 1)),
            (r = Os.clamp(r, 0, 1)),
            0 === n)
          )
            this.r = this.g = this.b = r;
          else {
            var i = r <= 0.5 ? r * (1 + n) : r + n - r * n,
              o = 2 * r - i;
            (this.r = e(o, i, t + 1 / 3)),
              (this.g = e(o, i, t)),
              (this.b = e(o, i, t - 1 / 3));
          }
          return this;
        };
      })(),
      setStyle: function (e) {
        function t(t) {
          void 0 !== t &&
            parseFloat(t) < 1 &&
            console.warn(
              "THREE.Color: Alpha component of " + e + " will be ignored."
            );
        }
        var n;
        if ((n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e))) {
          var r,
            i = n[1],
            o = n[2];
          switch (i) {
            case "rgb":
            case "rgba":
              if (
                (r =
                  /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                    o
                  ))
              )
                return (
                  (this.r = Math.min(255, parseInt(r[1], 10)) / 255),
                  (this.g = Math.min(255, parseInt(r[2], 10)) / 255),
                  (this.b = Math.min(255, parseInt(r[3], 10)) / 255),
                  t(r[5]),
                  this
                );
              if (
                (r =
                  /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                    o
                  ))
              )
                return (
                  (this.r = Math.min(100, parseInt(r[1], 10)) / 100),
                  (this.g = Math.min(100, parseInt(r[2], 10)) / 100),
                  (this.b = Math.min(100, parseInt(r[3], 10)) / 100),
                  t(r[5]),
                  this
                );
              break;
            case "hsl":
            case "hsla":
              if (
                (r =
                  /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                    o
                  ))
              ) {
                var a = parseFloat(r[1]) / 360,
                  s = parseInt(r[2], 10) / 100,
                  c = parseInt(r[3], 10) / 100;
                return t(r[5]), this.setHSL(a, s, c);
              }
          }
        } else if ((n = /^\#([A-Fa-f0-9]+)$/.exec(e))) {
          var u = n[1],
            l = u.length;
          if (3 === l)
            return (
              (this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255),
              (this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255),
              (this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255),
              this
            );
          if (6 === l)
            return (
              (this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255),
              (this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255),
              (this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255),
              this
            );
        }
        if (e && e.length > 0) {
          var u = zs[e];
          void 0 !== u
            ? this.setHex(u)
            : console.warn("THREE.Color: Unknown color " + e);
        }
        return this;
      },
      clone: function () {
        return new this.constructor(this.r, this.g, this.b);
      },
      copy: function (e) {
        return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
      },
      copyGammaToLinear: function (e, t) {
        return (
          void 0 === t && (t = 2),
          (this.r = Math.pow(e.r, t)),
          (this.g = Math.pow(e.g, t)),
          (this.b = Math.pow(e.b, t)),
          this
        );
      },
      copyLinearToGamma: function (e, t) {
        void 0 === t && (t = 2);
        var n = t > 0 ? 1 / t : 1;
        return (
          (this.r = Math.pow(e.r, n)),
          (this.g = Math.pow(e.g, n)),
          (this.b = Math.pow(e.b, n)),
          this
        );
      },
      convertGammaToLinear: function () {
        var e = this.r,
          t = this.g,
          n = this.b;
        return (this.r = e * e), (this.g = t * t), (this.b = n * n), this;
      },
      convertLinearToGamma: function () {
        return (
          (this.r = Math.sqrt(this.r)),
          (this.g = Math.sqrt(this.g)),
          (this.b = Math.sqrt(this.b)),
          this
        );
      },
      getHex: function () {
        return (
          ((255 * this.r) << 16) ^ ((255 * this.g) << 8) ^ ((255 * this.b) << 0)
        );
      },
      getHexString: function () {
        return ("000000" + this.getHex().toString(16)).slice(-6);
      },
      getHSL: function (e) {
        var t,
          n,
          r = e || { h: 0, s: 0, l: 0 },
          i = this.r,
          o = this.g,
          a = this.b,
          s = Math.max(i, o, a),
          c = Math.min(i, o, a),
          u = (c + s) / 2;
        if (c === s) (t = 0), (n = 0);
        else {
          var l = s - c;
          switch (((n = u <= 0.5 ? l / (s + c) : l / (2 - s - c)), s)) {
            case i:
              t = (o - a) / l + (o < a ? 6 : 0);
              break;
            case o:
              t = (a - i) / l + 2;
              break;
            case a:
              t = (i - o) / l + 4;
          }
          t /= 6;
        }
        return (r.h = t), (r.s = n), (r.l = u), r;
      },
      getStyle: function () {
        return (
          "rgb(" +
          ((255 * this.r) | 0) +
          "," +
          ((255 * this.g) | 0) +
          "," +
          ((255 * this.b) | 0) +
          ")"
        );
      },
      offsetHSL: function (e, t, n) {
        var r = this.getHSL();
        return (
          (r.h += e), (r.s += t), (r.l += n), this.setHSL(r.h, r.s, r.l), this
        );
      },
      add: function (e) {
        return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
      },
      addColors: function (e, t) {
        return (
          (this.r = e.r + t.r), (this.g = e.g + t.g), (this.b = e.b + t.b), this
        );
      },
      addScalar: function (e) {
        return (this.r += e), (this.g += e), (this.b += e), this;
      },
      sub: function (e) {
        return (
          (this.r = Math.max(0, this.r - e.r)),
          (this.g = Math.max(0, this.g - e.g)),
          (this.b = Math.max(0, this.b - e.b)),
          this
        );
      },
      multiply: function (e) {
        return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
      },
      multiplyScalar: function (e) {
        return (this.r *= e), (this.g *= e), (this.b *= e), this;
      },
      lerp: function (e, t) {
        return (
          (this.r += (e.r - this.r) * t),
          (this.g += (e.g - this.g) * t),
          (this.b += (e.b - this.b) * t),
          this
        );
      },
      equals: function (e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
      },
      fromArray: function (e, t) {
        return (
          void 0 === t && (t = 0),
          (this.r = e[t]),
          (this.g = e[t + 1]),
          (this.b = e[t + 2]),
          this
        );
      },
      toArray: function (e, t) {
        return (
          void 0 === e && (e = []),
          void 0 === t && (t = 0),
          (e[t] = this.r),
          (e[t + 1] = this.g),
          (e[t + 2] = this.b),
          e
        );
      },
      toJSON: function () {
        return this.getHex();
      },
    });
    var Hs = {
        common: {
          diffuse: { value: new Y(15658734) },
          opacity: { value: 1 },
          map: { value: null },
          offsetRepeat: { value: new a(0, 0, 1, 1) },
          alphaMap: { value: null },
        },
        specularmap: { specularMap: { value: null } },
        envmap: {
          envMap: { value: null },
          flipEnvMap: { value: -1 },
          reflectivity: { value: 1 },
          refractionRatio: { value: 0.98 },
        },
        aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
        lightmap: {
          lightMap: { value: null },
          lightMapIntensity: { value: 1 },
        },
        emissivemap: { emissiveMap: { value: null } },
        bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
        normalmap: {
          normalMap: { value: null },
          normalScale: { value: new i(1, 1) },
        },
        displacementmap: {
          displacementMap: { value: null },
          displacementScale: { value: 1 },
          displacementBias: { value: 0 },
        },
        roughnessmap: { roughnessMap: { value: null } },
        metalnessmap: { metalnessMap: { value: null } },
        gradientmap: { gradientMap: { value: null } },
        fog: {
          fogDensity: { value: 25e-5 },
          fogNear: { value: 1 },
          fogFar: { value: 2e3 },
          fogColor: { value: new Y(16777215) },
        },
        lights: {
          ambientLightColor: { value: [] },
          directionalLights: {
            value: [],
            properties: {
              direction: {},
              color: {},
              shadow: {},
              shadowBias: {},
              shadowRadius: {},
              shadowMapSize: {},
            },
          },
          directionalShadowMap: { value: [] },
          directionalShadowMatrix: { value: [] },
          spotLights: {
            value: [],
            properties: {
              color: {},
              position: {},
              direction: {},
              distance: {},
              coneCos: {},
              penumbraCos: {},
              decay: {},
              shadow: {},
              shadowBias: {},
              shadowRadius: {},
              shadowMapSize: {},
            },
          },
          spotShadowMap: { value: [] },
          spotShadowMatrix: { value: [] },
          pointLights: {
            value: [],
            properties: {
              color: {},
              position: {},
              decay: {},
              distance: {},
              shadow: {},
              shadowBias: {},
              shadowRadius: {},
              shadowMapSize: {},
              shadowCameraNear: {},
              shadowCameraFar: {},
            },
          },
          pointShadowMap: { value: [] },
          pointShadowMatrix: { value: [] },
          hemisphereLights: {
            value: [],
            properties: { direction: {}, skyColor: {}, groundColor: {} },
          },
          rectAreaLights: {
            value: [],
            properties: { color: {}, position: {}, width: {}, height: {} },
          },
        },
        points: {
          diffuse: { value: new Y(15658734) },
          opacity: { value: 1 },
          size: { value: 1 },
          scale: { value: 1 },
          map: { value: null },
          offsetRepeat: { value: new a(0, 0, 1, 1) },
        },
      },
      js = {
        merge: function (e) {
          for (var t = {}, n = 0; n < e.length; n++) {
            var r = this.clone(e[n]);
            for (var i in r) t[i] = r[i];
          }
          return t;
        },
        clone: function (e) {
          var t = {};
          for (var n in e) {
            t[n] = {};
            for (var r in e[n]) {
              var i = e[n][r];
              i &&
              (i.isColor ||
                i.isMatrix3 ||
                i.isMatrix4 ||
                i.isVector2 ||
                i.isVector3 ||
                i.isVector4 ||
                i.isTexture)
                ? (t[n][r] = i.clone())
                : Array.isArray(i)
                ? (t[n][r] = i.slice())
                : (t[n][r] = i);
            }
          }
          return t;
        },
      },
      Gs = {
        alphamap_fragment:
          "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
        alphamap_pars_fragment:
          "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
        alphatest_fragment:
          "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
        aomap_fragment:
          "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
        aomap_pars_fragment:
          "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        begin_vertex: "\nvec3 transformed = vec3( position );\n",
        beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
        bsdfs:
          "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
        bumpmap_pars_fragment:
          "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
        clipping_planes_fragment:
          "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",
        clipping_planes_pars_fragment:
          "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
        clipping_planes_pars_vertex:
          "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
        clipping_planes_vertex:
          "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
        color_fragment:
          "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        color_pars_fragment:
          "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
        color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        common:
          "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",
        cube_uv_reflection_fragment:
          "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
        defaultnormal_vertex:
          "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",
        displacementmap_pars_vertex:
          "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
        displacementmap_vertex:
          "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
        emissivemap_fragment:
          "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
        emissivemap_pars_fragment:
          "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
        encodings_fragment:
          "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
        encodings_pars_fragment:
          "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
        envmap_fragment:
          "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
        envmap_pars_fragment:
          "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
        envmap_pars_vertex:
          "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
        envmap_vertex:
          "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
        fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
        fog_pars_vertex: "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
        fog_fragment:
          "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
        fog_pars_fragment:
          "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
        gradientmap_pars_fragment:
          "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
        lightmap_fragment:
          "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
        lightmap_pars_fragment:
          "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        lights_lambert_vertex:
          "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
        lights_pars:
          "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
        lights_phong_fragment:
          "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
        lights_phong_pars_fragment:
          "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
        lights_physical_fragment:
          "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
        lights_physical_pars_fragment:
          "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
        lights_template:
          "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
        logdepthbuf_fragment:
          "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",
        logdepthbuf_pars_fragment:
          "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
        logdepthbuf_pars_vertex:
          "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
        logdepthbuf_vertex:
          "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",
        map_fragment:
          "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
        map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
        map_particle_fragment:
          "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
        map_particle_pars_fragment:
          "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",
        metalnessmap_fragment:
          "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",
        metalnessmap_pars_fragment:
          "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        morphnormal_vertex:
          "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
        morphtarget_pars_vertex:
          "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        morphtarget_vertex:
          "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
        normal_fragment:
          "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
        normalmap_pars_fragment:
          "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
        packing:
          "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
        premultiplied_alpha_fragment:
          "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
        project_vertex:
          "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",
        dithering_fragment:
          "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",
        dithering_pars_fragment:
          "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",
        roughnessmap_fragment:
          "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",
        roughnessmap_pars_fragment:
          "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        shadowmap_pars_fragment:
          "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
        shadowmap_pars_vertex:
          "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
        shadowmap_vertex:
          "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
        shadowmask_pars_fragment:
          "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
        skinbase_vertex:
          "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        skinning_pars_vertex:
          "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
        skinning_vertex:
          "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",
        skinnormal_vertex:
          "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
        specularmap_fragment:
          "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        specularmap_pars_fragment:
          "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        tonemapping_fragment:
          "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
        tonemapping_pars_fragment:
          "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
        uv_pars_fragment:
          "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
        uv_pars_vertex:
          "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",
        uv_vertex:
          "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
        uv2_pars_fragment:
          "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        uv2_pars_vertex:
          "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
        uv2_vertex:
          "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
        worldpos_vertex:
          "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",
        cube_frag:
          "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
        cube_vert:
          "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
        depth_frag:
          "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
        depth_vert:
          "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
        distanceRGBA_frag:
          "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",
        distanceRGBA_vert:
          "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",
        equirect_frag:
          "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
        equirect_vert:
          "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
        linedashed_frag:
          "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        linedashed_vert:
          "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
        meshbasic_frag:
          "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        meshbasic_vert:
          "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshlambert_frag:
          "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshlambert_vert:
          "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshphong_frag:
          "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshphong_vert:
          "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshphysical_frag:
          "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshphysical_vert:
          "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        normal_frag:
          "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
        normal_vert:
          "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
        points_frag:
          "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        points_vert:
          "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        shadow_frag:
          "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n}\n",
        shadow_vert:
          "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",
      },
      Ws = {
        basic: {
          uniforms: js.merge([
            Hs.common,
            Hs.specularmap,
            Hs.envmap,
            Hs.aomap,
            Hs.lightmap,
            Hs.fog,
          ]),
          vertexShader: Gs.meshbasic_vert,
          fragmentShader: Gs.meshbasic_frag,
        },
        lambert: {
          uniforms: js.merge([
            Hs.common,
            Hs.specularmap,
            Hs.envmap,
            Hs.aomap,
            Hs.lightmap,
            Hs.emissivemap,
            Hs.fog,
            Hs.lights,
            { emissive: { value: new Y(0) } },
          ]),
          vertexShader: Gs.meshlambert_vert,
          fragmentShader: Gs.meshlambert_frag,
        },
        phong: {
          uniforms: js.merge([
            Hs.common,
            Hs.specularmap,
            Hs.envmap,
            Hs.aomap,
            Hs.lightmap,
            Hs.emissivemap,
            Hs.bumpmap,
            Hs.normalmap,
            Hs.displacementmap,
            Hs.gradientmap,
            Hs.fog,
            Hs.lights,
            {
              emissive: { value: new Y(0) },
              specular: { value: new Y(1118481) },
              shininess: { value: 30 },
            },
          ]),
          vertexShader: Gs.meshphong_vert,
          fragmentShader: Gs.meshphong_frag,
        },
        standard: {
          uniforms: js.merge([
            Hs.common,
            Hs.envmap,
            Hs.aomap,
            Hs.lightmap,
            Hs.emissivemap,
            Hs.bumpmap,
            Hs.normalmap,
            Hs.displacementmap,
            Hs.roughnessmap,
            Hs.metalnessmap,
            Hs.fog,
            Hs.lights,
            {
              emissive: { value: new Y(0) },
              roughness: { value: 0.5 },
              metalness: { value: 0.5 },
              envMapIntensity: { value: 1 },
            },
          ]),
          vertexShader: Gs.meshphysical_vert,
          fragmentShader: Gs.meshphysical_frag,
        },
        points: {
          uniforms: js.merge([Hs.points, Hs.fog]),
          vertexShader: Gs.points_vert,
          fragmentShader: Gs.points_frag,
        },
        dashed: {
          uniforms: js.merge([
            Hs.common,
            Hs.fog,
            {
              scale: { value: 1 },
              dashSize: { value: 1 },
              totalSize: { value: 2 },
            },
          ]),
          vertexShader: Gs.linedashed_vert,
          fragmentShader: Gs.linedashed_frag,
        },
        depth: {
          uniforms: js.merge([Hs.common, Hs.displacementmap]),
          vertexShader: Gs.depth_vert,
          fragmentShader: Gs.depth_frag,
        },
        normal: {
          uniforms: js.merge([
            Hs.common,
            Hs.bumpmap,
            Hs.normalmap,
            Hs.displacementmap,
            { opacity: { value: 1 } },
          ]),
          vertexShader: Gs.normal_vert,
          fragmentShader: Gs.normal_frag,
        },
        cube: {
          uniforms: {
            tCube: { value: null },
            tFlip: { value: -1 },
            opacity: { value: 1 },
          },
          vertexShader: Gs.cube_vert,
          fragmentShader: Gs.cube_frag,
        },
        equirect: {
          uniforms: { tEquirect: { value: null } },
          vertexShader: Gs.equirect_vert,
          fragmentShader: Gs.equirect_frag,
        },
        distanceRGBA: {
          uniforms: js.merge([
            Hs.common,
            Hs.displacementmap,
            {
              referencePosition: { value: new l() },
              nearDistance: { value: 1 },
              farDistance: { value: 1e3 },
            },
          ]),
          vertexShader: Gs.distanceRGBA_vert,
          fragmentShader: Gs.distanceRGBA_frag,
        },
        shadow: {
          uniforms: js.merge([
            Hs.lights,
            { color: { value: new Y(0) }, opacity: { value: 1 } },
          ]),
          vertexShader: Gs.shadow_vert,
          fragmentShader: Gs.shadow_frag,
        },
      };
    (Ws.physical = {
      uniforms: js.merge([
        Ws.standard.uniforms,
        { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } },
      ]),
      vertexShader: Gs.meshphysical_vert,
      fragmentShader: Gs.meshphysical_frag,
    }),
      Object.assign(Z.prototype, {
        set: function (e, t) {
          return this.min.copy(e), this.max.copy(t), this;
        },
        setFromPoints: function (e) {
          this.makeEmpty();
          for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
          return this;
        },
        setFromCenterAndSize: (function () {
          var e = new i();
          return function (t, n) {
            var r = e.copy(n).multiplyScalar(0.5);
            return this.min.copy(t).sub(r), this.max.copy(t).add(r), this;
          };
        })(),
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.min.copy(e.min), this.max.copy(e.max), this;
        },
        makeEmpty: function () {
          return (
            (this.min.x = this.min.y = 1 / 0),
            (this.max.x = this.max.y = -1 / 0),
            this
          );
        },
        isEmpty: function () {
          return this.max.x < this.min.x || this.max.y < this.min.y;
        },
        getCenter: function (e) {
          var t = e || new i();
          return this.isEmpty()
            ? t.set(0, 0)
            : t.addVectors(this.min, this.max).multiplyScalar(0.5);
        },
        getSize: function (e) {
          var t = e || new i();
          return this.isEmpty()
            ? t.set(0, 0)
            : t.subVectors(this.max, this.min);
        },
        expandByPoint: function (e) {
          return this.min.min(e), this.max.max(e), this;
        },
        expandByVector: function (e) {
          return this.min.sub(e), this.max.add(e), this;
        },
        expandByScalar: function (e) {
          return this.min.addScalar(-e), this.max.addScalar(e), this;
        },
        containsPoint: function (e) {
          return !(
            e.x < this.min.x ||
            e.x > this.max.x ||
            e.y < this.min.y ||
            e.y > this.max.y
          );
        },
        containsBox: function (e) {
          return (
            this.min.x <= e.min.x &&
            e.max.x <= this.max.x &&
            this.min.y <= e.min.y &&
            e.max.y <= this.max.y
          );
        },
        getParameter: function (e, t) {
          return (t || new i()).set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y)
          );
        },
        intersectsBox: function (e) {
          return !(
            e.max.x < this.min.x ||
            e.min.x > this.max.x ||
            e.max.y < this.min.y ||
            e.min.y > this.max.y
          );
        },
        clampPoint: function (e, t) {
          return (t || new i()).copy(e).clamp(this.min, this.max);
        },
        distanceToPoint: (function () {
          var e = new i();
          return function (t) {
            return e.copy(t).clamp(this.min, this.max).sub(t).length();
          };
        })(),
        intersect: function (e) {
          return this.min.max(e.min), this.max.min(e.max), this;
        },
        union: function (e) {
          return this.min.min(e.min), this.max.max(e.max), this;
        },
        translate: function (e) {
          return this.min.add(e), this.max.add(e), this;
        },
        equals: function (e) {
          return e.min.equals(this.min) && e.max.equals(this.max);
        },
      }),
      (J.prototype = Object.create(o.prototype)),
      (J.prototype.constructor = J);
    var qs = 0;
    Object.assign($.prototype, r.prototype, {
      isMaterial: !0,
      onBeforeCompile: function () {},
      setValues: function (e) {
        if (void 0 !== e)
          for (var t in e) {
            var n = e[t];
            if (void 0 !== n)
              if ("shading" !== t) {
                var r = this[t];
                void 0 !== r
                  ? r && r.isColor
                    ? r.set(n)
                    : r && r.isVector3 && n && n.isVector3
                    ? r.copy(n)
                    : (this[t] = "overdraw" === t ? Number(n) : n)
                  : console.warn(
                      "THREE." +
                        this.type +
                        ": '" +
                        t +
                        "' is not a property of this material."
                    );
              } else
                console.warn(
                  "THREE." +
                    this.type +
                    ": .shading has been removed. Use the boolean .flatShading instead."
                ),
                  (this.flatShading = n === Ao);
            else
              console.warn(
                "THREE.Material: '" + t + "' parameter is undefined."
              );
          }
      },
      toJSON: function (e) {
        function t(e) {
          var t = [];
          for (var n in e) {
            var r = e[n];
            delete r.metadata, t.push(r);
          }
          return t;
        }
        var n = void 0 === e;
        n && (e = { textures: {}, images: {} });
        var r = {
          metadata: {
            version: 4.5,
            type: "Material",
            generator: "Material.toJSON",
          },
        };
        if (
          ((r.uuid = this.uuid),
          (r.type = this.type),
          "" !== this.name && (r.name = this.name),
          this.color && this.color.isColor && (r.color = this.color.getHex()),
          void 0 !== this.roughness && (r.roughness = this.roughness),
          void 0 !== this.metalness && (r.metalness = this.metalness),
          this.emissive &&
            this.emissive.isColor &&
            (r.emissive = this.emissive.getHex()),
          this.specular &&
            this.specular.isColor &&
            (r.specular = this.specular.getHex()),
          void 0 !== this.shininess && (r.shininess = this.shininess),
          void 0 !== this.clearCoat && (r.clearCoat = this.clearCoat),
          void 0 !== this.clearCoatRoughness &&
            (r.clearCoatRoughness = this.clearCoatRoughness),
          this.map && this.map.isTexture && (r.map = this.map.toJSON(e).uuid),
          this.alphaMap &&
            this.alphaMap.isTexture &&
            (r.alphaMap = this.alphaMap.toJSON(e).uuid),
          this.lightMap &&
            this.lightMap.isTexture &&
            (r.lightMap = this.lightMap.toJSON(e).uuid),
          this.bumpMap &&
            this.bumpMap.isTexture &&
            ((r.bumpMap = this.bumpMap.toJSON(e).uuid),
            (r.bumpScale = this.bumpScale)),
          this.normalMap &&
            this.normalMap.isTexture &&
            ((r.normalMap = this.normalMap.toJSON(e).uuid),
            (r.normalScale = this.normalScale.toArray())),
          this.displacementMap &&
            this.displacementMap.isTexture &&
            ((r.displacementMap = this.displacementMap.toJSON(e).uuid),
            (r.displacementScale = this.displacementScale),
            (r.displacementBias = this.displacementBias)),
          this.roughnessMap &&
            this.roughnessMap.isTexture &&
            (r.roughnessMap = this.roughnessMap.toJSON(e).uuid),
          this.metalnessMap &&
            this.metalnessMap.isTexture &&
            (r.metalnessMap = this.metalnessMap.toJSON(e).uuid),
          this.emissiveMap &&
            this.emissiveMap.isTexture &&
            (r.emissiveMap = this.emissiveMap.toJSON(e).uuid),
          this.specularMap &&
            this.specularMap.isTexture &&
            (r.specularMap = this.specularMap.toJSON(e).uuid),
          this.envMap &&
            this.envMap.isTexture &&
            ((r.envMap = this.envMap.toJSON(e).uuid),
            (r.reflectivity = this.reflectivity)),
          this.gradientMap &&
            this.gradientMap.isTexture &&
            (r.gradientMap = this.gradientMap.toJSON(e).uuid),
          void 0 !== this.size && (r.size = this.size),
          void 0 !== this.sizeAttenuation &&
            (r.sizeAttenuation = this.sizeAttenuation),
          this.blending !== Io && (r.blending = this.blending),
          !0 === this.flatShading && (r.flatShading = this.flatShading),
          this.side !== So && (r.side = this.side),
          this.vertexColors !== Po && (r.vertexColors = this.vertexColors),
          this.opacity < 1 && (r.opacity = this.opacity),
          !0 === this.transparent && (r.transparent = this.transparent),
          (r.depthFunc = this.depthFunc),
          (r.depthTest = this.depthTest),
          (r.depthWrite = this.depthWrite),
          !0 === this.dithering && (r.dithering = !0),
          this.alphaTest > 0 && (r.alphaTest = this.alphaTest),
          !0 === this.premultipliedAlpha &&
            (r.premultipliedAlpha = this.premultipliedAlpha),
          !0 === this.wireframe && (r.wireframe = this.wireframe),
          this.wireframeLinewidth > 1 &&
            (r.wireframeLinewidth = this.wireframeLinewidth),
          "round" !== this.wireframeLinecap &&
            (r.wireframeLinecap = this.wireframeLinecap),
          "round" !== this.wireframeLinejoin &&
            (r.wireframeLinejoin = this.wireframeLinejoin),
          !0 === this.morphTargets && (r.morphTargets = !0),
          !0 === this.skinning && (r.skinning = !0),
          !1 === this.visible && (r.visible = !1),
          "{}" !== JSON.stringify(this.userData) &&
            (r.userData = this.userData),
          n)
        ) {
          var i = t(e.textures),
            o = t(e.images);
          i.length > 0 && (r.textures = i), o.length > 0 && (r.images = o);
        }
        return r;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        (this.name = e.name),
          (this.fog = e.fog),
          (this.lights = e.lights),
          (this.blending = e.blending),
          (this.side = e.side),
          (this.flatShading = e.flatShading),
          (this.vertexColors = e.vertexColors),
          (this.opacity = e.opacity),
          (this.transparent = e.transparent),
          (this.blendSrc = e.blendSrc),
          (this.blendDst = e.blendDst),
          (this.blendEquation = e.blendEquation),
          (this.blendSrcAlpha = e.blendSrcAlpha),
          (this.blendDstAlpha = e.blendDstAlpha),
          (this.blendEquationAlpha = e.blendEquationAlpha),
          (this.depthFunc = e.depthFunc),
          (this.depthTest = e.depthTest),
          (this.depthWrite = e.depthWrite),
          (this.colorWrite = e.colorWrite),
          (this.precision = e.precision),
          (this.polygonOffset = e.polygonOffset),
          (this.polygonOffsetFactor = e.polygonOffsetFactor),
          (this.polygonOffsetUnits = e.polygonOffsetUnits),
          (this.dithering = e.dithering),
          (this.alphaTest = e.alphaTest),
          (this.premultipliedAlpha = e.premultipliedAlpha),
          (this.overdraw = e.overdraw),
          (this.visible = e.visible),
          (this.userData = JSON.parse(JSON.stringify(e.userData))),
          (this.clipShadows = e.clipShadows),
          (this.clipIntersection = e.clipIntersection);
        var t = e.clippingPlanes,
          n = null;
        if (null !== t) {
          var r = t.length;
          n = new Array(r);
          for (var i = 0; i !== r; ++i) n[i] = t[i].clone();
        }
        return (this.clippingPlanes = n), this;
      },
      dispose: function () {
        this.dispatchEvent({ type: "dispose" });
      },
    }),
      (ee.prototype = Object.create($.prototype)),
      (ee.prototype.constructor = ee),
      (ee.prototype.isShaderMaterial = !0),
      (ee.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          (this.fragmentShader = e.fragmentShader),
          (this.vertexShader = e.vertexShader),
          (this.uniforms = js.clone(e.uniforms)),
          (this.defines = e.defines),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.lights = e.lights),
          (this.clipping = e.clipping),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          (this.extensions = e.extensions),
          this
        );
      }),
      (ee.prototype.toJSON = function (e) {
        var t = $.prototype.toJSON.call(this, e);
        return (
          (t.uniforms = this.uniforms),
          (t.vertexShader = this.vertexShader),
          (t.fragmentShader = this.fragmentShader),
          t
        );
      }),
      (te.prototype = Object.create($.prototype)),
      (te.prototype.constructor = te),
      (te.prototype.isMeshDepthMaterial = !0),
      (te.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          (this.depthPacking = e.depthPacking),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.map = e.map),
          (this.alphaMap = e.alphaMap),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          this
        );
      }),
      (ne.prototype = Object.create($.prototype)),
      (ne.prototype.constructor = ne),
      (ne.prototype.isMeshDistanceMaterial = !0),
      (ne.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          this.referencePosition.copy(e.referencePosition),
          (this.nearDistance = e.nearDistance),
          (this.farDistance = e.farDistance),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.map = e.map),
          (this.alphaMap = e.alphaMap),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          this
        );
      }),
      Object.assign(re.prototype, {
        isBox3: !0,
        set: function (e, t) {
          return this.min.copy(e), this.max.copy(t), this;
        },
        setFromArray: function (e) {
          for (
            var t = 1 / 0,
              n = 1 / 0,
              r = 1 / 0,
              i = -1 / 0,
              o = -1 / 0,
              a = -1 / 0,
              s = 0,
              c = e.length;
            s < c;
            s += 3
          ) {
            var u = e[s],
              l = e[s + 1],
              h = e[s + 2];
            u < t && (t = u),
              l < n && (n = l),
              h < r && (r = h),
              u > i && (i = u),
              l > o && (o = l),
              h > a && (a = h);
          }
          return this.min.set(t, n, r), this.max.set(i, o, a), this;
        },
        setFromBufferAttribute: function (e) {
          for (
            var t = 1 / 0,
              n = 1 / 0,
              r = 1 / 0,
              i = -1 / 0,
              o = -1 / 0,
              a = -1 / 0,
              s = 0,
              c = e.count;
            s < c;
            s++
          ) {
            var u = e.getX(s),
              l = e.getY(s),
              h = e.getZ(s);
            u < t && (t = u),
              l < n && (n = l),
              h < r && (r = h),
              u > i && (i = u),
              l > o && (o = l),
              h > a && (a = h);
          }
          return this.min.set(t, n, r), this.max.set(i, o, a), this;
        },
        setFromPoints: function (e) {
          this.makeEmpty();
          for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
          return this;
        },
        setFromCenterAndSize: (function () {
          var e = new l();
          return function (t, n) {
            var r = e.copy(n).multiplyScalar(0.5);
            return this.min.copy(t).sub(r), this.max.copy(t).add(r), this;
          };
        })(),
        setFromObject: function (e) {
          return this.makeEmpty(), this.expandByObject(e);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.min.copy(e.min), this.max.copy(e.max), this;
        },
        makeEmpty: function () {
          return (
            (this.min.x = this.min.y = this.min.z = 1 / 0),
            (this.max.x = this.max.y = this.max.z = -1 / 0),
            this
          );
        },
        isEmpty: function () {
          return (
            this.max.x < this.min.x ||
            this.max.y < this.min.y ||
            this.max.z < this.min.z
          );
        },
        getCenter: function (e) {
          var t = e || new l();
          return this.isEmpty()
            ? t.set(0, 0, 0)
            : t.addVectors(this.min, this.max).multiplyScalar(0.5);
        },
        getSize: function (e) {
          var t = e || new l();
          return this.isEmpty()
            ? t.set(0, 0, 0)
            : t.subVectors(this.max, this.min);
        },
        expandByPoint: function (e) {
          return this.min.min(e), this.max.max(e), this;
        },
        expandByVector: function (e) {
          return this.min.sub(e), this.max.add(e), this;
        },
        expandByScalar: function (e) {
          return this.min.addScalar(-e), this.max.addScalar(e), this;
        },
        expandByObject: (function () {
          var e = new l();
          return function (t) {
            var n = this;
            return (
              t.updateMatrixWorld(!0),
              t.traverse(function (t) {
                var r,
                  i,
                  o = t.geometry;
                if (void 0 !== o)
                  if (o.isGeometry) {
                    var a = o.vertices;
                    for (r = 0, i = a.length; r < i; r++)
                      e.copy(a[r]),
                        e.applyMatrix4(t.matrixWorld),
                        n.expandByPoint(e);
                  } else if (o.isBufferGeometry) {
                    var s = o.attributes.position;
                    if (void 0 !== s)
                      for (r = 0, i = s.count; r < i; r++)
                        e.fromBufferAttribute(s, r).applyMatrix4(t.matrixWorld),
                          n.expandByPoint(e);
                  }
              }),
              this
            );
          };
        })(),
        containsPoint: function (e) {
          return !(
            e.x < this.min.x ||
            e.x > this.max.x ||
            e.y < this.min.y ||
            e.y > this.max.y ||
            e.z < this.min.z ||
            e.z > this.max.z
          );
        },
        containsBox: function (e) {
          return (
            this.min.x <= e.min.x &&
            e.max.x <= this.max.x &&
            this.min.y <= e.min.y &&
            e.max.y <= this.max.y &&
            this.min.z <= e.min.z &&
            e.max.z <= this.max.z
          );
        },
        getParameter: function (e, t) {
          return (t || new l()).set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y),
            (e.z - this.min.z) / (this.max.z - this.min.z)
          );
        },
        intersectsBox: function (e) {
          return !(
            e.max.x < this.min.x ||
            e.min.x > this.max.x ||
            e.max.y < this.min.y ||
            e.min.y > this.max.y ||
            e.max.z < this.min.z ||
            e.min.z > this.max.z
          );
        },
        intersectsSphere: (function () {
          var e = new l();
          return function (t) {
            return (
              this.clampPoint(t.center, e),
              e.distanceToSquared(t.center) <= t.radius * t.radius
            );
          };
        })(),
        intersectsPlane: function (e) {
          var t, n;
          return (
            e.normal.x > 0
              ? ((t = e.normal.x * this.min.x), (n = e.normal.x * this.max.x))
              : ((t = e.normal.x * this.max.x), (n = e.normal.x * this.min.x)),
            e.normal.y > 0
              ? ((t += e.normal.y * this.min.y), (n += e.normal.y * this.max.y))
              : ((t += e.normal.y * this.max.y),
                (n += e.normal.y * this.min.y)),
            e.normal.z > 0
              ? ((t += e.normal.z * this.min.z), (n += e.normal.z * this.max.z))
              : ((t += e.normal.z * this.max.z),
                (n += e.normal.z * this.min.z)),
            t <= e.constant && n >= e.constant
          );
        },
        clampPoint: function (e, t) {
          return (t || new l()).copy(e).clamp(this.min, this.max);
        },
        distanceToPoint: (function () {
          var e = new l();
          return function (t) {
            return e.copy(t).clamp(this.min, this.max).sub(t).length();
          };
        })(),
        getBoundingSphere: (function () {
          var e = new l();
          return function (t) {
            var n = t || new ie();
            return (
              this.getCenter(n.center),
              (n.radius = 0.5 * this.getSize(e).length()),
              n
            );
          };
        })(),
        intersect: function (e) {
          return (
            this.min.max(e.min),
            this.max.min(e.max),
            this.isEmpty() && this.makeEmpty(),
            this
          );
        },
        union: function (e) {
          return this.min.min(e.min), this.max.max(e.max), this;
        },
        applyMatrix4: (function () {
          var e = [
            new l(),
            new l(),
            new l(),
            new l(),
            new l(),
            new l(),
            new l(),
            new l(),
          ];
          return function (t) {
            return this.isEmpty()
              ? this
              : (e[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
                e[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
                e[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
                e[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
                e[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
                e[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
                e[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
                e[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
                this.setFromPoints(e),
                this);
          };
        })(),
        translate: function (e) {
          return this.min.add(e), this.max.add(e), this;
        },
        equals: function (e) {
          return e.min.equals(this.min) && e.max.equals(this.max);
        },
      }),
      Object.assign(ie.prototype, {
        set: function (e, t) {
          return this.center.copy(e), (this.radius = t), this;
        },
        setFromPoints: (function () {
          var e = new re();
          return function (t, n) {
            var r = this.center;
            void 0 !== n ? r.copy(n) : e.setFromPoints(t).getCenter(r);
            for (var i = 0, o = 0, a = t.length; o < a; o++)
              i = Math.max(i, r.distanceToSquared(t[o]));
            return (this.radius = Math.sqrt(i)), this;
          };
        })(),
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.center.copy(e.center), (this.radius = e.radius), this;
        },
        empty: function () {
          return this.radius <= 0;
        },
        containsPoint: function (e) {
          return e.distanceToSquared(this.center) <= this.radius * this.radius;
        },
        distanceToPoint: function (e) {
          return e.distanceTo(this.center) - this.radius;
        },
        intersectsSphere: function (e) {
          var t = this.radius + e.radius;
          return e.center.distanceToSquared(this.center) <= t * t;
        },
        intersectsBox: function (e) {
          return e.intersectsSphere(this);
        },
        intersectsPlane: function (e) {
          return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
        },
        clampPoint: function (e, t) {
          var n = this.center.distanceToSquared(e),
            r = t || new l();
          return (
            r.copy(e),
            n > this.radius * this.radius &&
              (r.sub(this.center).normalize(),
              r.multiplyScalar(this.radius).add(this.center)),
            r
          );
        },
        getBoundingBox: function (e) {
          var t = e || new re();
          return (
            t.set(this.center, this.center), t.expandByScalar(this.radius), t
          );
        },
        applyMatrix4: function (e) {
          return (
            this.center.applyMatrix4(e),
            (this.radius = this.radius * e.getMaxScaleOnAxis()),
            this
          );
        },
        translate: function (e) {
          return this.center.add(e), this;
        },
        equals: function (e) {
          return e.center.equals(this.center) && e.radius === this.radius;
        },
      }),
      Object.assign(oe.prototype, {
        isMatrix3: !0,
        set: function (e, t, n, r, i, o, a, s, c) {
          var u = this.elements;
          return (
            (u[0] = e),
            (u[1] = r),
            (u[2] = a),
            (u[3] = t),
            (u[4] = i),
            (u[5] = s),
            (u[6] = n),
            (u[7] = o),
            (u[8] = c),
            this
          );
        },
        identity: function () {
          return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        },
        clone: function () {
          return new this.constructor().fromArray(this.elements);
        },
        copy: function (e) {
          var t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            this
          );
        },
        setFromMatrix4: function (e) {
          var t = e.elements;
          return (
            this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
          );
        },
        applyToBufferAttribute: (function () {
          var e = new l();
          return function (t) {
            for (var n = 0, r = t.count; n < r; n++)
              (e.x = t.getX(n)),
                (e.y = t.getY(n)),
                (e.z = t.getZ(n)),
                e.applyMatrix3(this),
                t.setXYZ(n, e.x, e.y, e.z);
            return t;
          };
        })(),
        multiply: function (e) {
          return this.multiplyMatrices(this, e);
        },
        premultiply: function (e) {
          return this.multiplyMatrices(e, this);
        },
        multiplyMatrices: function (e, t) {
          var n = e.elements,
            r = t.elements,
            i = this.elements,
            o = n[0],
            a = n[3],
            s = n[6],
            c = n[1],
            u = n[4],
            l = n[7],
            h = n[2],
            p = n[5],
            d = n[8],
            f = r[0],
            m = r[3],
            v = r[6],
            g = r[1],
            y = r[4],
            _ = r[7],
            b = r[2],
            x = r[5],
            E = r[8];
          return (
            (i[0] = o * f + a * g + s * b),
            (i[3] = o * m + a * y + s * x),
            (i[6] = o * v + a * _ + s * E),
            (i[1] = c * f + u * g + l * b),
            (i[4] = c * m + u * y + l * x),
            (i[7] = c * v + u * _ + l * E),
            (i[2] = h * f + p * g + d * b),
            (i[5] = h * m + p * y + d * x),
            (i[8] = h * v + p * _ + d * E),
            this
          );
        },
        multiplyScalar: function (e) {
          var t = this.elements;
          return (
            (t[0] *= e),
            (t[3] *= e),
            (t[6] *= e),
            (t[1] *= e),
            (t[4] *= e),
            (t[7] *= e),
            (t[2] *= e),
            (t[5] *= e),
            (t[8] *= e),
            this
          );
        },
        determinant: function () {
          var e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            o = e[4],
            a = e[5],
            s = e[6],
            c = e[7],
            u = e[8];
          return (
            t * o * u -
            t * a * c -
            n * i * u +
            n * a * s +
            r * i * c -
            r * o * s
          );
        },
        getInverse: function (e, t) {
          e &&
            e.isMatrix4 &&
            console.error(
              "THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument."
            );
          var n = e.elements,
            r = this.elements,
            i = n[0],
            o = n[1],
            a = n[2],
            s = n[3],
            c = n[4],
            u = n[5],
            l = n[6],
            h = n[7],
            p = n[8],
            d = p * c - u * h,
            f = u * l - p * s,
            m = h * s - c * l,
            v = i * d + o * f + a * m;
          if (0 === v) {
            var g =
              "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
            if (!0 === t) throw new Error(g);
            return console.warn(g), this.identity();
          }
          var y = 1 / v;
          return (
            (r[0] = d * y),
            (r[1] = (a * h - p * o) * y),
            (r[2] = (u * o - a * c) * y),
            (r[3] = f * y),
            (r[4] = (p * i - a * l) * y),
            (r[5] = (a * s - u * i) * y),
            (r[6] = m * y),
            (r[7] = (o * l - h * i) * y),
            (r[8] = (c * i - o * s) * y),
            this
          );
        },
        transpose: function () {
          var e,
            t = this.elements;
          return (
            (e = t[1]),
            (t[1] = t[3]),
            (t[3] = e),
            (e = t[2]),
            (t[2] = t[6]),
            (t[6] = e),
            (e = t[5]),
            (t[5] = t[7]),
            (t[7] = e),
            this
          );
        },
        getNormalMatrix: function (e) {
          return this.setFromMatrix4(e).getInverse(this).transpose();
        },
        transposeIntoArray: function (e) {
          var t = this.elements;
          return (
            (e[0] = t[0]),
            (e[1] = t[3]),
            (e[2] = t[6]),
            (e[3] = t[1]),
            (e[4] = t[4]),
            (e[5] = t[7]),
            (e[6] = t[2]),
            (e[7] = t[5]),
            (e[8] = t[8]),
            this
          );
        },
        equals: function (e) {
          for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
            if (t[r] !== n[r]) return !1;
          return !0;
        },
        fromArray: function (e, t) {
          void 0 === t && (t = 0);
          for (var n = 0; n < 9; n++) this.elements[n] = e[n + t];
          return this;
        },
        toArray: function (e, t) {
          void 0 === e && (e = []), void 0 === t && (t = 0);
          var n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            e
          );
        },
      }),
      Object.assign(ae.prototype, {
        set: function (e, t) {
          return this.normal.copy(e), (this.constant = t), this;
        },
        setComponents: function (e, t, n, r) {
          return this.normal.set(e, t, n), (this.constant = r), this;
        },
        setFromNormalAndCoplanarPoint: function (e, t) {
          return (
            this.normal.copy(e), (this.constant = -t.dot(this.normal)), this
          );
        },
        setFromCoplanarPoints: (function () {
          var e = new l(),
            t = new l();
          return function (n, r, i) {
            var o = e.subVectors(i, r).cross(t.subVectors(n, r)).normalize();
            return this.setFromNormalAndCoplanarPoint(o, n), this;
          };
        })(),
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.normal.copy(e.normal), (this.constant = e.constant), this;
        },
        normalize: function () {
          var e = 1 / this.normal.length();
          return this.normal.multiplyScalar(e), (this.constant *= e), this;
        },
        negate: function () {
          return (this.constant *= -1), this.normal.negate(), this;
        },
        distanceToPoint: function (e) {
          return this.normal.dot(e) + this.constant;
        },
        distanceToSphere: function (e) {
          return this.distanceToPoint(e.center) - e.radius;
        },
        projectPoint: function (e, t) {
          return (t || new l())
            .copy(this.normal)
            .multiplyScalar(-this.distanceToPoint(e))
            .add(e);
        },
        intersectLine: (function () {
          var e = new l();
          return function (t, n) {
            var r = n || new l(),
              i = t.delta(e),
              o = this.normal.dot(i);
            if (0 !== o) {
              var a = -(t.start.dot(this.normal) + this.constant) / o;
              if (!(a < 0 || a > 1))
                return r.copy(i).multiplyScalar(a).add(t.start);
            } else if (0 === this.distanceToPoint(t.start))
              return r.copy(t.start);
          };
        })(),
        intersectsLine: function (e) {
          var t = this.distanceToPoint(e.start),
            n = this.distanceToPoint(e.end);
          return (t < 0 && n > 0) || (n < 0 && t > 0);
        },
        intersectsBox: function (e) {
          return e.intersectsPlane(this);
        },
        intersectsSphere: function (e) {
          return e.intersectsPlane(this);
        },
        coplanarPoint: function (e) {
          return (e || new l())
            .copy(this.normal)
            .multiplyScalar(-this.constant);
        },
        applyMatrix4: (function () {
          var e = new l(),
            t = new oe();
          return function (n, r) {
            var i = r || t.getNormalMatrix(n),
              o = this.coplanarPoint(e).applyMatrix4(n),
              a = this.normal.applyMatrix3(i).normalize();
            return (this.constant = -o.dot(a)), this;
          };
        })(),
        translate: function (e) {
          return (this.constant -= e.dot(this.normal)), this;
        },
        equals: function (e) {
          return e.normal.equals(this.normal) && e.constant === this.constant;
        },
      }),
      Object.assign(se.prototype, {
        set: function (e, t, n, r, i, o) {
          var a = this.planes;
          return (
            a[0].copy(e),
            a[1].copy(t),
            a[2].copy(n),
            a[3].copy(r),
            a[4].copy(i),
            a[5].copy(o),
            this
          );
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
          return this;
        },
        setFromMatrix: function (e) {
          var t = this.planes,
            n = e.elements,
            r = n[0],
            i = n[1],
            o = n[2],
            a = n[3],
            s = n[4],
            c = n[5],
            u = n[6],
            l = n[7],
            h = n[8],
            p = n[9],
            d = n[10],
            f = n[11],
            m = n[12],
            v = n[13],
            g = n[14],
            y = n[15];
          return (
            t[0].setComponents(a - r, l - s, f - h, y - m).normalize(),
            t[1].setComponents(a + r, l + s, f + h, y + m).normalize(),
            t[2].setComponents(a + i, l + c, f + p, y + v).normalize(),
            t[3].setComponents(a - i, l - c, f - p, y - v).normalize(),
            t[4].setComponents(a - o, l - u, f - d, y - g).normalize(),
            t[5].setComponents(a + o, l + u, f + d, y + g).normalize(),
            this
          );
        },
        intersectsObject: (function () {
          var e = new ie();
          return function (t) {
            var n = t.geometry;
            return (
              null === n.boundingSphere && n.computeBoundingSphere(),
              e.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),
              this.intersectsSphere(e)
            );
          };
        })(),
        intersectsSprite: (function () {
          var e = new ie();
          return function (t) {
            return (
              e.center.set(0, 0, 0),
              (e.radius = 0.7071067811865476),
              e.applyMatrix4(t.matrixWorld),
              this.intersectsSphere(e)
            );
          };
        })(),
        intersectsSphere: function (e) {
          for (
            var t = this.planes, n = e.center, r = -e.radius, i = 0;
            i < 6;
            i++
          ) {
            if (t[i].distanceToPoint(n) < r) return !1;
          }
          return !0;
        },
        intersectsBox: (function () {
          var e = new l(),
            t = new l();
          return function (n) {
            for (var r = this.planes, i = 0; i < 6; i++) {
              var o = r[i];
              (e.x = o.normal.x > 0 ? n.min.x : n.max.x),
                (t.x = o.normal.x > 0 ? n.max.x : n.min.x),
                (e.y = o.normal.y > 0 ? n.min.y : n.max.y),
                (t.y = o.normal.y > 0 ? n.max.y : n.min.y),
                (e.z = o.normal.z > 0 ? n.min.z : n.max.z),
                (t.z = o.normal.z > 0 ? n.max.z : n.min.z);
              var a = o.distanceToPoint(e),
                s = o.distanceToPoint(t);
              if (a < 0 && s < 0) return !1;
            }
            return !0;
          };
        })(),
        containsPoint: function (e) {
          for (var t = this.planes, n = 0; n < 6; n++)
            if (t[n].distanceToPoint(e) < 0) return !1;
          return !0;
        },
      }),
      (le.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"]),
      (le.DefaultOrder = "XYZ"),
      Object.defineProperties(le.prototype, {
        x: {
          get: function () {
            return this._x;
          },
          set: function (e) {
            (this._x = e), this.onChangeCallback();
          },
        },
        y: {
          get: function () {
            return this._y;
          },
          set: function (e) {
            (this._y = e), this.onChangeCallback();
          },
        },
        z: {
          get: function () {
            return this._z;
          },
          set: function (e) {
            (this._z = e), this.onChangeCallback();
          },
        },
        order: {
          get: function () {
            return this._order;
          },
          set: function (e) {
            (this._order = e), this.onChangeCallback();
          },
        },
      }),
      Object.assign(le.prototype, {
        isEuler: !0,
        set: function (e, t, n, r) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = r || this._order),
            this.onChangeCallback(),
            this
          );
        },
        clone: function () {
          return new this.constructor(this._x, this._y, this._z, this._order);
        },
        copy: function (e) {
          return (
            (this._x = e._x),
            (this._y = e._y),
            (this._z = e._z),
            (this._order = e._order),
            this.onChangeCallback(),
            this
          );
        },
        setFromRotationMatrix: function (e, t, n) {
          var r = Os.clamp,
            i = e.elements,
            o = i[0],
            a = i[4],
            s = i[8],
            c = i[1],
            u = i[5],
            l = i[9],
            h = i[2],
            p = i[6],
            d = i[10];
          return (
            (t = t || this._order),
            "XYZ" === t
              ? ((this._y = Math.asin(r(s, -1, 1))),
                Math.abs(s) < 0.99999
                  ? ((this._x = Math.atan2(-l, d)),
                    (this._z = Math.atan2(-a, o)))
                  : ((this._x = Math.atan2(p, u)), (this._z = 0)))
              : "YXZ" === t
              ? ((this._x = Math.asin(-r(l, -1, 1))),
                Math.abs(l) < 0.99999
                  ? ((this._y = Math.atan2(s, d)), (this._z = Math.atan2(c, u)))
                  : ((this._y = Math.atan2(-h, o)), (this._z = 0)))
              : "ZXY" === t
              ? ((this._x = Math.asin(r(p, -1, 1))),
                Math.abs(p) < 0.99999
                  ? ((this._y = Math.atan2(-h, d)),
                    (this._z = Math.atan2(-a, u)))
                  : ((this._y = 0), (this._z = Math.atan2(c, o))))
              : "ZYX" === t
              ? ((this._y = Math.asin(-r(h, -1, 1))),
                Math.abs(h) < 0.99999
                  ? ((this._x = Math.atan2(p, d)), (this._z = Math.atan2(c, o)))
                  : ((this._x = 0), (this._z = Math.atan2(-a, u))))
              : "YZX" === t
              ? ((this._z = Math.asin(r(c, -1, 1))),
                Math.abs(c) < 0.99999
                  ? ((this._x = Math.atan2(-l, u)),
                    (this._y = Math.atan2(-h, o)))
                  : ((this._x = 0), (this._y = Math.atan2(s, d))))
              : "XZY" === t
              ? ((this._z = Math.asin(-r(a, -1, 1))),
                Math.abs(a) < 0.99999
                  ? ((this._x = Math.atan2(p, u)), (this._y = Math.atan2(s, o)))
                  : ((this._x = Math.atan2(-l, d)), (this._y = 0)))
              : console.warn(
                  "THREE.Euler: .setFromRotationMatrix() given unsupported order: " +
                    t
                ),
            (this._order = t),
            !1 !== n && this.onChangeCallback(),
            this
          );
        },
        setFromQuaternion: (function () {
          var e = new h();
          return function (t, n, r) {
            return (
              e.makeRotationFromQuaternion(t),
              this.setFromRotationMatrix(e, n, r)
            );
          };
        })(),
        setFromVector3: function (e, t) {
          return this.set(e.x, e.y, e.z, t || this._order);
        },
        reorder: (function () {
          var e = new u();
          return function (t) {
            return e.setFromEuler(this), this.setFromQuaternion(e, t);
          };
        })(),
        equals: function (e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._order === this._order
          );
        },
        fromArray: function (e) {
          return (
            (this._x = e[0]),
            (this._y = e[1]),
            (this._z = e[2]),
            void 0 !== e[3] && (this._order = e[3]),
            this.onChangeCallback(),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._order),
            e
          );
        },
        toVector3: function (e) {
          return e
            ? e.set(this._x, this._y, this._z)
            : new l(this._x, this._y, this._z);
        },
        onChange: function (e) {
          return (this.onChangeCallback = e), this;
        },
        onChangeCallback: function () {},
      }),
      Object.assign(he.prototype, {
        set: function (e) {
          this.mask = (1 << e) | 0;
        },
        enable: function (e) {
          this.mask |= (1 << e) | 0;
        },
        toggle: function (e) {
          this.mask ^= (1 << e) | 0;
        },
        disable: function (e) {
          this.mask &= ~((1 << e) | 0);
        },
        test: function (e) {
          return 0 != (this.mask & e.mask);
        },
      });
    var Xs = 0;
    (pe.DefaultUp = new l(0, 1, 0)),
      (pe.DefaultMatrixAutoUpdate = !0),
      Object.assign(pe.prototype, r.prototype, {
        isObject3D: !0,
        onBeforeRender: function () {},
        onAfterRender: function () {},
        applyMatrix: function (e) {
          this.matrix.multiplyMatrices(e, this.matrix),
            this.matrix.decompose(this.position, this.quaternion, this.scale);
        },
        applyQuaternion: function (e) {
          return this.quaternion.premultiply(e), this;
        },
        setRotationFromAxisAngle: function (e, t) {
          this.quaternion.setFromAxisAngle(e, t);
        },
        setRotationFromEuler: function (e) {
          this.quaternion.setFromEuler(e, !0);
        },
        setRotationFromMatrix: function (e) {
          this.quaternion.setFromRotationMatrix(e);
        },
        setRotationFromQuaternion: function (e) {
          this.quaternion.copy(e);
        },
        rotateOnAxis: (function () {
          var e = new u();
          return function (t, n) {
            return e.setFromAxisAngle(t, n), this.quaternion.multiply(e), this;
          };
        })(),
        rotateX: (function () {
          var e = new l(1, 0, 0);
          return function (t) {
            return this.rotateOnAxis(e, t);
          };
        })(),
        rotateY: (function () {
          var e = new l(0, 1, 0);
          return function (t) {
            return this.rotateOnAxis(e, t);
          };
        })(),
        rotateZ: (function () {
          var e = new l(0, 0, 1);
          return function (t) {
            return this.rotateOnAxis(e, t);
          };
        })(),
        translateOnAxis: (function () {
          var e = new l();
          return function (t, n) {
            return (
              e.copy(t).applyQuaternion(this.quaternion),
              this.position.add(e.multiplyScalar(n)),
              this
            );
          };
        })(),
        translateX: (function () {
          var e = new l(1, 0, 0);
          return function (t) {
            return this.translateOnAxis(e, t);
          };
        })(),
        translateY: (function () {
          var e = new l(0, 1, 0);
          return function (t) {
            return this.translateOnAxis(e, t);
          };
        })(),
        translateZ: (function () {
          var e = new l(0, 0, 1);
          return function (t) {
            return this.translateOnAxis(e, t);
          };
        })(),
        localToWorld: function (e) {
          return e.applyMatrix4(this.matrixWorld);
        },
        worldToLocal: (function () {
          var e = new h();
          return function (t) {
            return t.applyMatrix4(e.getInverse(this.matrixWorld));
          };
        })(),
        lookAt: (function () {
          var e = new h();
          return function (t) {
            this.isCamera
              ? e.lookAt(this.position, t, this.up)
              : e.lookAt(t, this.position, this.up),
              this.quaternion.setFromRotationMatrix(e);
          };
        })(),
        add: function (e) {
          if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
            return this;
          }
          return e === this
            ? (console.error(
                "THREE.Object3D.add: object can't be added as a child of itself.",
                e
              ),
              this)
            : (e && e.isObject3D
                ? (null !== e.parent && e.parent.remove(e),
                  (e.parent = this),
                  e.dispatchEvent({ type: "added" }),
                  this.children.push(e))
                : console.error(
                    "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                    e
                  ),
              this);
        },
        remove: function (e) {
          if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++)
              this.remove(arguments[t]);
            return this;
          }
          var n = this.children.indexOf(e);
          return (
            -1 !== n &&
              ((e.parent = null),
              e.dispatchEvent({ type: "removed" }),
              this.children.splice(n, 1)),
            this
          );
        },
        getObjectById: function (e) {
          return this.getObjectByProperty("id", e);
        },
        getObjectByName: function (e) {
          return this.getObjectByProperty("name", e);
        },
        getObjectByProperty: function (e, t) {
          if (this[e] === t) return this;
          for (var n = 0, r = this.children.length; n < r; n++) {
            var i = this.children[n],
              o = i.getObjectByProperty(e, t);
            if (void 0 !== o) return o;
          }
        },
        getWorldPosition: function (e) {
          var t = e || new l();
          return (
            this.updateMatrixWorld(!0),
            t.setFromMatrixPosition(this.matrixWorld)
          );
        },
        getWorldQuaternion: (function () {
          var e = new l(),
            t = new l();
          return function (n) {
            var r = n || new u();
            return (
              this.updateMatrixWorld(!0), this.matrixWorld.decompose(e, r, t), r
            );
          };
        })(),
        getWorldRotation: (function () {
          var e = new u();
          return function (t) {
            var n = t || new le();
            return (
              this.getWorldQuaternion(e),
              n.setFromQuaternion(e, this.rotation.order, !1)
            );
          };
        })(),
        getWorldScale: (function () {
          var e = new l(),
            t = new u();
          return function (n) {
            var r = n || new l();
            return (
              this.updateMatrixWorld(!0), this.matrixWorld.decompose(e, t, r), r
            );
          };
        })(),
        getWorldDirection: (function () {
          var e = new u();
          return function (t) {
            var n = t || new l();
            return (
              this.getWorldQuaternion(e), n.set(0, 0, 1).applyQuaternion(e)
            );
          };
        })(),
        raycast: function () {},
        traverse: function (e) {
          e(this);
          for (var t = this.children, n = 0, r = t.length; n < r; n++)
            t[n].traverse(e);
        },
        traverseVisible: function (e) {
          if (!1 !== this.visible) {
            e(this);
            for (var t = this.children, n = 0, r = t.length; n < r; n++)
              t[n].traverseVisible(e);
          }
        },
        traverseAncestors: function (e) {
          var t = this.parent;
          null !== t && (e(t), t.traverseAncestors(e));
        },
        updateMatrix: function () {
          this.matrix.compose(this.position, this.quaternion, this.scale),
            (this.matrixWorldNeedsUpdate = !0);
        },
        updateMatrixWorld: function (e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) &&
              (null === this.parent
                ? this.matrixWorld.copy(this.matrix)
                : this.matrixWorld.multiplyMatrices(
                    this.parent.matrixWorld,
                    this.matrix
                  ),
              (this.matrixWorldNeedsUpdate = !1),
              (e = !0));
          for (var t = this.children, n = 0, r = t.length; n < r; n++)
            t[n].updateMatrixWorld(e);
        },
        toJSON: function (e) {
          function t(t, n) {
            return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid;
          }
          function n(e) {
            var t = [];
            for (var n in e) {
              var r = e[n];
              delete r.metadata, t.push(r);
            }
            return t;
          }
          var r = void 0 === e || "" === e,
            i = {};
          r &&
            ((e = { geometries: {}, materials: {}, textures: {}, images: {} }),
            (i.metadata = {
              version: 4.5,
              type: "Object",
              generator: "Object3D.toJSON",
            }));
          var o = {};
          if (
            ((o.uuid = this.uuid),
            (o.type = this.type),
            "" !== this.name && (o.name = this.name),
            !0 === this.castShadow && (o.castShadow = !0),
            !0 === this.receiveShadow && (o.receiveShadow = !0),
            !1 === this.visible && (o.visible = !1),
            "{}" !== JSON.stringify(this.userData) &&
              (o.userData = this.userData),
            (o.matrix = this.matrix.toArray()),
            void 0 !== this.geometry &&
              (o.geometry = t(e.geometries, this.geometry)),
            void 0 !== this.material)
          )
            if (Array.isArray(this.material)) {
              for (var a = [], s = 0, c = this.material.length; s < c; s++)
                a.push(t(e.materials, this.material[s]));
              o.material = a;
            } else o.material = t(e.materials, this.material);
          if (this.children.length > 0) {
            o.children = [];
            for (var s = 0; s < this.children.length; s++)
              o.children.push(this.children[s].toJSON(e).object);
          }
          if (r) {
            var u = n(e.geometries),
              l = n(e.materials),
              h = n(e.textures),
              p = n(e.images);
            u.length > 0 && (i.geometries = u),
              l.length > 0 && (i.materials = l),
              h.length > 0 && (i.textures = h),
              p.length > 0 && (i.images = p);
          }
          return (i.object = o), i;
        },
        clone: function (e) {
          return new this.constructor().copy(this, e);
        },
        copy: function (e, t) {
          if (
            (void 0 === t && (t = !0),
            (this.name = e.name),
            this.up.copy(e.up),
            this.position.copy(e.position),
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
            (this.layers.mask = e.layers.mask),
            (this.visible = e.visible),
            (this.castShadow = e.castShadow),
            (this.receiveShadow = e.receiveShadow),
            (this.frustumCulled = e.frustumCulled),
            (this.renderOrder = e.renderOrder),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            !0 === t)
          )
            for (var n = 0; n < e.children.length; n++) {
              var r = e.children[n];
              this.add(r.clone());
            }
          return this;
        },
      }),
      (de.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: de,
        isCamera: !0,
        copy: function (e, t) {
          return (
            pe.prototype.copy.call(this, e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this
          );
        },
        getWorldDirection: (function () {
          var e = new u();
          return function (t) {
            var n = t || new l();
            return (
              this.getWorldQuaternion(e), n.set(0, 0, -1).applyQuaternion(e)
            );
          };
        })(),
        updateMatrixWorld: function (e) {
          pe.prototype.updateMatrixWorld.call(this, e),
            this.matrixWorldInverse.getInverse(this.matrixWorld);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
      })),
      (fe.prototype = Object.assign(Object.create(de.prototype), {
        constructor: fe,
        isOrthographicCamera: !0,
        copy: function (e, t) {
          return (
            de.prototype.copy.call(this, e, t),
            (this.left = e.left),
            (this.right = e.right),
            (this.top = e.top),
            (this.bottom = e.bottom),
            (this.near = e.near),
            (this.far = e.far),
            (this.zoom = e.zoom),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            this
          );
        },
        setViewOffset: function (e, t, n, r, i, o) {
          (this.view = {
            fullWidth: e,
            fullHeight: t,
            offsetX: n,
            offsetY: r,
            width: i,
            height: o,
          }),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function () {
          (this.view = null), this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function () {
          var e = (this.right - this.left) / (2 * this.zoom),
            t = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            r = (this.top + this.bottom) / 2,
            i = n - e,
            o = n + e,
            a = r + t,
            s = r - t;
          if (null !== this.view) {
            var c = this.zoom / (this.view.width / this.view.fullWidth),
              u = this.zoom / (this.view.height / this.view.fullHeight),
              l = (this.right - this.left) / this.view.width,
              h = (this.top - this.bottom) / this.view.height;
            (i += l * (this.view.offsetX / c)),
              (o = i + l * (this.view.width / c)),
              (a -= h * (this.view.offsetY / u)),
              (s = a - h * (this.view.height / u));
          }
          this.projectionMatrix.makeOrthographic(
            i,
            o,
            a,
            s,
            this.near,
            this.far
          );
        },
        toJSON: function (e) {
          var t = pe.prototype.toJSON.call(this, e);
          return (
            (t.object.zoom = this.zoom),
            (t.object.left = this.left),
            (t.object.right = this.right),
            (t.object.top = this.top),
            (t.object.bottom = this.bottom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            t
          );
        },
      })),
      (me.prototype = Object.assign(Object.create(de.prototype), {
        constructor: me,
        isPerspectiveCamera: !0,
        copy: function (e, t) {
          return (
            de.prototype.copy.call(this, e, t),
            (this.fov = e.fov),
            (this.zoom = e.zoom),
            (this.near = e.near),
            (this.far = e.far),
            (this.focus = e.focus),
            (this.aspect = e.aspect),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            (this.filmGauge = e.filmGauge),
            (this.filmOffset = e.filmOffset),
            this
          );
        },
        setFocalLength: function (e) {
          var t = (0.5 * this.getFilmHeight()) / e;
          (this.fov = 2 * Os.RAD2DEG * Math.atan(t)),
            this.updateProjectionMatrix();
        },
        getFocalLength: function () {
          var e = Math.tan(0.5 * Os.DEG2RAD * this.fov);
          return (0.5 * this.getFilmHeight()) / e;
        },
        getEffectiveFOV: function () {
          return (
            2 *
            Os.RAD2DEG *
            Math.atan(Math.tan(0.5 * Os.DEG2RAD * this.fov) / this.zoom)
          );
        },
        getFilmWidth: function () {
          return this.filmGauge * Math.min(this.aspect, 1);
        },
        getFilmHeight: function () {
          return this.filmGauge / Math.max(this.aspect, 1);
        },
        setViewOffset: function (e, t, n, r, i, o) {
          (this.aspect = e / t),
            (this.view = {
              fullWidth: e,
              fullHeight: t,
              offsetX: n,
              offsetY: r,
              width: i,
              height: o,
            }),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function () {
          (this.view = null), this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function () {
          var e = this.near,
            t = (e * Math.tan(0.5 * Os.DEG2RAD * this.fov)) / this.zoom,
            n = 2 * t,
            r = this.aspect * n,
            i = -0.5 * r,
            o = this.view;
          if (null !== o) {
            var a = o.fullWidth,
              s = o.fullHeight;
            (i += (o.offsetX * r) / a),
              (t -= (o.offsetY * n) / s),
              (r *= o.width / a),
              (n *= o.height / s);
          }
          var c = this.filmOffset;
          0 !== c && (i += (e * c) / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
              i,
              i + r,
              t,
              t - n,
              e,
              this.far
            );
        },
        toJSON: function (e) {
          var t = pe.prototype.toJSON.call(this, e);
          return (
            (t.object.fov = this.fov),
            (t.object.zoom = this.zoom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            (t.object.focus = this.focus),
            (t.object.aspect = this.aspect),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            (t.object.filmGauge = this.filmGauge),
            (t.object.filmOffset = this.filmOffset),
            t
          );
        },
      })),
      Object.assign(ve.prototype, {
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          (this.a = e.a),
            (this.b = e.b),
            (this.c = e.c),
            this.normal.copy(e.normal),
            this.color.copy(e.color),
            (this.materialIndex = e.materialIndex);
          for (var t = 0, n = e.vertexNormals.length; t < n; t++)
            this.vertexNormals[t] = e.vertexNormals[t].clone();
          for (var t = 0, n = e.vertexColors.length; t < n; t++)
            this.vertexColors[t] = e.vertexColors[t].clone();
          return this;
        },
      });
    var Ys = 0;
    Object.assign(ye.prototype, r.prototype, {
      isGeometry: !0,
      applyMatrix: function (e) {
        for (
          var t = new oe().getNormalMatrix(e), n = 0, r = this.vertices.length;
          n < r;
          n++
        ) {
          this.vertices[n].applyMatrix4(e);
        }
        for (var n = 0, r = this.faces.length; n < r; n++) {
          var i = this.faces[n];
          i.normal.applyMatrix3(t).normalize();
          for (var o = 0, a = i.vertexNormals.length; o < a; o++)
            i.vertexNormals[o].applyMatrix3(t).normalize();
        }
        return (
          null !== this.boundingBox && this.computeBoundingBox(),
          null !== this.boundingSphere && this.computeBoundingSphere(),
          (this.verticesNeedUpdate = !0),
          (this.normalsNeedUpdate = !0),
          this
        );
      },
      rotateX: (function () {
        var e = new h();
        return function (t) {
          return e.makeRotationX(t), this.applyMatrix(e), this;
        };
      })(),
      rotateY: (function () {
        var e = new h();
        return function (t) {
          return e.makeRotationY(t), this.applyMatrix(e), this;
        };
      })(),
      rotateZ: (function () {
        var e = new h();
        return function (t) {
          return e.makeRotationZ(t), this.applyMatrix(e), this;
        };
      })(),
      translate: (function () {
        var e = new h();
        return function (t, n, r) {
          return e.makeTranslation(t, n, r), this.applyMatrix(e), this;
        };
      })(),
      scale: (function () {
        var e = new h();
        return function (t, n, r) {
          return e.makeScale(t, n, r), this.applyMatrix(e), this;
        };
      })(),
      lookAt: (function () {
        var e = new pe();
        return function (t) {
          e.lookAt(t), e.updateMatrix(), this.applyMatrix(e.matrix);
        };
      })(),
      fromBufferGeometry: function (e) {
        function t(e, t, r, i) {
          var o =
              void 0 !== s ? [p[e].clone(), p[t].clone(), p[r].clone()] : [],
            a =
              void 0 !== c
                ? [
                    n.colors[e].clone(),
                    n.colors[t].clone(),
                    n.colors[r].clone(),
                  ]
                : [],
            l = new ve(e, t, r, o, a, i);
          n.faces.push(l),
            void 0 !== u &&
              n.faceVertexUvs[0].push([
                d[e].clone(),
                d[t].clone(),
                d[r].clone(),
              ]),
            void 0 !== h &&
              n.faceVertexUvs[1].push([
                f[e].clone(),
                f[t].clone(),
                f[r].clone(),
              ]);
        }
        var n = this,
          r = null !== e.index ? e.index.array : void 0,
          o = e.attributes,
          a = o.position.array,
          s = void 0 !== o.normal ? o.normal.array : void 0,
          c = void 0 !== o.color ? o.color.array : void 0,
          u = void 0 !== o.uv ? o.uv.array : void 0,
          h = void 0 !== o.uv2 ? o.uv2.array : void 0;
        void 0 !== h && (this.faceVertexUvs[1] = []);
        for (
          var p = [], d = [], f = [], m = 0, v = 0;
          m < a.length;
          m += 3, v += 2
        )
          n.vertices.push(new l(a[m], a[m + 1], a[m + 2])),
            void 0 !== s && p.push(new l(s[m], s[m + 1], s[m + 2])),
            void 0 !== c && n.colors.push(new Y(c[m], c[m + 1], c[m + 2])),
            void 0 !== u && d.push(new i(u[v], u[v + 1])),
            void 0 !== h && f.push(new i(h[v], h[v + 1]));
        var g = e.groups;
        if (g.length > 0)
          for (var m = 0; m < g.length; m++)
            for (
              var y = g[m], _ = y.start, b = y.count, v = _, x = _ + b;
              v < x;
              v += 3
            )
              void 0 !== r
                ? t(r[v], r[v + 1], r[v + 2], y.materialIndex)
                : t(v, v + 1, v + 2, y.materialIndex);
        else if (void 0 !== r)
          for (var m = 0; m < r.length; m += 3) t(r[m], r[m + 1], r[m + 2]);
        else for (var m = 0; m < a.length / 3; m += 3) t(m, m + 1, m + 2);
        return (
          this.computeFaceNormals(),
          null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
          null !== e.boundingSphere &&
            (this.boundingSphere = e.boundingSphere.clone()),
          this
        );
      },
      center: function () {
        this.computeBoundingBox();
        var e = this.boundingBox.getCenter().negate();
        return this.translate(e.x, e.y, e.z), e;
      },
      normalize: function () {
        this.computeBoundingSphere();
        var e = this.boundingSphere.center,
          t = this.boundingSphere.radius,
          n = 0 === t ? 1 : 1 / t,
          r = new h();
        return (
          r.set(
            n,
            0,
            0,
            -n * e.x,
            0,
            n,
            0,
            -n * e.y,
            0,
            0,
            n,
            -n * e.z,
            0,
            0,
            0,
            1
          ),
          this.applyMatrix(r),
          this
        );
      },
      computeFaceNormals: function () {
        for (
          var e = new l(), t = new l(), n = 0, r = this.faces.length;
          n < r;
          n++
        ) {
          var i = this.faces[n],
            o = this.vertices[i.a],
            a = this.vertices[i.b],
            s = this.vertices[i.c];
          e.subVectors(s, a),
            t.subVectors(o, a),
            e.cross(t),
            e.normalize(),
            i.normal.copy(e);
        }
      },
      computeVertexNormals: function (e) {
        void 0 === e && (e = !0);
        var t, n, r, i, o, a;
        for (
          a = new Array(this.vertices.length), t = 0, n = this.vertices.length;
          t < n;
          t++
        )
          a[t] = new l();
        if (e) {
          var s,
            c,
            u,
            h = new l(),
            p = new l();
          for (r = 0, i = this.faces.length; r < i; r++)
            (o = this.faces[r]),
              (s = this.vertices[o.a]),
              (c = this.vertices[o.b]),
              (u = this.vertices[o.c]),
              h.subVectors(u, c),
              p.subVectors(s, c),
              h.cross(p),
              a[o.a].add(h),
              a[o.b].add(h),
              a[o.c].add(h);
        } else
          for (
            this.computeFaceNormals(), r = 0, i = this.faces.length;
            r < i;
            r++
          )
            (o = this.faces[r]),
              a[o.a].add(o.normal),
              a[o.b].add(o.normal),
              a[o.c].add(o.normal);
        for (t = 0, n = this.vertices.length; t < n; t++) a[t].normalize();
        for (r = 0, i = this.faces.length; r < i; r++) {
          o = this.faces[r];
          var d = o.vertexNormals;
          3 === d.length
            ? (d[0].copy(a[o.a]), d[1].copy(a[o.b]), d[2].copy(a[o.c]))
            : ((d[0] = a[o.a].clone()),
              (d[1] = a[o.b].clone()),
              (d[2] = a[o.c].clone()));
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      },
      computeFlatVertexNormals: function () {
        var e, t, n;
        for (
          this.computeFaceNormals(), e = 0, t = this.faces.length;
          e < t;
          e++
        ) {
          n = this.faces[e];
          var r = n.vertexNormals;
          3 === r.length
            ? (r[0].copy(n.normal), r[1].copy(n.normal), r[2].copy(n.normal))
            : ((r[0] = n.normal.clone()),
              (r[1] = n.normal.clone()),
              (r[2] = n.normal.clone()));
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      },
      computeMorphNormals: function () {
        var e, t, n, r, i;
        for (n = 0, r = this.faces.length; n < r; n++)
          for (
            i = this.faces[n],
              i.__originalFaceNormal
                ? i.__originalFaceNormal.copy(i.normal)
                : (i.__originalFaceNormal = i.normal.clone()),
              i.__originalVertexNormals || (i.__originalVertexNormals = []),
              e = 0,
              t = i.vertexNormals.length;
            e < t;
            e++
          )
            i.__originalVertexNormals[e]
              ? i.__originalVertexNormals[e].copy(i.vertexNormals[e])
              : (i.__originalVertexNormals[e] = i.vertexNormals[e].clone());
        var o = new ye();
        for (
          o.faces = this.faces, e = 0, t = this.morphTargets.length;
          e < t;
          e++
        ) {
          if (!this.morphNormals[e]) {
            (this.morphNormals[e] = {}),
              (this.morphNormals[e].faceNormals = []),
              (this.morphNormals[e].vertexNormals = []);
            var a,
              s,
              c = this.morphNormals[e].faceNormals,
              u = this.morphNormals[e].vertexNormals;
            for (n = 0, r = this.faces.length; n < r; n++)
              (a = new l()),
                (s = { a: new l(), b: new l(), c: new l() }),
                c.push(a),
                u.push(s);
          }
          var h = this.morphNormals[e];
          (o.vertices = this.morphTargets[e].vertices),
            o.computeFaceNormals(),
            o.computeVertexNormals();
          var a, s;
          for (n = 0, r = this.faces.length; n < r; n++)
            (i = this.faces[n]),
              (a = h.faceNormals[n]),
              (s = h.vertexNormals[n]),
              a.copy(i.normal),
              s.a.copy(i.vertexNormals[0]),
              s.b.copy(i.vertexNormals[1]),
              s.c.copy(i.vertexNormals[2]);
        }
        for (n = 0, r = this.faces.length; n < r; n++)
          (i = this.faces[n]),
            (i.normal = i.__originalFaceNormal),
            (i.vertexNormals = i.__originalVertexNormals);
      },
      computeLineDistances: function () {
        for (var e = 0, t = this.vertices, n = 0, r = t.length; n < r; n++)
          n > 0 && (e += t[n].distanceTo(t[n - 1])),
            (this.lineDistances[n] = e);
      },
      computeBoundingBox: function () {
        null === this.boundingBox && (this.boundingBox = new re()),
          this.boundingBox.setFromPoints(this.vertices);
      },
      computeBoundingSphere: function () {
        null === this.boundingSphere && (this.boundingSphere = new ie()),
          this.boundingSphere.setFromPoints(this.vertices);
      },
      merge: function (e, t, n) {
        if (!e || !e.isGeometry)
          return void console.error(
            "THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",
            e
          );
        var r,
          i = this.vertices.length,
          o = this.vertices,
          a = e.vertices,
          s = this.faces,
          c = e.faces,
          u = this.faceVertexUvs[0],
          l = e.faceVertexUvs[0],
          h = this.colors,
          p = e.colors;
        void 0 === n && (n = 0),
          void 0 !== t && (r = new oe().getNormalMatrix(t));
        for (var d = 0, f = a.length; d < f; d++) {
          var m = a[d],
            v = m.clone();
          void 0 !== t && v.applyMatrix4(t), o.push(v);
        }
        for (var d = 0, f = p.length; d < f; d++) h.push(p[d].clone());
        for (d = 0, f = c.length; d < f; d++) {
          var g,
            y,
            _,
            b = c[d],
            x = b.vertexNormals,
            E = b.vertexColors;
          (g = new ve(b.a + i, b.b + i, b.c + i)),
            g.normal.copy(b.normal),
            void 0 !== r && g.normal.applyMatrix3(r).normalize();
          for (var w = 0, M = x.length; w < M; w++)
            (y = x[w].clone()),
              void 0 !== r && y.applyMatrix3(r).normalize(),
              g.vertexNormals.push(y);
          g.color.copy(b.color);
          for (var w = 0, M = E.length; w < M; w++)
            (_ = E[w]), g.vertexColors.push(_.clone());
          (g.materialIndex = b.materialIndex + n), s.push(g);
        }
        for (d = 0, f = l.length; d < f; d++) {
          var T = l[d],
            S = [];
          if (void 0 !== T) {
            for (var w = 0, M = T.length; w < M; w++) S.push(T[w].clone());
            u.push(S);
          }
        }
      },
      mergeMesh: function (e) {
        if (!e || !e.isMesh)
          return void console.error(
            "THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",
            e
          );
        e.matrixAutoUpdate && e.updateMatrix(),
          this.merge(e.geometry, e.matrix);
      },
      mergeVertices: function () {
        var e,
          t,
          n,
          r,
          i,
          o,
          a,
          s,
          c = {},
          u = [],
          l = [],
          h = Math.pow(10, 4);
        for (n = 0, r = this.vertices.length; n < r; n++)
          (e = this.vertices[n]),
            (t =
              Math.round(e.x * h) +
              "_" +
              Math.round(e.y * h) +
              "_" +
              Math.round(e.z * h)),
            void 0 === c[t]
              ? ((c[t] = n), u.push(this.vertices[n]), (l[n] = u.length - 1))
              : (l[n] = l[c[t]]);
        var p = [];
        for (n = 0, r = this.faces.length; n < r; n++) {
          (i = this.faces[n]),
            (i.a = l[i.a]),
            (i.b = l[i.b]),
            (i.c = l[i.c]),
            (o = [i.a, i.b, i.c]);
          for (var d = 0; d < 3; d++)
            if (o[d] === o[(d + 1) % 3]) {
              p.push(n);
              break;
            }
        }
        for (n = p.length - 1; n >= 0; n--) {
          var f = p[n];
          for (
            this.faces.splice(f, 1), a = 0, s = this.faceVertexUvs.length;
            a < s;
            a++
          )
            this.faceVertexUvs[a].splice(f, 1);
        }
        var m = this.vertices.length - u.length;
        return (this.vertices = u), m;
      },
      sortFacesByMaterialIndex: function () {
        function e(e, t) {
          return e.materialIndex - t.materialIndex;
        }
        for (var t = this.faces, n = t.length, r = 0; r < n; r++) t[r]._id = r;
        t.sort(e);
        var i,
          o,
          a = this.faceVertexUvs[0],
          s = this.faceVertexUvs[1];
        a && a.length === n && (i = []), s && s.length === n && (o = []);
        for (var r = 0; r < n; r++) {
          var c = t[r]._id;
          i && i.push(a[c]), o && o.push(s[c]);
        }
        i && (this.faceVertexUvs[0] = i), o && (this.faceVertexUvs[1] = o);
      },
      toJSON: function () {
        function e(e, t, n) {
          return n ? e | (1 << t) : e & ~(1 << t);
        }
        function t(e) {
          var t = e.x.toString() + e.y.toString() + e.z.toString();
          return void 0 !== p[t]
            ? p[t]
            : ((p[t] = h.length / 3), h.push(e.x, e.y, e.z), p[t]);
        }
        function n(e) {
          var t = e.r.toString() + e.g.toString() + e.b.toString();
          return void 0 !== f[t]
            ? f[t]
            : ((f[t] = d.length), d.push(e.getHex()), f[t]);
        }
        function r(e) {
          var t = e.x.toString() + e.y.toString();
          return void 0 !== v[t]
            ? v[t]
            : ((v[t] = m.length / 2), m.push(e.x, e.y), v[t]);
        }
        var i = {
          metadata: {
            version: 4.5,
            type: "Geometry",
            generator: "Geometry.toJSON",
          },
        };
        if (
          ((i.uuid = this.uuid),
          (i.type = this.type),
          "" !== this.name && (i.name = this.name),
          void 0 !== this.parameters)
        ) {
          var o = this.parameters;
          for (var a in o) void 0 !== o[a] && (i[a] = o[a]);
          return i;
        }
        for (var s = [], c = 0; c < this.vertices.length; c++) {
          var u = this.vertices[c];
          s.push(u.x, u.y, u.z);
        }
        for (
          var l = [], h = [], p = {}, d = [], f = {}, m = [], v = {}, c = 0;
          c < this.faces.length;
          c++
        ) {
          var g = this.faces[c],
            y = void 0 !== this.faceVertexUvs[0][c],
            _ = g.normal.length() > 0,
            b = g.vertexNormals.length > 0,
            x = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b,
            E = g.vertexColors.length > 0,
            w = 0;
          if (
            ((w = e(w, 0, 0)),
            (w = e(w, 1, !0)),
            (w = e(w, 2, !1)),
            (w = e(w, 3, y)),
            (w = e(w, 4, _)),
            (w = e(w, 5, b)),
            (w = e(w, 6, x)),
            (w = e(w, 7, E)),
            l.push(w),
            l.push(g.a, g.b, g.c),
            l.push(g.materialIndex),
            y)
          ) {
            var M = this.faceVertexUvs[0][c];
            l.push(r(M[0]), r(M[1]), r(M[2]));
          }
          if ((_ && l.push(t(g.normal)), b)) {
            var T = g.vertexNormals;
            l.push(t(T[0]), t(T[1]), t(T[2]));
          }
          if ((x && l.push(n(g.color)), E)) {
            var S = g.vertexColors;
            l.push(n(S[0]), n(S[1]), n(S[2]));
          }
        }
        return (
          (i.data = {}),
          (i.data.vertices = s),
          (i.data.normals = h),
          d.length > 0 && (i.data.colors = d),
          m.length > 0 && (i.data.uvs = [m]),
          (i.data.faces = l),
          i
        );
      },
      clone: function () {
        return new ye().copy(this);
      },
      copy: function (e) {
        var t, n, r, i, o, a;
        (this.vertices = []),
          (this.colors = []),
          (this.faces = []),
          (this.faceVertexUvs = [[]]),
          (this.morphTargets = []),
          (this.morphNormals = []),
          (this.skinWeights = []),
          (this.skinIndices = []),
          (this.lineDistances = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.name = e.name);
        var s = e.vertices;
        for (t = 0, n = s.length; t < n; t++) this.vertices.push(s[t].clone());
        var c = e.colors;
        for (t = 0, n = c.length; t < n; t++) this.colors.push(c[t].clone());
        var u = e.faces;
        for (t = 0, n = u.length; t < n; t++) this.faces.push(u[t].clone());
        for (t = 0, n = e.faceVertexUvs.length; t < n; t++) {
          var l = e.faceVertexUvs[t];
          for (
            void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []),
              r = 0,
              i = l.length;
            r < i;
            r++
          ) {
            var h = l[r],
              p = [];
            for (o = 0, a = h.length; o < a; o++) {
              var d = h[o];
              p.push(d.clone());
            }
            this.faceVertexUvs[t].push(p);
          }
        }
        var f = e.morphTargets;
        for (t = 0, n = f.length; t < n; t++) {
          var m = {};
          if (((m.name = f[t].name), void 0 !== f[t].vertices))
            for (m.vertices = [], r = 0, i = f[t].vertices.length; r < i; r++)
              m.vertices.push(f[t].vertices[r].clone());
          if (void 0 !== f[t].normals)
            for (m.normals = [], r = 0, i = f[t].normals.length; r < i; r++)
              m.normals.push(f[t].normals[r].clone());
          this.morphTargets.push(m);
        }
        var v = e.morphNormals;
        for (t = 0, n = v.length; t < n; t++) {
          var g = {};
          if (void 0 !== v[t].vertexNormals)
            for (
              g.vertexNormals = [], r = 0, i = v[t].vertexNormals.length;
              r < i;
              r++
            ) {
              var y = v[t].vertexNormals[r],
                _ = {};
              (_.a = y.a.clone()),
                (_.b = y.b.clone()),
                (_.c = y.c.clone()),
                g.vertexNormals.push(_);
            }
          if (void 0 !== v[t].faceNormals)
            for (
              g.faceNormals = [], r = 0, i = v[t].faceNormals.length;
              r < i;
              r++
            )
              g.faceNormals.push(v[t].faceNormals[r].clone());
          this.morphNormals.push(g);
        }
        var b = e.skinWeights;
        for (t = 0, n = b.length; t < n; t++)
          this.skinWeights.push(b[t].clone());
        var x = e.skinIndices;
        for (t = 0, n = x.length; t < n; t++)
          this.skinIndices.push(x[t].clone());
        var E = e.lineDistances;
        for (t = 0, n = E.length; t < n; t++) this.lineDistances.push(E[t]);
        var w = e.boundingBox;
        null !== w && (this.boundingBox = w.clone());
        var M = e.boundingSphere;
        return (
          null !== M && (this.boundingSphere = M.clone()),
          (this.elementsNeedUpdate = e.elementsNeedUpdate),
          (this.verticesNeedUpdate = e.verticesNeedUpdate),
          (this.uvsNeedUpdate = e.uvsNeedUpdate),
          (this.normalsNeedUpdate = e.normalsNeedUpdate),
          (this.colorsNeedUpdate = e.colorsNeedUpdate),
          (this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate),
          (this.groupsNeedUpdate = e.groupsNeedUpdate),
          this
        );
      },
      dispose: function () {
        this.dispatchEvent({ type: "dispose" });
      },
    }),
      Object.defineProperty(_e.prototype, "needsUpdate", {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      Object.assign(_e.prototype, {
        isBufferAttribute: !0,
        setArray: function (e) {
          if (Array.isArray(e))
            throw new TypeError(
              "THREE.BufferAttribute: array should be a Typed Array."
            );
          (this.count = void 0 !== e ? e.length / this.itemSize : 0),
            (this.array = e);
        },
        setDynamic: function (e) {
          return (this.dynamic = e), this;
        },
        copy: function (e) {
          return (
            (this.array = new e.array.constructor(e.array)),
            (this.itemSize = e.itemSize),
            (this.count = e.count),
            (this.normalized = e.normalized),
            (this.dynamic = e.dynamic),
            this
          );
        },
        copyAt: function (e, t, n) {
          (e *= this.itemSize), (n *= t.itemSize);
          for (var r = 0, i = this.itemSize; r < i; r++)
            this.array[e + r] = t.array[n + r];
          return this;
        },
        copyArray: function (e) {
          return this.array.set(e), this;
        },
        copyColorsArray: function (e) {
          for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
            var o = e[r];
            void 0 === o &&
              (console.warn(
                "THREE.BufferAttribute.copyColorsArray(): color is undefined",
                r
              ),
              (o = new Y())),
              (t[n++] = o.r),
              (t[n++] = o.g),
              (t[n++] = o.b);
          }
          return this;
        },
        copyIndicesArray: function (e) {
          for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
            var o = e[r];
            (t[n++] = o.a), (t[n++] = o.b), (t[n++] = o.c);
          }
          return this;
        },
        copyVector2sArray: function (e) {
          for (var t = this.array, n = 0, r = 0, o = e.length; r < o; r++) {
            var a = e[r];
            void 0 === a &&
              (console.warn(
                "THREE.BufferAttribute.copyVector2sArray(): vector is undefined",
                r
              ),
              (a = new i())),
              (t[n++] = a.x),
              (t[n++] = a.y);
          }
          return this;
        },
        copyVector3sArray: function (e) {
          for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
            var o = e[r];
            void 0 === o &&
              (console.warn(
                "THREE.BufferAttribute.copyVector3sArray(): vector is undefined",
                r
              ),
              (o = new l())),
              (t[n++] = o.x),
              (t[n++] = o.y),
              (t[n++] = o.z);
          }
          return this;
        },
        copyVector4sArray: function (e) {
          for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
            var o = e[r];
            void 0 === o &&
              (console.warn(
                "THREE.BufferAttribute.copyVector4sArray(): vector is undefined",
                r
              ),
              (o = new a())),
              (t[n++] = o.x),
              (t[n++] = o.y),
              (t[n++] = o.z),
              (t[n++] = o.w);
          }
          return this;
        },
        set: function (e, t) {
          return void 0 === t && (t = 0), this.array.set(e, t), this;
        },
        getX: function (e) {
          return this.array[e * this.itemSize];
        },
        setX: function (e, t) {
          return (this.array[e * this.itemSize] = t), this;
        },
        getY: function (e) {
          return this.array[e * this.itemSize + 1];
        },
        setY: function (e, t) {
          return (this.array[e * this.itemSize + 1] = t), this;
        },
        getZ: function (e) {
          return this.array[e * this.itemSize + 2];
        },
        setZ: function (e, t) {
          return (this.array[e * this.itemSize + 2] = t), this;
        },
        getW: function (e) {
          return this.array[e * this.itemSize + 3];
        },
        setW: function (e, t) {
          return (this.array[e * this.itemSize + 3] = t), this;
        },
        setXY: function (e, t, n) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            this
          );
        },
        setXYZ: function (e, t, n, r) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = r),
            this
          );
        },
        setXYZW: function (e, t, n, r, i) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = r),
            (this.array[e + 3] = i),
            this
          );
        },
        onUpload: function (e) {
          return (this.onUploadCallback = e), this;
        },
        clone: function () {
          return new this.constructor(this.array, this.itemSize).copy(this);
        },
      }),
      (be.prototype = Object.create(_e.prototype)),
      (be.prototype.constructor = be),
      (xe.prototype = Object.create(_e.prototype)),
      (xe.prototype.constructor = xe),
      (Ee.prototype = Object.create(_e.prototype)),
      (Ee.prototype.constructor = Ee),
      (we.prototype = Object.create(_e.prototype)),
      (we.prototype.constructor = we),
      (Me.prototype = Object.create(_e.prototype)),
      (Me.prototype.constructor = Me),
      (Te.prototype = Object.create(_e.prototype)),
      (Te.prototype.constructor = Te),
      (Se.prototype = Object.create(_e.prototype)),
      (Se.prototype.constructor = Se),
      (Ne.prototype = Object.create(_e.prototype)),
      (Ne.prototype.constructor = Ne),
      (Ce.prototype = Object.create(_e.prototype)),
      (Ce.prototype.constructor = Ce),
      Object.assign(Ae.prototype, {
        computeGroups: function (e) {
          for (
            var t, n = [], r = void 0, i = e.faces, o = 0;
            o < i.length;
            o++
          ) {
            var a = i[o];
            a.materialIndex !== r &&
              ((r = a.materialIndex),
              void 0 !== t && ((t.count = 3 * o - t.start), n.push(t)),
              (t = { start: 3 * o, materialIndex: r }));
          }
          void 0 !== t && ((t.count = 3 * o - t.start), n.push(t)),
            (this.groups = n);
        },
        fromGeometry: function (e) {
          var t,
            n = e.faces,
            r = e.vertices,
            o = e.faceVertexUvs,
            a = o[0] && o[0].length > 0,
            s = o[1] && o[1].length > 0,
            c = e.morphTargets,
            u = c.length;
          if (u > 0) {
            t = [];
            for (var l = 0; l < u; l++) t[l] = [];
            this.morphTargets.position = t;
          }
          var h,
            p = e.morphNormals,
            d = p.length;
          if (d > 0) {
            h = [];
            for (var l = 0; l < d; l++) h[l] = [];
            this.morphTargets.normal = h;
          }
          for (
            var f = e.skinIndices,
              m = e.skinWeights,
              v = f.length === r.length,
              g = m.length === r.length,
              l = 0;
            l < n.length;
            l++
          ) {
            var y = n[l];
            this.vertices.push(r[y.a], r[y.b], r[y.c]);
            var _ = y.vertexNormals;
            if (3 === _.length) this.normals.push(_[0], _[1], _[2]);
            else {
              var b = y.normal;
              this.normals.push(b, b, b);
            }
            var x = y.vertexColors;
            if (3 === x.length) this.colors.push(x[0], x[1], x[2]);
            else {
              var E = y.color;
              this.colors.push(E, E, E);
            }
            if (!0 === a) {
              var w = o[0][l];
              void 0 !== w
                ? this.uvs.push(w[0], w[1], w[2])
                : (console.warn(
                    "THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",
                    l
                  ),
                  this.uvs.push(new i(), new i(), new i()));
            }
            if (!0 === s) {
              var w = o[1][l];
              void 0 !== w
                ? this.uvs2.push(w[0], w[1], w[2])
                : (console.warn(
                    "THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",
                    l
                  ),
                  this.uvs2.push(new i(), new i(), new i()));
            }
            for (var M = 0; M < u; M++) {
              var T = c[M].vertices;
              t[M].push(T[y.a], T[y.b], T[y.c]);
            }
            for (var M = 0; M < d; M++) {
              var S = p[M].vertexNormals[l];
              h[M].push(S.a, S.b, S.c);
            }
            v && this.skinIndices.push(f[y.a], f[y.b], f[y.c]),
              g && this.skinWeights.push(m[y.a], m[y.b], m[y.c]);
          }
          return (
            this.computeGroups(e),
            (this.verticesNeedUpdate = e.verticesNeedUpdate),
            (this.normalsNeedUpdate = e.normalsNeedUpdate),
            (this.colorsNeedUpdate = e.colorsNeedUpdate),
            (this.uvsNeedUpdate = e.uvsNeedUpdate),
            (this.groupsNeedUpdate = e.groupsNeedUpdate),
            this
          );
        },
      }),
      (Pe.MaxIndex = 65535),
      Object.assign(Pe.prototype, r.prototype, {
        isBufferGeometry: !0,
        getIndex: function () {
          return this.index;
        },
        setIndex: function (e) {
          Array.isArray(e)
            ? (this.index = new (Re(e) > 65535 ? Se : Me)(e, 1))
            : (this.index = e);
        },
        addAttribute: function (e, t) {
          return (t && t.isBufferAttribute) ||
            (t && t.isInterleavedBufferAttribute)
            ? "index" === e
              ? (console.warn(
                  "THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."
                ),
                void this.setIndex(t))
              : ((this.attributes[e] = t), this)
            : (console.warn(
                "THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."
              ),
              void this.addAttribute(e, new _e(arguments[1], arguments[2])));
        },
        getAttribute: function (e) {
          return this.attributes[e];
        },
        removeAttribute: function (e) {
          return delete this.attributes[e], this;
        },
        addGroup: function (e, t, n) {
          this.groups.push({
            start: e,
            count: t,
            materialIndex: void 0 !== n ? n : 0,
          });
        },
        clearGroups: function () {
          this.groups = [];
        },
        setDrawRange: function (e, t) {
          (this.drawRange.start = e), (this.drawRange.count = t);
        },
        applyMatrix: function (e) {
          var t = this.attributes.position;
          void 0 !== t && (e.applyToBufferAttribute(t), (t.needsUpdate = !0));
          var n = this.attributes.normal;
          if (void 0 !== n) {
            new oe().getNormalMatrix(e).applyToBufferAttribute(n),
              (n.needsUpdate = !0);
          }
          return (
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
          );
        },
        rotateX: (function () {
          var e = new h();
          return function (t) {
            return e.makeRotationX(t), this.applyMatrix(e), this;
          };
        })(),
        rotateY: (function () {
          var e = new h();
          return function (t) {
            return e.makeRotationY(t), this.applyMatrix(e), this;
          };
        })(),
        rotateZ: (function () {
          var e = new h();
          return function (t) {
            return e.makeRotationZ(t), this.applyMatrix(e), this;
          };
        })(),
        translate: (function () {
          var e = new h();
          return function (t, n, r) {
            return e.makeTranslation(t, n, r), this.applyMatrix(e), this;
          };
        })(),
        scale: (function () {
          var e = new h();
          return function (t, n, r) {
            return e.makeScale(t, n, r), this.applyMatrix(e), this;
          };
        })(),
        lookAt: (function () {
          var e = new pe();
          return function (t) {
            e.lookAt(t), e.updateMatrix(), this.applyMatrix(e.matrix);
          };
        })(),
        center: function () {
          this.computeBoundingBox();
          var e = this.boundingBox.getCenter().negate();
          return this.translate(e.x, e.y, e.z), e;
        },
        setFromObject: function (e) {
          var t = e.geometry;
          if (e.isPoints || e.isLine) {
            var n = new Ne(3 * t.vertices.length, 3),
              r = new Ne(3 * t.colors.length, 3);
            if (
              (this.addAttribute("position", n.copyVector3sArray(t.vertices)),
              this.addAttribute("color", r.copyColorsArray(t.colors)),
              t.lineDistances && t.lineDistances.length === t.vertices.length)
            ) {
              var i = new Ne(t.lineDistances.length, 1);
              this.addAttribute("lineDistance", i.copyArray(t.lineDistances));
            }
            null !== t.boundingSphere &&
              (this.boundingSphere = t.boundingSphere.clone()),
              null !== t.boundingBox &&
                (this.boundingBox = t.boundingBox.clone());
          } else e.isMesh && t && t.isGeometry && this.fromGeometry(t);
          return this;
        },
        updateFromObject: function (e) {
          var t = e.geometry;
          if (e.isMesh) {
            var n = t.__directGeometry;
            if (
              (!0 === t.elementsNeedUpdate &&
                ((n = void 0), (t.elementsNeedUpdate = !1)),
              void 0 === n)
            )
              return this.fromGeometry(t);
            (n.verticesNeedUpdate = t.verticesNeedUpdate),
              (n.normalsNeedUpdate = t.normalsNeedUpdate),
              (n.colorsNeedUpdate = t.colorsNeedUpdate),
              (n.uvsNeedUpdate = t.uvsNeedUpdate),
              (n.groupsNeedUpdate = t.groupsNeedUpdate),
              (t.verticesNeedUpdate = !1),
              (t.normalsNeedUpdate = !1),
              (t.colorsNeedUpdate = !1),
              (t.uvsNeedUpdate = !1),
              (t.groupsNeedUpdate = !1),
              (t = n);
          }
          var r;
          return (
            !0 === t.verticesNeedUpdate &&
              ((r = this.attributes.position),
              void 0 !== r &&
                (r.copyVector3sArray(t.vertices), (r.needsUpdate = !0)),
              (t.verticesNeedUpdate = !1)),
            !0 === t.normalsNeedUpdate &&
              ((r = this.attributes.normal),
              void 0 !== r &&
                (r.copyVector3sArray(t.normals), (r.needsUpdate = !0)),
              (t.normalsNeedUpdate = !1)),
            !0 === t.colorsNeedUpdate &&
              ((r = this.attributes.color),
              void 0 !== r &&
                (r.copyColorsArray(t.colors), (r.needsUpdate = !0)),
              (t.colorsNeedUpdate = !1)),
            t.uvsNeedUpdate &&
              ((r = this.attributes.uv),
              void 0 !== r &&
                (r.copyVector2sArray(t.uvs), (r.needsUpdate = !0)),
              (t.uvsNeedUpdate = !1)),
            t.lineDistancesNeedUpdate &&
              ((r = this.attributes.lineDistance),
              void 0 !== r &&
                (r.copyArray(t.lineDistances), (r.needsUpdate = !0)),
              (t.lineDistancesNeedUpdate = !1)),
            t.groupsNeedUpdate &&
              (t.computeGroups(e.geometry),
              (this.groups = t.groups),
              (t.groupsNeedUpdate = !1)),
            this
          );
        },
        fromGeometry: function (e) {
          return (
            (e.__directGeometry = new Ae().fromGeometry(e)),
            this.fromDirectGeometry(e.__directGeometry)
          );
        },
        fromDirectGeometry: function (e) {
          var t = new Float32Array(3 * e.vertices.length);
          if (
            (this.addAttribute(
              "position",
              new _e(t, 3).copyVector3sArray(e.vertices)
            ),
            e.normals.length > 0)
          ) {
            var n = new Float32Array(3 * e.normals.length);
            this.addAttribute(
              "normal",
              new _e(n, 3).copyVector3sArray(e.normals)
            );
          }
          if (e.colors.length > 0) {
            var r = new Float32Array(3 * e.colors.length);
            this.addAttribute("color", new _e(r, 3).copyColorsArray(e.colors));
          }
          if (e.uvs.length > 0) {
            var i = new Float32Array(2 * e.uvs.length);
            this.addAttribute("uv", new _e(i, 2).copyVector2sArray(e.uvs));
          }
          if (e.uvs2.length > 0) {
            var o = new Float32Array(2 * e.uvs2.length);
            this.addAttribute("uv2", new _e(o, 2).copyVector2sArray(e.uvs2));
          }
          if (e.indices.length > 0) {
            var a = Re(e.indices) > 65535 ? Uint32Array : Uint16Array,
              s = new a(3 * e.indices.length);
            this.setIndex(new _e(s, 1).copyIndicesArray(e.indices));
          }
          this.groups = e.groups;
          for (var c in e.morphTargets) {
            for (
              var u = [], l = e.morphTargets[c], h = 0, p = l.length;
              h < p;
              h++
            ) {
              var d = l[h],
                f = new Ne(3 * d.length, 3);
              u.push(f.copyVector3sArray(d));
            }
            this.morphAttributes[c] = u;
          }
          if (e.skinIndices.length > 0) {
            var m = new Ne(4 * e.skinIndices.length, 4);
            this.addAttribute("skinIndex", m.copyVector4sArray(e.skinIndices));
          }
          if (e.skinWeights.length > 0) {
            var v = new Ne(4 * e.skinWeights.length, 4);
            this.addAttribute("skinWeight", v.copyVector4sArray(e.skinWeights));
          }
          return (
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox &&
              (this.boundingBox = e.boundingBox.clone()),
            this
          );
        },
        computeBoundingBox: function () {
          null === this.boundingBox && (this.boundingBox = new re());
          var e = this.attributes.position;
          void 0 !== e
            ? this.boundingBox.setFromBufferAttribute(e)
            : this.boundingBox.makeEmpty(),
            (isNaN(this.boundingBox.min.x) ||
              isNaN(this.boundingBox.min.y) ||
              isNaN(this.boundingBox.min.z)) &&
              console.error(
                'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                this
              );
        },
        computeBoundingSphere: (function () {
          var e = new re(),
            t = new l();
          return function () {
            null === this.boundingSphere && (this.boundingSphere = new ie());
            var n = this.attributes.position;
            if (n) {
              var r = this.boundingSphere.center;
              e.setFromBufferAttribute(n), e.getCenter(r);
              for (var i = 0, o = 0, a = n.count; o < a; o++)
                (t.x = n.getX(o)),
                  (t.y = n.getY(o)),
                  (t.z = n.getZ(o)),
                  (i = Math.max(i, r.distanceToSquared(t)));
              (this.boundingSphere.radius = Math.sqrt(i)),
                isNaN(this.boundingSphere.radius) &&
                  console.error(
                    'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                    this
                  );
            }
          };
        })(),
        computeFaceNormals: function () {},
        computeVertexNormals: function () {
          var e = this.index,
            t = this.attributes,
            n = this.groups;
          if (t.position) {
            var r = t.position.array;
            if (void 0 === t.normal)
              this.addAttribute(
                "normal",
                new _e(new Float32Array(r.length), 3)
              );
            else
              for (var i = t.normal.array, o = 0, a = i.length; o < a; o++)
                i[o] = 0;
            var s,
              c,
              u,
              h = t.normal.array,
              p = new l(),
              d = new l(),
              f = new l(),
              m = new l(),
              v = new l();
            if (e) {
              var g = e.array;
              0 === n.length && this.addGroup(0, g.length);
              for (var y = 0, _ = n.length; y < _; ++y)
                for (
                  var b = n[y], x = b.start, E = b.count, o = x, a = x + E;
                  o < a;
                  o += 3
                )
                  (s = 3 * g[o + 0]),
                    (c = 3 * g[o + 1]),
                    (u = 3 * g[o + 2]),
                    p.fromArray(r, s),
                    d.fromArray(r, c),
                    f.fromArray(r, u),
                    m.subVectors(f, d),
                    v.subVectors(p, d),
                    m.cross(v),
                    (h[s] += m.x),
                    (h[s + 1] += m.y),
                    (h[s + 2] += m.z),
                    (h[c] += m.x),
                    (h[c + 1] += m.y),
                    (h[c + 2] += m.z),
                    (h[u] += m.x),
                    (h[u + 1] += m.y),
                    (h[u + 2] += m.z);
            } else
              for (var o = 0, a = r.length; o < a; o += 9)
                p.fromArray(r, o),
                  d.fromArray(r, o + 3),
                  f.fromArray(r, o + 6),
                  m.subVectors(f, d),
                  v.subVectors(p, d),
                  m.cross(v),
                  (h[o] = m.x),
                  (h[o + 1] = m.y),
                  (h[o + 2] = m.z),
                  (h[o + 3] = m.x),
                  (h[o + 4] = m.y),
                  (h[o + 5] = m.z),
                  (h[o + 6] = m.x),
                  (h[o + 7] = m.y),
                  (h[o + 8] = m.z);
            this.normalizeNormals(), (t.normal.needsUpdate = !0);
          }
        },
        merge: function (e, t) {
          if (!e || !e.isBufferGeometry)
            return void console.error(
              "THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",
              e
            );
          void 0 === t && (t = 0);
          var n = this.attributes;
          for (var r in n)
            if (void 0 !== e.attributes[r])
              for (
                var i = n[r],
                  o = i.array,
                  a = e.attributes[r],
                  s = a.array,
                  c = a.itemSize,
                  u = 0,
                  l = c * t;
                u < s.length;
                u++, l++
              )
                o[l] = s[u];
          return this;
        },
        normalizeNormals: (function () {
          var e = new l();
          return function () {
            for (var t = this.attributes.normal, n = 0, r = t.count; n < r; n++)
              (e.x = t.getX(n)),
                (e.y = t.getY(n)),
                (e.z = t.getZ(n)),
                e.normalize(),
                t.setXYZ(n, e.x, e.y, e.z);
          };
        })(),
        toNonIndexed: function () {
          if (null === this.index)
            return (
              console.warn(
                "THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."
              ),
              this
            );
          var e = new Pe(),
            t = this.index.array,
            n = this.attributes;
          for (var r in n) {
            for (
              var i = n[r],
                o = i.array,
                a = i.itemSize,
                s = new o.constructor(t.length * a),
                c = 0,
                u = 0,
                l = 0,
                h = t.length;
              l < h;
              l++
            ) {
              c = t[l] * a;
              for (var p = 0; p < a; p++) s[u++] = o[c++];
            }
            e.addAttribute(r, new _e(s, a));
          }
          return e;
        },
        toJSON: function () {
          var e = {
            metadata: {
              version: 4.5,
              type: "BufferGeometry",
              generator: "BufferGeometry.toJSON",
            },
          };
          if (
            ((e.uuid = this.uuid),
            (e.type = this.type),
            "" !== this.name && (e.name = this.name),
            void 0 !== this.parameters)
          ) {
            var t = this.parameters;
            for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
            return e;
          }
          e.data = { attributes: {} };
          var r = this.index;
          if (null !== r) {
            var i = Array.prototype.slice.call(r.array);
            e.data.index = { type: r.array.constructor.name, array: i };
          }
          var o = this.attributes;
          for (var n in o) {
            var a = o[n],
              i = Array.prototype.slice.call(a.array);
            e.data.attributes[n] = {
              itemSize: a.itemSize,
              type: a.array.constructor.name,
              array: i,
              normalized: a.normalized,
            };
          }
          var s = this.groups;
          s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));
          var c = this.boundingSphere;
          return (
            null !== c &&
              (e.data.boundingSphere = {
                center: c.center.toArray(),
                radius: c.radius,
              }),
            e
          );
        },
        clone: function () {
          return new Pe().copy(this);
        },
        copy: function (e) {
          var t, n, r;
          (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.name = e.name);
          var i = e.index;
          null !== i && this.setIndex(i.clone());
          var o = e.attributes;
          for (t in o) {
            var a = o[t];
            this.addAttribute(t, a.clone());
          }
          var s = e.morphAttributes;
          for (t in s) {
            var c = [],
              u = s[t];
            for (n = 0, r = u.length; n < r; n++) c.push(u[n].clone());
            this.morphAttributes[t] = c;
          }
          var l = e.groups;
          for (n = 0, r = l.length; n < r; n++) {
            var h = l[n];
            this.addGroup(h.start, h.count, h.materialIndex);
          }
          var p = e.boundingBox;
          null !== p && (this.boundingBox = p.clone());
          var d = e.boundingSphere;
          return (
            null !== d && (this.boundingSphere = d.clone()),
            (this.drawRange.start = e.drawRange.start),
            (this.drawRange.count = e.drawRange.count),
            this
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: "dispose" });
        },
      }),
      (Oe.prototype = Object.create(ye.prototype)),
      (Oe.prototype.constructor = Oe),
      (De.prototype = Object.create(Pe.prototype)),
      (De.prototype.constructor = De),
      (Le.prototype = Object.create(ye.prototype)),
      (Le.prototype.constructor = Le),
      (Ie.prototype = Object.create(Pe.prototype)),
      (Ie.prototype.constructor = Ie),
      (Ue.prototype = Object.create($.prototype)),
      (Ue.prototype.constructor = Ue),
      (Ue.prototype.isMeshBasicMaterial = !0),
      (Ue.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.combine = e.combine),
          (this.reflectivity = e.reflectivity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          this
        );
      }),
      Object.assign(ke.prototype, {
        set: function (e, t) {
          return this.origin.copy(e), this.direction.copy(t), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            this.origin.copy(e.origin), this.direction.copy(e.direction), this
          );
        },
        at: function (e, t) {
          return (t || new l())
            .copy(this.direction)
            .multiplyScalar(e)
            .add(this.origin);
        },
        lookAt: function (e) {
          return this.direction.copy(e).sub(this.origin).normalize(), this;
        },
        recast: (function () {
          var e = new l();
          return function (t) {
            return this.origin.copy(this.at(t, e)), this;
          };
        })(),
        closestPointToPoint: function (e, t) {
          var n = t || new l();
          n.subVectors(e, this.origin);
          var r = n.dot(this.direction);
          return r < 0
            ? n.copy(this.origin)
            : n.copy(this.direction).multiplyScalar(r).add(this.origin);
        },
        distanceToPoint: function (e) {
          return Math.sqrt(this.distanceSqToPoint(e));
        },
        distanceSqToPoint: (function () {
          var e = new l();
          return function (t) {
            var n = e.subVectors(t, this.origin).dot(this.direction);
            return n < 0
              ? this.origin.distanceToSquared(t)
              : (e.copy(this.direction).multiplyScalar(n).add(this.origin),
                e.distanceToSquared(t));
          };
        })(),
        distanceSqToSegment: (function () {
          var e = new l(),
            t = new l(),
            n = new l();
          return function (r, i, o, a) {
            e.copy(r).add(i).multiplyScalar(0.5),
              t.copy(i).sub(r).normalize(),
              n.copy(this.origin).sub(e);
            var s,
              c,
              u,
              l,
              h = 0.5 * r.distanceTo(i),
              p = -this.direction.dot(t),
              d = n.dot(this.direction),
              f = -n.dot(t),
              m = n.lengthSq(),
              v = Math.abs(1 - p * p);
            if (v > 0)
              if (((s = p * f - d), (c = p * d - f), (l = h * v), s >= 0))
                if (c >= -l)
                  if (c <= l) {
                    var g = 1 / v;
                    (s *= g),
                      (c *= g),
                      (u =
                        s * (s + p * c + 2 * d) + c * (p * s + c + 2 * f) + m);
                  } else
                    (c = h),
                      (s = Math.max(0, -(p * c + d))),
                      (u = -s * s + c * (c + 2 * f) + m);
                else
                  (c = -h),
                    (s = Math.max(0, -(p * c + d))),
                    (u = -s * s + c * (c + 2 * f) + m);
              else
                c <= -l
                  ? ((s = Math.max(0, -(-p * h + d))),
                    (c = s > 0 ? -h : Math.min(Math.max(-h, -f), h)),
                    (u = -s * s + c * (c + 2 * f) + m))
                  : c <= l
                  ? ((s = 0),
                    (c = Math.min(Math.max(-h, -f), h)),
                    (u = c * (c + 2 * f) + m))
                  : ((s = Math.max(0, -(p * h + d))),
                    (c = s > 0 ? h : Math.min(Math.max(-h, -f), h)),
                    (u = -s * s + c * (c + 2 * f) + m));
            else
              (c = p > 0 ? -h : h),
                (s = Math.max(0, -(p * c + d))),
                (u = -s * s + c * (c + 2 * f) + m);
            return (
              o && o.copy(this.direction).multiplyScalar(s).add(this.origin),
              a && a.copy(t).multiplyScalar(c).add(e),
              u
            );
          };
        })(),
        intersectSphere: (function () {
          var e = new l();
          return function (t, n) {
            e.subVectors(t.center, this.origin);
            var r = e.dot(this.direction),
              i = e.dot(e) - r * r,
              o = t.radius * t.radius;
            if (i > o) return null;
            var a = Math.sqrt(o - i),
              s = r - a,
              c = r + a;
            return s < 0 && c < 0
              ? null
              : s < 0
              ? this.at(c, n)
              : this.at(s, n);
          };
        })(),
        intersectsSphere: function (e) {
          return this.distanceToPoint(e.center) <= e.radius;
        },
        distanceToPlane: function (e) {
          var t = e.normal.dot(this.direction);
          if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
          var n = -(this.origin.dot(e.normal) + e.constant) / t;
          return n >= 0 ? n : null;
        },
        intersectPlane: function (e, t) {
          var n = this.distanceToPlane(e);
          return null === n ? null : this.at(n, t);
        },
        intersectsPlane: function (e) {
          var t = e.distanceToPoint(this.origin);
          return 0 === t || e.normal.dot(this.direction) * t < 0;
        },
        intersectBox: function (e, t) {
          var n,
            r,
            i,
            o,
            a,
            s,
            c = 1 / this.direction.x,
            u = 1 / this.direction.y,
            l = 1 / this.direction.z,
            h = this.origin;
          return (
            c >= 0
              ? ((n = (e.min.x - h.x) * c), (r = (e.max.x - h.x) * c))
              : ((n = (e.max.x - h.x) * c), (r = (e.min.x - h.x) * c)),
            u >= 0
              ? ((i = (e.min.y - h.y) * u), (o = (e.max.y - h.y) * u))
              : ((i = (e.max.y - h.y) * u), (o = (e.min.y - h.y) * u)),
            n > o || i > r
              ? null
              : ((i > n || n !== n) && (n = i),
                (o < r || r !== r) && (r = o),
                l >= 0
                  ? ((a = (e.min.z - h.z) * l), (s = (e.max.z - h.z) * l))
                  : ((a = (e.max.z - h.z) * l), (s = (e.min.z - h.z) * l)),
                n > s || a > r
                  ? null
                  : ((a > n || n !== n) && (n = a),
                    (s < r || r !== r) && (r = s),
                    r < 0 ? null : this.at(n >= 0 ? n : r, t)))
          );
        },
        intersectsBox: (function () {
          var e = new l();
          return function (t) {
            return null !== this.intersectBox(t, e);
          };
        })(),
        intersectTriangle: (function () {
          var e = new l(),
            t = new l(),
            n = new l(),
            r = new l();
          return function (i, o, a, s, c) {
            t.subVectors(o, i), n.subVectors(a, i), r.crossVectors(t, n);
            var u,
              l = this.direction.dot(r);
            if (l > 0) {
              if (s) return null;
              u = 1;
            } else {
              if (!(l < 0)) return null;
              (u = -1), (l = -l);
            }
            e.subVectors(this.origin, i);
            var h = u * this.direction.dot(n.crossVectors(e, n));
            if (h < 0) return null;
            var p = u * this.direction.dot(t.cross(e));
            if (p < 0) return null;
            if (h + p > l) return null;
            var d = -u * e.dot(r);
            return d < 0 ? null : this.at(d / l, c);
          };
        })(),
        applyMatrix4: function (e) {
          return (
            this.origin.applyMatrix4(e),
            this.direction.transformDirection(e),
            this
          );
        },
        equals: function (e) {
          return (
            e.origin.equals(this.origin) && e.direction.equals(this.direction)
          );
        },
      }),
      Object.assign(Fe.prototype, {
        set: function (e, t) {
          return this.start.copy(e), this.end.copy(t), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.start.copy(e.start), this.end.copy(e.end), this;
        },
        getCenter: function (e) {
          return (e || new l())
            .addVectors(this.start, this.end)
            .multiplyScalar(0.5);
        },
        delta: function (e) {
          return (e || new l()).subVectors(this.end, this.start);
        },
        distanceSq: function () {
          return this.start.distanceToSquared(this.end);
        },
        distance: function () {
          return this.start.distanceTo(this.end);
        },
        at: function (e, t) {
          var n = t || new l();
          return this.delta(n).multiplyScalar(e).add(this.start);
        },
        closestPointToPointParameter: (function () {
          var e = new l(),
            t = new l();
          return function (n, r) {
            e.subVectors(n, this.start), t.subVectors(this.end, this.start);
            var i = t.dot(t),
              o = t.dot(e),
              a = o / i;
            return r && (a = Os.clamp(a, 0, 1)), a;
          };
        })(),
        closestPointToPoint: function (e, t, n) {
          var r = this.closestPointToPointParameter(e, t),
            i = n || new l();
          return this.delta(i).multiplyScalar(r).add(this.start);
        },
        applyMatrix4: function (e) {
          return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
        },
        equals: function (e) {
          return e.start.equals(this.start) && e.end.equals(this.end);
        },
      }),
      Object.assign(Ve, {
        normal: (function () {
          var e = new l();
          return function (t, n, r, i) {
            var o = i || new l();
            o.subVectors(r, n), e.subVectors(t, n), o.cross(e);
            var a = o.lengthSq();
            return a > 0 ? o.multiplyScalar(1 / Math.sqrt(a)) : o.set(0, 0, 0);
          };
        })(),
        barycoordFromPoint: (function () {
          var e = new l(),
            t = new l(),
            n = new l();
          return function (r, i, o, a, s) {
            e.subVectors(a, i), t.subVectors(o, i), n.subVectors(r, i);
            var c = e.dot(e),
              u = e.dot(t),
              h = e.dot(n),
              p = t.dot(t),
              d = t.dot(n),
              f = c * p - u * u,
              m = s || new l();
            if (0 === f) return m.set(-2, -1, -1);
            var v = 1 / f,
              g = (p * h - u * d) * v,
              y = (c * d - u * h) * v;
            return m.set(1 - g - y, y, g);
          };
        })(),
        containsPoint: (function () {
          var e = new l();
          return function (t, n, r, i) {
            var o = Ve.barycoordFromPoint(t, n, r, i, e);
            return o.x >= 0 && o.y >= 0 && o.x + o.y <= 1;
          };
        })(),
      }),
      Object.assign(Ve.prototype, {
        set: function (e, t, n) {
          return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
        },
        setFromPointsAndIndices: function (e, t, n, r) {
          return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[r]), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
        },
        area: (function () {
          var e = new l(),
            t = new l();
          return function () {
            return (
              e.subVectors(this.c, this.b),
              t.subVectors(this.a, this.b),
              0.5 * e.cross(t).length()
            );
          };
        })(),
        midpoint: function (e) {
          return (e || new l())
            .addVectors(this.a, this.b)
            .add(this.c)
            .multiplyScalar(1 / 3);
        },
        normal: function (e) {
          return Ve.normal(this.a, this.b, this.c, e);
        },
        plane: function (e) {
          return (e || new ae()).setFromCoplanarPoints(this.a, this.b, this.c);
        },
        barycoordFromPoint: function (e, t) {
          return Ve.barycoordFromPoint(e, this.a, this.b, this.c, t);
        },
        containsPoint: function (e) {
          return Ve.containsPoint(e, this.a, this.b, this.c);
        },
        closestPointToPoint: (function () {
          var e = new ae(),
            t = [new Fe(), new Fe(), new Fe()],
            n = new l(),
            r = new l();
          return function (i, o) {
            var a = o || new l(),
              s = 1 / 0;
            if (
              (e.setFromCoplanarPoints(this.a, this.b, this.c),
              e.projectPoint(i, n),
              !0 === this.containsPoint(n))
            )
              a.copy(n);
            else {
              t[0].set(this.a, this.b),
                t[1].set(this.b, this.c),
                t[2].set(this.c, this.a);
              for (var c = 0; c < t.length; c++) {
                t[c].closestPointToPoint(n, !0, r);
                var u = n.distanceToSquared(r);
                u < s && ((s = u), a.copy(r));
              }
            }
            return a;
          };
        })(),
        equals: function (e) {
          return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
        },
      }),
      (Be.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Be,
        isMesh: !0,
        setDrawMode: function (e) {
          this.drawMode = e;
        },
        copy: function (e) {
          return (
            pe.prototype.copy.call(this, e), (this.drawMode = e.drawMode), this
          );
        },
        updateMorphTargets: function () {
          var e,
            t,
            n,
            r = this.geometry;
          if (r.isBufferGeometry) {
            var i = r.morphAttributes,
              o = Object.keys(i);
            if (o.length > 0) {
              var a = i[o[0]];
              if (void 0 !== a)
                for (
                  this.morphTargetInfluences = [],
                    this.morphTargetDictionary = {},
                    e = 0,
                    t = a.length;
                  e < t;
                  e++
                )
                  (n = a[e].name || String(e)),
                    this.morphTargetInfluences.push(0),
                    (this.morphTargetDictionary[n] = e);
            }
          } else {
            var s = r.morphTargets;
            if (void 0 !== s && s.length > 0)
              for (
                this.morphTargetInfluences = [],
                  this.morphTargetDictionary = {},
                  e = 0,
                  t = s.length;
                e < t;
                e++
              )
                (n = s[e].name || String(e)),
                  this.morphTargetInfluences.push(0),
                  (this.morphTargetDictionary[n] = e);
          }
        },
        raycast: (function () {
          function e(e, t, n, r, i, o, a) {
            return (
              Ve.barycoordFromPoint(e, t, n, r, y),
              i.multiplyScalar(y.x),
              o.multiplyScalar(y.y),
              a.multiplyScalar(y.z),
              i.add(o).add(a),
              i.clone()
            );
          }
          function t(e, t, n, r, i, o, a, s) {
            if (
              null ===
              (t.side === No
                ? r.intersectTriangle(a, o, i, !0, s)
                : r.intersectTriangle(i, o, a, t.side !== Co, s))
            )
              return null;
            b.copy(s), b.applyMatrix4(e.matrixWorld);
            var c = n.ray.origin.distanceTo(b);
            return c < n.near || c > n.far
              ? null
              : { distance: c, point: b.clone(), object: e };
          }
          function n(n, r, i, o, a, l, h, p) {
            s.fromBufferAttribute(o, l),
              c.fromBufferAttribute(o, h),
              u.fromBufferAttribute(o, p);
            var d = t(n, n.material, r, i, s, c, u, _);
            return (
              d &&
                (a &&
                  (m.fromBufferAttribute(a, l),
                  v.fromBufferAttribute(a, h),
                  g.fromBufferAttribute(a, p),
                  (d.uv = e(_, s, c, u, m, v, g))),
                (d.face = new ve(l, h, p, Ve.normal(s, c, u))),
                (d.faceIndex = l)),
              d
            );
          }
          var r = new h(),
            o = new ke(),
            a = new ie(),
            s = new l(),
            c = new l(),
            u = new l(),
            p = new l(),
            d = new l(),
            f = new l(),
            m = new i(),
            v = new i(),
            g = new i(),
            y = new l(),
            _ = new l(),
            b = new l();
          return function (i, l) {
            var h = this.geometry,
              y = this.material,
              b = this.matrixWorld;
            if (
              void 0 !== y &&
              (null === h.boundingSphere && h.computeBoundingSphere(),
              a.copy(h.boundingSphere),
              a.applyMatrix4(b),
              !1 !== i.ray.intersectsSphere(a) &&
                (r.getInverse(b),
                o.copy(i.ray).applyMatrix4(r),
                null === h.boundingBox ||
                  !1 !== o.intersectsBox(h.boundingBox)))
            ) {
              var x;
              if (h.isBufferGeometry) {
                var E,
                  w,
                  M,
                  T,
                  S,
                  N = h.index,
                  C = h.attributes.position,
                  A = h.attributes.uv;
                if (null !== N)
                  for (T = 0, S = N.count; T < S; T += 3)
                    (E = N.getX(T)),
                      (w = N.getX(T + 1)),
                      (M = N.getX(T + 2)),
                      (x = n(this, i, o, C, A, E, w, M)) &&
                        ((x.faceIndex = Math.floor(T / 3)), l.push(x));
                else
                  for (T = 0, S = C.count; T < S; T += 3)
                    (E = T),
                      (w = T + 1),
                      (M = T + 2),
                      (x = n(this, i, o, C, A, E, w, M)) &&
                        ((x.index = E), l.push(x));
              } else if (h.isGeometry) {
                var R,
                  P,
                  O,
                  D,
                  L = Array.isArray(y),
                  I = h.vertices,
                  U = h.faces,
                  k = h.faceVertexUvs[0];
                k.length > 0 && (D = k);
                for (var F = 0, V = U.length; F < V; F++) {
                  var B = U[F],
                    z = L ? y[B.materialIndex] : y;
                  if (void 0 !== z) {
                    if (
                      ((R = I[B.a]),
                      (P = I[B.b]),
                      (O = I[B.c]),
                      !0 === z.morphTargets)
                    ) {
                      var H = h.morphTargets,
                        j = this.morphTargetInfluences;
                      s.set(0, 0, 0), c.set(0, 0, 0), u.set(0, 0, 0);
                      for (var G = 0, W = H.length; G < W; G++) {
                        var q = j[G];
                        if (0 !== q) {
                          var X = H[G].vertices;
                          s.addScaledVector(p.subVectors(X[B.a], R), q),
                            c.addScaledVector(d.subVectors(X[B.b], P), q),
                            u.addScaledVector(f.subVectors(X[B.c], O), q);
                        }
                      }
                      s.add(R), c.add(P), u.add(O), (R = s), (P = c), (O = u);
                    }
                    if ((x = t(this, z, i, o, R, P, O, _))) {
                      if (D && D[F]) {
                        var Y = D[F];
                        m.copy(Y[0]),
                          v.copy(Y[1]),
                          g.copy(Y[2]),
                          (x.uv = e(_, R, P, O, m, v, g));
                      }
                      (x.face = B), (x.faceIndex = F), l.push(x);
                    }
                  }
                }
              }
            }
          };
        })(),
        clone: function () {
          return new this.constructor(this.geometry, this.material).copy(this);
        },
      }));
    var Zs = 0;
    (_t.prototype = Object.assign(Object.create(me.prototype), {
      constructor: _t,
      isArrayCamera: !0,
    })),
      (Tt.prototype.isFogExp2 = !0),
      (Tt.prototype.clone = function () {
        return new Tt(this.color.getHex(), this.density);
      }),
      (Tt.prototype.toJSON = function (e) {
        return {
          type: "FogExp2",
          color: this.color.getHex(),
          density: this.density,
        };
      }),
      (St.prototype.isFog = !0),
      (St.prototype.clone = function () {
        return new St(this.color.getHex(), this.near, this.far);
      }),
      (St.prototype.toJSON = function (e) {
        return {
          type: "Fog",
          color: this.color.getHex(),
          near: this.near,
          far: this.far,
        };
      }),
      (Nt.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Nt,
        copy: function (e, t) {
          return (
            pe.prototype.copy.call(this, e, t),
            null !== e.background && (this.background = e.background.clone()),
            null !== e.fog && (this.fog = e.fog.clone()),
            null !== e.overrideMaterial &&
              (this.overrideMaterial = e.overrideMaterial.clone()),
            (this.autoUpdate = e.autoUpdate),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this
          );
        },
        toJSON: function (e) {
          var t = pe.prototype.toJSON.call(this, e);
          return (
            null !== this.background &&
              (t.object.background = this.background.toJSON(e)),
            null !== this.fog && (t.object.fog = this.fog.toJSON()),
            t
          );
        },
      })),
      (Ct.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Ct,
        isLensFlare: !0,
        copy: function (e) {
          pe.prototype.copy.call(this, e),
            this.positionScreen.copy(e.positionScreen),
            (this.customUpdateCallback = e.customUpdateCallback);
          for (var t = 0, n = e.lensFlares.length; t < n; t++)
            this.lensFlares.push(e.lensFlares[t]);
          return this;
        },
        add: function (e, t, n, r, i, o) {
          void 0 === t && (t = -1),
            void 0 === n && (n = 0),
            void 0 === o && (o = 1),
            void 0 === i && (i = new Y(16777215)),
            void 0 === r && (r = Io),
            (n = Math.min(n, Math.max(0, n))),
            this.lensFlares.push({
              texture: e,
              size: t,
              distance: n,
              x: 0,
              y: 0,
              z: 0,
              scale: 1,
              rotation: 0,
              opacity: o,
              color: i,
              blending: r,
            });
        },
        updateLensFlares: function () {
          var e,
            t,
            n = this.lensFlares.length,
            r = 2 * -this.positionScreen.x,
            i = 2 * -this.positionScreen.y;
          for (e = 0; e < n; e++)
            (t = this.lensFlares[e]),
              (t.x = this.positionScreen.x + r * t.distance),
              (t.y = this.positionScreen.y + i * t.distance),
              (t.wantedRotation = t.x * Math.PI * 0.25),
              (t.rotation += 0.25 * (t.wantedRotation - t.rotation));
        },
      })),
      (At.prototype = Object.create($.prototype)),
      (At.prototype.constructor = At),
      (At.prototype.isSpriteMaterial = !0),
      (At.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.rotation = e.rotation),
          this
        );
      }),
      (Rt.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Rt,
        isSprite: !0,
        raycast: (function () {
          var e = new l(),
            t = new l(),
            n = new l();
          return function (r, i) {
            t.setFromMatrixPosition(this.matrixWorld),
              r.ray.closestPointToPoint(t, e),
              n.setFromMatrixScale(this.matrixWorld);
            var o = (n.x * n.y) / 4;
            if (!(t.distanceToSquared(e) > o)) {
              var a = r.ray.origin.distanceTo(e);
              a < r.near ||
                a > r.far ||
                i.push({
                  distance: a,
                  point: e.clone(),
                  face: null,
                  object: this,
                });
            }
          };
        })(),
        clone: function () {
          return new this.constructor(this.material).copy(this);
        },
      })),
      (Pt.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Pt,
        copy: function (e) {
          pe.prototype.copy.call(this, e, !1);
          for (var t = e.levels, n = 0, r = t.length; n < r; n++) {
            var i = t[n];
            this.addLevel(i.object.clone(), i.distance);
          }
          return this;
        },
        addLevel: function (e, t) {
          void 0 === t && (t = 0), (t = Math.abs(t));
          for (
            var n = this.levels, r = 0;
            r < n.length && !(t < n[r].distance);
            r++
          );
          n.splice(r, 0, { distance: t, object: e }), this.add(e);
        },
        getObjectForDistance: function (e) {
          for (
            var t = this.levels, n = 1, r = t.length;
            n < r && !(e < t[n].distance);
            n++
          );
          return t[n - 1].object;
        },
        raycast: (function () {
          var e = new l();
          return function (t, n) {
            e.setFromMatrixPosition(this.matrixWorld);
            var r = t.ray.origin.distanceTo(e);
            this.getObjectForDistance(r).raycast(t, n);
          };
        })(),
        update: (function () {
          var e = new l(),
            t = new l();
          return function (n) {
            var r = this.levels;
            if (r.length > 1) {
              e.setFromMatrixPosition(n.matrixWorld),
                t.setFromMatrixPosition(this.matrixWorld);
              var i = e.distanceTo(t);
              r[0].object.visible = !0;
              for (var o = 1, a = r.length; o < a && i >= r[o].distance; o++)
                (r[o - 1].object.visible = !1), (r[o].object.visible = !0);
              for (; o < a; o++) r[o].object.visible = !1;
            }
          };
        })(),
        toJSON: function (e) {
          var t = pe.prototype.toJSON.call(this, e);
          t.object.levels = [];
          for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
            var o = n[r];
            t.object.levels.push({
              object: o.object.uuid,
              distance: o.distance,
            });
          }
          return t;
        },
      })),
      Object.assign(Ot.prototype, {
        calculateInverses: function () {
          this.boneInverses = [];
          for (var e = 0, t = this.bones.length; e < t; e++) {
            var n = new h();
            this.bones[e] && n.getInverse(this.bones[e].matrixWorld),
              this.boneInverses.push(n);
          }
        },
        pose: function () {
          var e, t, n;
          for (t = 0, n = this.bones.length; t < n; t++)
            (e = this.bones[t]) &&
              e.matrixWorld.getInverse(this.boneInverses[t]);
          for (t = 0, n = this.bones.length; t < n; t++)
            (e = this.bones[t]) &&
              (e.parent && e.parent.isBone
                ? (e.matrix.getInverse(e.parent.matrixWorld),
                  e.matrix.multiply(e.matrixWorld))
                : e.matrix.copy(e.matrixWorld),
              e.matrix.decompose(e.position, e.quaternion, e.scale));
        },
        update: (function () {
          var e = new h(),
            t = new h();
          return function () {
            for (
              var n = this.bones,
                r = this.boneInverses,
                i = this.boneMatrices,
                o = this.boneTexture,
                a = 0,
                s = n.length;
              a < s;
              a++
            ) {
              var c = n[a] ? n[a].matrixWorld : t;
              e.multiplyMatrices(c, r[a]), e.toArray(i, 16 * a);
            }
            void 0 !== o && (o.needsUpdate = !0);
          };
        })(),
        clone: function () {
          return new Ot(this.bones, this.boneInverses);
        },
      }),
      (Dt.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Dt,
        isBone: !0,
      })),
      (Lt.prototype = Object.assign(Object.create(Be.prototype), {
        constructor: Lt,
        isSkinnedMesh: !0,
        initBones: function () {
          var e,
            t,
            n,
            r,
            i = [];
          if (this.geometry && void 0 !== this.geometry.bones) {
            for (n = 0, r = this.geometry.bones.length; n < r; n++)
              (t = this.geometry.bones[n]),
                (e = new Dt()),
                i.push(e),
                (e.name = t.name),
                e.position.fromArray(t.pos),
                e.quaternion.fromArray(t.rotq),
                void 0 !== t.scl && e.scale.fromArray(t.scl);
            for (n = 0, r = this.geometry.bones.length; n < r; n++)
              (t = this.geometry.bones[n]),
                -1 !== t.parent && null !== t.parent && void 0 !== i[t.parent]
                  ? i[t.parent].add(i[n])
                  : this.add(i[n]);
          }
          return this.updateMatrixWorld(!0), i;
        },
        bind: function (e, t) {
          (this.skeleton = e),
            void 0 === t &&
              (this.updateMatrixWorld(!0),
              this.skeleton.calculateInverses(),
              (t = this.matrixWorld)),
            this.bindMatrix.copy(t),
            this.bindMatrixInverse.getInverse(t);
        },
        pose: function () {
          this.skeleton.pose();
        },
        normalizeSkinWeights: function () {
          var e, t;
          if (this.geometry && this.geometry.isGeometry)
            for (t = 0; t < this.geometry.skinWeights.length; t++) {
              var n = this.geometry.skinWeights[t];
              (e = 1 / n.lengthManhattan()),
                e !== 1 / 0 ? n.multiplyScalar(e) : n.set(1, 0, 0, 0);
            }
          else if (this.geometry && this.geometry.isBufferGeometry) {
            var r = new a(),
              i = this.geometry.attributes.skinWeight;
            for (t = 0; t < i.count; t++)
              (r.x = i.getX(t)),
                (r.y = i.getY(t)),
                (r.z = i.getZ(t)),
                (r.w = i.getW(t)),
                (e = 1 / r.lengthManhattan()),
                e !== 1 / 0 ? r.multiplyScalar(e) : r.set(1, 0, 0, 0),
                i.setXYZW(t, r.x, r.y, r.z, r.w);
          }
        },
        updateMatrixWorld: function (e) {
          Be.prototype.updateMatrixWorld.call(this, e),
            "attached" === this.bindMode
              ? this.bindMatrixInverse.getInverse(this.matrixWorld)
              : "detached" === this.bindMode
              ? this.bindMatrixInverse.getInverse(this.bindMatrix)
              : console.warn(
                  "THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode
                );
        },
        clone: function () {
          return new this.constructor(this.geometry, this.material).copy(this);
        },
      })),
      (It.prototype = Object.create($.prototype)),
      (It.prototype.constructor = It),
      (It.prototype.isLineBasicMaterial = !0),
      (It.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.linewidth = e.linewidth),
          (this.linecap = e.linecap),
          (this.linejoin = e.linejoin),
          this
        );
      }),
      (Ut.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Ut,
        isLine: !0,
        raycast: (function () {
          var e = new h(),
            t = new ke(),
            n = new ie();
          return function (r, i) {
            var o = r.linePrecision,
              a = o * o,
              s = this.geometry,
              c = this.matrixWorld;
            if (
              (null === s.boundingSphere && s.computeBoundingSphere(),
              n.copy(s.boundingSphere),
              n.applyMatrix4(c),
              !1 !== r.ray.intersectsSphere(n))
            ) {
              e.getInverse(c), t.copy(r.ray).applyMatrix4(e);
              var u = new l(),
                h = new l(),
                p = new l(),
                d = new l(),
                f = this && this.isLineSegments ? 2 : 1;
              if (s.isBufferGeometry) {
                var m = s.index,
                  v = s.attributes,
                  g = v.position.array;
                if (null !== m)
                  for (
                    var y = m.array, _ = 0, b = y.length - 1;
                    _ < b;
                    _ += f
                  ) {
                    var x = y[_],
                      E = y[_ + 1];
                    u.fromArray(g, 3 * x), h.fromArray(g, 3 * E);
                    var w = t.distanceSqToSegment(u, h, d, p);
                    if (!(w > a)) {
                      d.applyMatrix4(this.matrixWorld);
                      var M = r.ray.origin.distanceTo(d);
                      M < r.near ||
                        M > r.far ||
                        i.push({
                          distance: M,
                          point: p.clone().applyMatrix4(this.matrixWorld),
                          index: _,
                          face: null,
                          faceIndex: null,
                          object: this,
                        });
                    }
                  }
                else
                  for (var _ = 0, b = g.length / 3 - 1; _ < b; _ += f) {
                    u.fromArray(g, 3 * _), h.fromArray(g, 3 * _ + 3);
                    var w = t.distanceSqToSegment(u, h, d, p);
                    if (!(w > a)) {
                      d.applyMatrix4(this.matrixWorld);
                      var M = r.ray.origin.distanceTo(d);
                      M < r.near ||
                        M > r.far ||
                        i.push({
                          distance: M,
                          point: p.clone().applyMatrix4(this.matrixWorld),
                          index: _,
                          face: null,
                          faceIndex: null,
                          object: this,
                        });
                    }
                  }
              } else if (s.isGeometry)
                for (
                  var T = s.vertices, S = T.length, _ = 0;
                  _ < S - 1;
                  _ += f
                ) {
                  var w = t.distanceSqToSegment(T[_], T[_ + 1], d, p);
                  if (!(w > a)) {
                    d.applyMatrix4(this.matrixWorld);
                    var M = r.ray.origin.distanceTo(d);
                    M < r.near ||
                      M > r.far ||
                      i.push({
                        distance: M,
                        point: p.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this,
                      });
                  }
                }
            }
          };
        })(),
        clone: function () {
          return new this.constructor(this.geometry, this.material).copy(this);
        },
      })),
      (kt.prototype = Object.assign(Object.create(Ut.prototype), {
        constructor: kt,
        isLineSegments: !0,
      })),
      (Ft.prototype = Object.assign(Object.create(Ut.prototype), {
        constructor: Ft,
        isLineLoop: !0,
      })),
      (Vt.prototype = Object.create($.prototype)),
      (Vt.prototype.constructor = Vt),
      (Vt.prototype.isPointsMaterial = !0),
      (Vt.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.size = e.size),
          (this.sizeAttenuation = e.sizeAttenuation),
          this
        );
      }),
      (Bt.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Bt,
        isPoints: !0,
        raycast: (function () {
          var e = new h(),
            t = new ke(),
            n = new ie();
          return function (r, i) {
            function o(e, n) {
              var o = t.distanceSqToPoint(e);
              if (o < p) {
                var s = t.closestPointToPoint(e);
                s.applyMatrix4(c);
                var u = r.ray.origin.distanceTo(s);
                if (u < r.near || u > r.far) return;
                i.push({
                  distance: u,
                  distanceToRay: Math.sqrt(o),
                  point: s.clone(),
                  index: n,
                  face: null,
                  object: a,
                });
              }
            }
            var a = this,
              s = this.geometry,
              c = this.matrixWorld,
              u = r.params.Points.threshold;
            if (
              (null === s.boundingSphere && s.computeBoundingSphere(),
              n.copy(s.boundingSphere),
              n.applyMatrix4(c),
              (n.radius += u),
              !1 !== r.ray.intersectsSphere(n))
            ) {
              e.getInverse(c), t.copy(r.ray).applyMatrix4(e);
              var h = u / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                p = h * h,
                d = new l();
              if (s.isBufferGeometry) {
                var f = s.index,
                  m = s.attributes,
                  v = m.position.array;
                if (null !== f)
                  for (var g = f.array, y = 0, _ = g.length; y < _; y++) {
                    var b = g[y];
                    d.fromArray(v, 3 * b), o(d, b);
                  }
                else
                  for (var y = 0, x = v.length / 3; y < x; y++)
                    d.fromArray(v, 3 * y), o(d, y);
              } else
                for (var E = s.vertices, y = 0, x = E.length; y < x; y++)
                  o(E[y], y);
            }
          };
        })(),
        clone: function () {
          return new this.constructor(this.geometry, this.material).copy(this);
        },
      })),
      (zt.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: zt,
      })),
      (Ht.prototype = Object.create(o.prototype)),
      (Ht.prototype.constructor = Ht),
      (jt.prototype = Object.create(o.prototype)),
      (jt.prototype.constructor = jt),
      (jt.prototype.isCompressedTexture = !0),
      (Gt.prototype = Object.create(o.prototype)),
      (Gt.prototype.constructor = Gt),
      (Gt.prototype.isDepthTexture = !0),
      (Wt.prototype = Object.create(Pe.prototype)),
      (Wt.prototype.constructor = Wt),
      (qt.prototype = Object.create(ye.prototype)),
      (qt.prototype.constructor = qt),
      (Xt.prototype = Object.create(Pe.prototype)),
      (Xt.prototype.constructor = Xt),
      (Yt.prototype = Object.create(ye.prototype)),
      (Yt.prototype.constructor = Yt),
      (Zt.prototype = Object.create(Pe.prototype)),
      (Zt.prototype.constructor = Zt),
      (Kt.prototype = Object.create(ye.prototype)),
      (Kt.prototype.constructor = Kt),
      (Jt.prototype = Object.create(Zt.prototype)),
      (Jt.prototype.constructor = Jt),
      (Qt.prototype = Object.create(ye.prototype)),
      (Qt.prototype.constructor = Qt),
      ($t.prototype = Object.create(Zt.prototype)),
      ($t.prototype.constructor = $t),
      (en.prototype = Object.create(ye.prototype)),
      (en.prototype.constructor = en),
      (tn.prototype = Object.create(Zt.prototype)),
      (tn.prototype.constructor = tn),
      (nn.prototype = Object.create(ye.prototype)),
      (nn.prototype.constructor = nn),
      (rn.prototype = Object.create(Zt.prototype)),
      (rn.prototype.constructor = rn),
      (on.prototype = Object.create(ye.prototype)),
      (on.prototype.constructor = on),
      (an.prototype = Object.create(Pe.prototype)),
      (an.prototype.constructor = an),
      (sn.prototype = Object.create(ye.prototype)),
      (sn.prototype.constructor = sn),
      (cn.prototype = Object.create(Pe.prototype)),
      (cn.prototype.constructor = cn),
      (un.prototype = Object.create(ye.prototype)),
      (un.prototype.constructor = un),
      (ln.prototype = Object.create(Pe.prototype)),
      (ln.prototype.constructor = ln);
    var Ks = {
      area: function (e) {
        for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++)
          n += e[r].x * e[i].y - e[i].x * e[r].y;
        return 0.5 * n;
      },
      triangulate: (function () {
        function e(e, t, n, r, i, o) {
          var a, s, c, u, l, h, p, d, f;
          if (
            ((s = e[o[t]].x),
            (c = e[o[t]].y),
            (u = e[o[n]].x),
            (l = e[o[n]].y),
            (h = e[o[r]].x),
            (p = e[o[r]].y),
            (u - s) * (p - c) - (l - c) * (h - s) <= 0)
          )
            return !1;
          var m, v, g, y, _, b, x, E, w, M, T, S, N, C, A;
          for (
            m = h - u,
              v = p - l,
              g = s - h,
              y = c - p,
              _ = u - s,
              b = l - c,
              a = 0;
            a < i;
            a++
          )
            if (
              ((d = e[o[a]].x),
              (f = e[o[a]].y),
              !(
                (d === s && f === c) ||
                (d === u && f === l) ||
                (d === h && f === p)
              ) &&
                ((x = d - s),
                (E = f - c),
                (w = d - u),
                (M = f - l),
                (T = d - h),
                (S = f - p),
                (A = m * M - v * w),
                (N = _ * E - b * x),
                (C = g * S - y * T),
                A >= -Number.EPSILON &&
                  C >= -Number.EPSILON &&
                  N >= -Number.EPSILON))
            )
              return !1;
          return !0;
        }
        return function (t, n) {
          var r = t.length;
          if (r < 3) return null;
          var i,
            o,
            a,
            s = [],
            c = [],
            u = [];
          if (Ks.area(t) > 0) for (o = 0; o < r; o++) c[o] = o;
          else for (o = 0; o < r; o++) c[o] = r - 1 - o;
          var l = r,
            h = 2 * l;
          for (o = l - 1; l > 2; ) {
            if (h-- <= 0)
              return (
                console.warn(
                  "THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"
                ),
                n ? u : s
              );
            if (
              ((i = o),
              l <= i && (i = 0),
              (o = i + 1),
              l <= o && (o = 0),
              (a = o + 1),
              l <= a && (a = 0),
              e(t, i, o, a, l, c))
            ) {
              var p, d, f, m, v;
              for (
                p = c[i],
                  d = c[o],
                  f = c[a],
                  s.push([t[p], t[d], t[f]]),
                  u.push([c[i], c[o], c[a]]),
                  m = o,
                  v = o + 1;
                v < l;
                m++, v++
              )
                c[m] = c[v];
              l--, (h = 2 * l);
            }
          }
          return n ? u : s;
        };
      })(),
      triangulateShape: function (e, t) {
        function n(e) {
          var t = e.length;
          t > 2 && e[t - 1].equals(e[0]) && e.pop();
        }
        function r(e, t, n) {
          return e.x !== t.x
            ? e.x < t.x
              ? e.x <= n.x && n.x <= t.x
              : t.x <= n.x && n.x <= e.x
            : e.y < t.y
            ? e.y <= n.y && n.y <= t.y
            : t.y <= n.y && n.y <= e.y;
        }
        function i(e, t, n, i, o) {
          var a = t.x - e.x,
            s = t.y - e.y,
            c = i.x - n.x,
            u = i.y - n.y,
            l = e.x - n.x,
            h = e.y - n.y,
            p = s * c - a * u,
            d = s * l - a * h;
          if (Math.abs(p) > Number.EPSILON) {
            var f;
            if (p > 0) {
              if (d < 0 || d > p) return [];
              if ((f = u * l - c * h) < 0 || f > p) return [];
            } else {
              if (d > 0 || d < p) return [];
              if ((f = u * l - c * h) > 0 || f < p) return [];
            }
            if (0 === f) return !o || (0 !== d && d !== p) ? [e] : [];
            if (f === p) return !o || (0 !== d && d !== p) ? [t] : [];
            if (0 === d) return [n];
            if (d === p) return [i];
            var m = f / p;
            return [{ x: e.x + m * a, y: e.y + m * s }];
          }
          if (0 !== d || u * l != c * h) return [];
          var v = 0 === a && 0 === s,
            g = 0 === c && 0 === u;
          if (v && g) return e.x !== n.x || e.y !== n.y ? [] : [e];
          if (v) return r(n, i, e) ? [e] : [];
          if (g) return r(e, t, n) ? [n] : [];
          var y, _, b, x, E, w, M, T;
          return (
            0 !== a
              ? (e.x < t.x
                  ? ((y = e), (b = e.x), (_ = t), (x = t.x))
                  : ((y = t), (b = t.x), (_ = e), (x = e.x)),
                n.x < i.x
                  ? ((E = n), (M = n.x), (w = i), (T = i.x))
                  : ((E = i), (M = i.x), (w = n), (T = n.x)))
              : (e.y < t.y
                  ? ((y = e), (b = e.y), (_ = t), (x = t.y))
                  : ((y = t), (b = t.y), (_ = e), (x = e.y)),
                n.y < i.y
                  ? ((E = n), (M = n.y), (w = i), (T = i.y))
                  : ((E = i), (M = i.y), (w = n), (T = n.y))),
            b <= M
              ? x < M
                ? []
                : x === M
                ? o
                  ? []
                  : [E]
                : x <= T
                ? [E, _]
                : [E, w]
              : b > T
              ? []
              : b === T
              ? o
                ? []
                : [y]
              : x <= T
              ? [y, _]
              : [y, w]
          );
        }
        function o(e, t, n, r) {
          var i = t.x - e.x,
            o = t.y - e.y,
            a = n.x - e.x,
            s = n.y - e.y,
            c = r.x - e.x,
            u = r.y - e.y,
            l = i * s - o * a,
            h = i * u - o * c;
          if (Math.abs(l) > Number.EPSILON) {
            var p = c * s - u * a;
            return l > 0 ? h >= 0 && p >= 0 : h >= 0 || p >= 0;
          }
          return h > 0;
        }
        n(e), t.forEach(n);
        for (
          var a, s, c, u, l, h, p = {}, d = e.concat(), f = 0, m = t.length;
          f < m;
          f++
        )
          Array.prototype.push.apply(d, t[f]);
        for (a = 0, s = d.length; a < s; a++)
          (l = d[a].x + ":" + d[a].y),
            void 0 !== p[l] &&
              console.warn("THREE.ShapeUtils: Duplicate point", l, a),
            (p[l] = a);
        var v = (function (e, t) {
            for (
              var n,
                r,
                a,
                s,
                c,
                u,
                l,
                h,
                p,
                d,
                f,
                m = e.concat(),
                v = [],
                g = [],
                y = 0,
                _ = t.length;
              y < _;
              y++
            )
              v.push(y);
            for (var b = 0, x = 2 * v.length; v.length > 0; ) {
              if (--x < 0) {
                console.log(
                  'THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!'
                );
                break;
              }
              for (a = b; a < m.length; a++) {
                (s = m[a]), (r = -1);
                for (var y = 0; y < v.length; y++)
                  if (
                    ((u = v[y]),
                    (l = s.x + ":" + s.y + ":" + u),
                    void 0 === g[l])
                  ) {
                    n = t[u];
                    for (var E = 0; E < n.length; E++)
                      if (
                        ((c = n[E]),
                        (function (e, t) {
                          var r = m.length - 1,
                            i = e - 1;
                          i < 0 && (i = r);
                          var a = e + 1;
                          a > r && (a = 0);
                          var s = o(m[e], m[i], m[a], n[t]);
                          if (!s) return !1;
                          var c = n.length - 1,
                            u = t - 1;
                          u < 0 && (u = c);
                          var l = t + 1;
                          return (
                            l > c && (l = 0), !!(s = o(n[t], n[u], n[l], m[e]))
                          );
                        })(a, E) &&
                          !(function (e, t) {
                            var n, r, o;
                            for (n = 0; n < m.length; n++)
                              if (
                                ((r = n + 1),
                                (r %= m.length),
                                (o = i(e, t, m[n], m[r], !0)),
                                o.length > 0)
                              )
                                return !0;
                            return !1;
                          })(s, c) &&
                          !(function (e, n) {
                            var r, o, a, s, c;
                            for (r = 0; r < v.length; r++)
                              for (o = t[v[r]], a = 0; a < o.length; a++)
                                if (
                                  ((s = a + 1),
                                  (s %= o.length),
                                  (c = i(e, n, o[a], o[s], !0)),
                                  c.length > 0)
                                )
                                  return !0;
                            return !1;
                          })(s, c))
                      ) {
                        (r = E),
                          v.splice(y, 1),
                          (h = m.slice(0, a + 1)),
                          (p = m.slice(a)),
                          (d = n.slice(r)),
                          (f = n.slice(0, r + 1)),
                          (m = h.concat(d).concat(f).concat(p)),
                          (b = a);
                        break;
                      }
                    if (r >= 0) break;
                    g[l] = !0;
                  }
                if (r >= 0) break;
              }
            }
            return m;
          })(e, t),
          g = Ks.triangulate(v, !1);
        for (a = 0, s = g.length; a < s; a++)
          for (u = g[a], c = 0; c < 3; c++)
            (l = u[c].x + ":" + u[c].y), void 0 !== (h = p[l]) && (u[c] = h);
        return g.concat();
      },
      isClockWise: function (e) {
        return Ks.area(e) < 0;
      },
    };
    (hn.prototype = Object.create(ye.prototype)),
      (hn.prototype.constructor = hn),
      (pn.prototype = Object.create(Pe.prototype)),
      (pn.prototype.constructor = pn),
      (pn.prototype.getArrays = function () {
        var e = this.getAttribute("position"),
          t = e ? Array.prototype.slice.call(e.array) : [],
          n = this.getAttribute("uv"),
          r = n ? Array.prototype.slice.call(n.array) : [],
          i = this.index;
        return {
          position: t,
          uv: r,
          index: i ? Array.prototype.slice.call(i.array) : [],
        };
      }),
      (pn.prototype.addShapeList = function (e, t) {
        var n = e.length;
        t.arrays = this.getArrays();
        for (var r = 0; r < n; r++) {
          var i = e[r];
          this.addShape(i, t);
        }
        this.setIndex(t.arrays.index),
          this.addAttribute("position", new Ne(t.arrays.position, 3)),
          this.addAttribute("uv", new Ne(t.arrays.uv, 2));
      }),
      (pn.prototype.addShape = function (e, t) {
        function n(e, t, n) {
          return (
            t || console.error("THREE.ExtrudeGeometry: vec does not exist"),
            t.clone().multiplyScalar(n).add(e)
          );
        }
        function r(e, t, n) {
          var r,
            o,
            a,
            s = e.x - t.x,
            c = e.y - t.y,
            u = n.x - e.x,
            l = n.y - e.y,
            h = s * s + c * c,
            p = s * l - c * u;
          if (Math.abs(p) > Number.EPSILON) {
            var d = Math.sqrt(h),
              f = Math.sqrt(u * u + l * l),
              m = t.x - c / d,
              v = t.y + s / d,
              g = n.x - l / f,
              y = n.y + u / f,
              _ = ((g - m) * l - (y - v) * u) / (s * l - c * u);
            (r = m + s * _ - e.x), (o = v + c * _ - e.y);
            var b = r * r + o * o;
            if (b <= 2) return new i(r, o);
            a = Math.sqrt(b / 2);
          } else {
            var x = !1;
            s > Number.EPSILON
              ? u > Number.EPSILON && (x = !0)
              : s < -Number.EPSILON
              ? u < -Number.EPSILON && (x = !0)
              : Math.sign(c) === Math.sign(l) && (x = !0),
              x
                ? ((r = -c), (o = s), (a = Math.sqrt(h)))
                : ((r = s), (o = c), (a = Math.sqrt(h / 2)));
          }
          return new i(r / a, o / a);
        }
        function o(e, t) {
          var n, r;
          for (K = e.length; --K >= 0; ) {
            (n = K), (r = K - 1), r < 0 && (r = e.length - 1);
            var i = 0,
              o = C + 2 * T;
            for (i = 0; i < o; i++) {
              var a = X * i,
                s = X * (i + 1);
              c(t + n + a, t + r + a, t + r + s, t + n + s, e, i, o, n, r);
            }
          }
        }
        function a(e, t, n) {
          x.push(e), x.push(t), x.push(n);
        }
        function s(e, t, n) {
          u(e), u(t), u(n);
          var r = y.length / 3,
            i = P.generateTopUV(I, y, r - 3, r - 2, r - 1);
          h(i[0]), h(i[1]), h(i[2]);
        }
        function c(e, t, n, r, i, o, a, s, c) {
          u(e), u(t), u(r), u(t), u(n), u(r);
          var l = y.length / 3,
            p = P.generateSideWallUV(I, y, l - 6, l - 3, l - 2, l - 1);
          h(p[0]), h(p[1]), h(p[3]), h(p[1]), h(p[2]), h(p[3]);
        }
        function u(e) {
          _.push(y.length / 3),
            y.push(x[3 * e + 0]),
            y.push(x[3 * e + 1]),
            y.push(x[3 * e + 2]);
        }
        function h(e) {
          b.push(e.x), b.push(e.y);
        }
        var p,
          d,
          f,
          m,
          v,
          g = t.arrays ? t.arrays : this.getArrays(),
          y = g.position,
          _ = g.index,
          b = g.uv,
          x = [],
          E = void 0 !== t.amount ? t.amount : 100,
          w = void 0 !== t.bevelThickness ? t.bevelThickness : 6,
          M = void 0 !== t.bevelSize ? t.bevelSize : w - 2,
          T = void 0 !== t.bevelSegments ? t.bevelSegments : 3,
          S = void 0 === t.bevelEnabled || t.bevelEnabled,
          N = void 0 !== t.curveSegments ? t.curveSegments : 12,
          C = void 0 !== t.steps ? t.steps : 1,
          A = t.extrudePath,
          R = !1,
          P = void 0 !== t.UVGenerator ? t.UVGenerator : hn.WorldUVGenerator;
        A &&
          ((p = A.getSpacedPoints(C)),
          (R = !0),
          (S = !1),
          (d = void 0 !== t.frames ? t.frames : A.computeFrenetFrames(C, !1)),
          (f = new l()),
          (m = new l()),
          (v = new l())),
          S || ((T = 0), (w = 0), (M = 0));
        var O,
          D,
          L,
          I = this,
          U = e.extractPoints(N),
          k = U.shape,
          F = U.holes;
        if (!Ks.isClockWise(k))
          for (k = k.reverse(), D = 0, L = F.length; D < L; D++)
            (O = F[D]), Ks.isClockWise(O) && (F[D] = O.reverse());
        var V = Ks.triangulateShape(k, F),
          B = k;
        for (D = 0, L = F.length; D < L; D++) (O = F[D]), (k = k.concat(O));
        for (
          var z,
            H,
            j,
            G,
            W,
            q,
            X = k.length,
            Y = V.length,
            Z = [],
            K = 0,
            J = B.length,
            Q = J - 1,
            $ = K + 1;
          K < J;
          K++, Q++, $++
        )
          Q === J && (Q = 0), $ === J && ($ = 0), (Z[K] = r(B[K], B[Q], B[$]));
        var ee,
          te = [],
          ne = Z.concat();
        for (D = 0, L = F.length; D < L; D++) {
          for (
            O = F[D], ee = [], K = 0, J = O.length, Q = J - 1, $ = K + 1;
            K < J;
            K++, Q++, $++
          )
            Q === J && (Q = 0),
              $ === J && ($ = 0),
              (ee[K] = r(O[K], O[Q], O[$]));
          te.push(ee), (ne = ne.concat(ee));
        }
        for (z = 0; z < T; z++) {
          for (
            j = z / T,
              G = w * Math.cos((j * Math.PI) / 2),
              H = M * Math.sin((j * Math.PI) / 2),
              K = 0,
              J = B.length;
            K < J;
            K++
          )
            (W = n(B[K], Z[K], H)), a(W.x, W.y, -G);
          for (D = 0, L = F.length; D < L; D++)
            for (O = F[D], ee = te[D], K = 0, J = O.length; K < J; K++)
              (W = n(O[K], ee[K], H)), a(W.x, W.y, -G);
        }
        for (H = M, K = 0; K < X; K++)
          (W = S ? n(k[K], ne[K], H) : k[K]),
            R
              ? (m.copy(d.normals[0]).multiplyScalar(W.x),
                f.copy(d.binormals[0]).multiplyScalar(W.y),
                v.copy(p[0]).add(m).add(f),
                a(v.x, v.y, v.z))
              : a(W.x, W.y, 0);
        var re;
        for (re = 1; re <= C; re++)
          for (K = 0; K < X; K++)
            (W = S ? n(k[K], ne[K], H) : k[K]),
              R
                ? (m.copy(d.normals[re]).multiplyScalar(W.x),
                  f.copy(d.binormals[re]).multiplyScalar(W.y),
                  v.copy(p[re]).add(m).add(f),
                  a(v.x, v.y, v.z))
                : a(W.x, W.y, (E / C) * re);
        for (z = T - 1; z >= 0; z--) {
          for (
            j = z / T,
              G = w * Math.cos((j * Math.PI) / 2),
              H = M * Math.sin((j * Math.PI) / 2),
              K = 0,
              J = B.length;
            K < J;
            K++
          )
            (W = n(B[K], Z[K], H)), a(W.x, W.y, E + G);
          for (D = 0, L = F.length; D < L; D++)
            for (O = F[D], ee = te[D], K = 0, J = O.length; K < J; K++)
              (W = n(O[K], ee[K], H)),
                R
                  ? a(W.x, W.y + p[C - 1].y, p[C - 1].x + G)
                  : a(W.x, W.y, E + G);
        }
        !(function () {
          var e = y.length / 3;
          if (S) {
            var n = 0,
              r = X * n;
            for (K = 0; K < Y; K++) (q = V[K]), s(q[2] + r, q[1] + r, q[0] + r);
            for (n = C + 2 * T, r = X * n, K = 0; K < Y; K++)
              (q = V[K]), s(q[0] + r, q[1] + r, q[2] + r);
          } else {
            for (K = 0; K < Y; K++) (q = V[K]), s(q[2], q[1], q[0]);
            for (K = 0; K < Y; K++)
              (q = V[K]), s(q[0] + X * C, q[1] + X * C, q[2] + X * C);
          }
          I.addGroup(
            e,
            y.length / 3 - e,
            void 0 !== t.material ? t.material : 0
          );
        })(),
          (function () {
            var e = y.length / 3,
              n = 0;
            for (o(B, n), n += B.length, D = 0, L = F.length; D < L; D++)
              (O = F[D]), o(O, n), (n += O.length);
            I.addGroup(
              e,
              y.length / 3 - e,
              void 0 !== t.extrudeMaterial ? t.extrudeMaterial : 1
            );
          })(),
          t.arrays ||
            (this.setIndex(_),
            this.addAttribute("position", new Ne(y, 3)),
            this.addAttribute("uv", new Ne(t.arrays.uv, 2)));
      }),
      (hn.WorldUVGenerator = {
        generateTopUV: function (e, t, n, r, o) {
          var a = t[3 * n],
            s = t[3 * n + 1],
            c = t[3 * r],
            u = t[3 * r + 1],
            l = t[3 * o],
            h = t[3 * o + 1];
          return [new i(a, s), new i(c, u), new i(l, h)];
        },
        generateSideWallUV: function (e, t, n, r, o, a) {
          var s = t[3 * n],
            c = t[3 * n + 1],
            u = t[3 * n + 2],
            l = t[3 * r],
            h = t[3 * r + 1],
            p = t[3 * r + 2],
            d = t[3 * o],
            f = t[3 * o + 1],
            m = t[3 * o + 2],
            v = t[3 * a],
            g = t[3 * a + 1],
            y = t[3 * a + 2];
          return Math.abs(c - h) < 0.01
            ? [
                new i(s, 1 - u),
                new i(l, 1 - p),
                new i(d, 1 - m),
                new i(v, 1 - y),
              ]
            : [
                new i(c, 1 - u),
                new i(h, 1 - p),
                new i(f, 1 - m),
                new i(g, 1 - y),
              ];
        },
      }),
      (dn.prototype = Object.create(ye.prototype)),
      (dn.prototype.constructor = dn),
      (fn.prototype = Object.create(pn.prototype)),
      (fn.prototype.constructor = fn),
      (mn.prototype = Object.create(ye.prototype)),
      (mn.prototype.constructor = mn),
      (vn.prototype = Object.create(Pe.prototype)),
      (vn.prototype.constructor = vn),
      (gn.prototype = Object.create(ye.prototype)),
      (gn.prototype.constructor = gn),
      (yn.prototype = Object.create(Pe.prototype)),
      (yn.prototype.constructor = yn),
      (_n.prototype = Object.create(ye.prototype)),
      (_n.prototype.constructor = _n),
      (bn.prototype = Object.create(Pe.prototype)),
      (bn.prototype.constructor = bn),
      (xn.prototype = Object.create(ye.prototype)),
      (xn.prototype.constructor = xn),
      (En.prototype = Object.create(Pe.prototype)),
      (En.prototype.constructor = En),
      (wn.prototype = Object.create(Pe.prototype)),
      (wn.prototype.constructor = wn),
      (Mn.prototype = Object.create(ye.prototype)),
      (Mn.prototype.constructor = Mn),
      (Tn.prototype = Object.create(Pe.prototype)),
      (Tn.prototype.constructor = Tn),
      (Sn.prototype = Object.create(Mn.prototype)),
      (Sn.prototype.constructor = Sn),
      (Nn.prototype = Object.create(Tn.prototype)),
      (Nn.prototype.constructor = Nn),
      (Cn.prototype = Object.create(ye.prototype)),
      (Cn.prototype.constructor = Cn),
      (An.prototype = Object.create(Pe.prototype)),
      (An.prototype.constructor = An);
    var Js = Object.freeze({
      WireframeGeometry: Wt,
      ParametricGeometry: qt,
      ParametricBufferGeometry: Xt,
      TetrahedronGeometry: Kt,
      TetrahedronBufferGeometry: Jt,
      OctahedronGeometry: Qt,
      OctahedronBufferGeometry: $t,
      IcosahedronGeometry: en,
      IcosahedronBufferGeometry: tn,
      DodecahedronGeometry: nn,
      DodecahedronBufferGeometry: rn,
      PolyhedronGeometry: Yt,
      PolyhedronBufferGeometry: Zt,
      TubeGeometry: on,
      TubeBufferGeometry: an,
      TorusKnotGeometry: sn,
      TorusKnotBufferGeometry: cn,
      TorusGeometry: un,
      TorusBufferGeometry: ln,
      TextGeometry: dn,
      TextBufferGeometry: fn,
      SphereGeometry: mn,
      SphereBufferGeometry: vn,
      RingGeometry: gn,
      RingBufferGeometry: yn,
      PlaneGeometry: Le,
      PlaneBufferGeometry: Ie,
      LatheGeometry: _n,
      LatheBufferGeometry: bn,
      ShapeGeometry: xn,
      ShapeBufferGeometry: En,
      ExtrudeGeometry: hn,
      ExtrudeBufferGeometry: pn,
      EdgesGeometry: wn,
      ConeGeometry: Sn,
      ConeBufferGeometry: Nn,
      CylinderGeometry: Mn,
      CylinderBufferGeometry: Tn,
      CircleGeometry: Cn,
      CircleBufferGeometry: An,
      BoxGeometry: Oe,
      BoxBufferGeometry: De,
    });
    (Rn.prototype = Object.create($.prototype)),
      (Rn.prototype.constructor = Rn),
      (Rn.prototype.isShadowMaterial = !0),
      (Pn.prototype = Object.create(ee.prototype)),
      (Pn.prototype.constructor = Pn),
      (Pn.prototype.isRawShaderMaterial = !0),
      (On.prototype = Object.create($.prototype)),
      (On.prototype.constructor = On),
      (On.prototype.isMeshStandardMaterial = !0),
      (On.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          (this.defines = { STANDARD: "" }),
          this.color.copy(e.color),
          (this.roughness = e.roughness),
          (this.metalness = e.metalness),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          this.emissive.copy(e.emissive),
          (this.emissiveMap = e.emissiveMap),
          (this.emissiveIntensity = e.emissiveIntensity),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.roughnessMap = e.roughnessMap),
          (this.metalnessMap = e.metalnessMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.envMapIntensity = e.envMapIntensity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (Dn.prototype = Object.create(On.prototype)),
      (Dn.prototype.constructor = Dn),
      (Dn.prototype.isMeshPhysicalMaterial = !0),
      (Dn.prototype.copy = function (e) {
        return (
          On.prototype.copy.call(this, e),
          (this.defines = { PHYSICAL: "" }),
          (this.reflectivity = e.reflectivity),
          (this.clearCoat = e.clearCoat),
          (this.clearCoatRoughness = e.clearCoatRoughness),
          this
        );
      }),
      (Ln.prototype = Object.create($.prototype)),
      (Ln.prototype.constructor = Ln),
      (Ln.prototype.isMeshPhongMaterial = !0),
      (Ln.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          this.color.copy(e.color),
          this.specular.copy(e.specular),
          (this.shininess = e.shininess),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          this.emissive.copy(e.emissive),
          (this.emissiveMap = e.emissiveMap),
          (this.emissiveIntensity = e.emissiveIntensity),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.combine = e.combine),
          (this.reflectivity = e.reflectivity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (In.prototype = Object.create(Ln.prototype)),
      (In.prototype.constructor = In),
      (In.prototype.isMeshToonMaterial = !0),
      (In.prototype.copy = function (e) {
        return (
          Ln.prototype.copy.call(this, e),
          (this.gradientMap = e.gradientMap),
          this
        );
      }),
      (Un.prototype = Object.create($.prototype)),
      (Un.prototype.constructor = Un),
      (Un.prototype.isMeshNormalMaterial = !0),
      (Un.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (kn.prototype = Object.create($.prototype)),
      (kn.prototype.constructor = kn),
      (kn.prototype.isMeshLambertMaterial = !0),
      (kn.prototype.copy = function (e) {
        return (
          $.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          this.emissive.copy(e.emissive),
          (this.emissiveMap = e.emissiveMap),
          (this.emissiveIntensity = e.emissiveIntensity),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.combine = e.combine),
          (this.reflectivity = e.reflectivity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (Fn.prototype = Object.create(It.prototype)),
      (Fn.prototype.constructor = Fn),
      (Fn.prototype.isLineDashedMaterial = !0),
      (Fn.prototype.copy = function (e) {
        return (
          It.prototype.copy.call(this, e),
          (this.scale = e.scale),
          (this.dashSize = e.dashSize),
          (this.gapSize = e.gapSize),
          this
        );
      });
    var Qs = Object.freeze({
        ShadowMaterial: Rn,
        SpriteMaterial: At,
        RawShaderMaterial: Pn,
        ShaderMaterial: ee,
        PointsMaterial: Vt,
        MeshPhysicalMaterial: Dn,
        MeshStandardMaterial: On,
        MeshPhongMaterial: Ln,
        MeshToonMaterial: In,
        MeshNormalMaterial: Un,
        MeshLambertMaterial: kn,
        MeshDepthMaterial: te,
        MeshDistanceMaterial: ne,
        MeshBasicMaterial: Ue,
        LineDashedMaterial: Fn,
        LineBasicMaterial: It,
        Material: $,
      }),
      $s = {
        enabled: !1,
        files: {},
        add: function (e, t) {
          !1 !== this.enabled && (this.files[e] = t);
        },
        get: function (e) {
          if (!1 !== this.enabled) return this.files[e];
        },
        remove: function (e) {
          delete this.files[e];
        },
        clear: function () {
          this.files = {};
        },
      },
      ec = new Vn();
    Object.assign(Bn.prototype, {
      load: function (e, t, n, r) {
        void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e);
        var i = this,
          o = $s.get(e);
        if (void 0 !== o)
          return (
            i.manager.itemStart(e),
            setTimeout(function () {
              t && t(o), i.manager.itemEnd(e);
            }, 0),
            o
          );
        var a = /^data:(.*?)(;base64)?,(.*)$/,
          s = e.match(a);
        if (s) {
          var c = s[1],
            u = !!s[2],
            l = s[3];
          (l = window.decodeURIComponent(l)), u && (l = window.atob(l));
          try {
            var h,
              p = (this.responseType || "").toLowerCase();
            switch (p) {
              case "arraybuffer":
              case "blob":
                h = new ArrayBuffer(l.length);
                for (var d = new Uint8Array(h), f = 0; f < l.length; f++)
                  d[f] = l.charCodeAt(f);
                "blob" === p && (h = new Blob([h], { type: c }));
                break;
              case "document":
                var m = new DOMParser();
                h = m.parseFromString(l, c);
                break;
              case "json":
                h = JSON.parse(l);
                break;
              default:
                h = l;
            }
            window.setTimeout(function () {
              t && t(h), i.manager.itemEnd(e);
            }, 0);
          } catch (t) {
            window.setTimeout(function () {
              r && r(t), i.manager.itemEnd(e), i.manager.itemError(e);
            }, 0);
          }
        } else {
          var v = new XMLHttpRequest();
          v.open("GET", e, !0),
            v.addEventListener(
              "load",
              function (n) {
                var o = n.target.response;
                $s.add(e, o),
                  200 === this.status
                    ? (t && t(o), i.manager.itemEnd(e))
                    : 0 === this.status
                    ? (console.warn(
                        "THREE.FileLoader: HTTP Status 0 received."
                      ),
                      t && t(o),
                      i.manager.itemEnd(e))
                    : (r && r(n), i.manager.itemEnd(e), i.manager.itemError(e));
              },
              !1
            ),
            void 0 !== n &&
              v.addEventListener(
                "progress",
                function (e) {
                  n(e);
                },
                !1
              ),
            v.addEventListener(
              "error",
              function (t) {
                r && r(t), i.manager.itemEnd(e), i.manager.itemError(e);
              },
              !1
            ),
            void 0 !== this.responseType &&
              (v.responseType = this.responseType),
            void 0 !== this.withCredentials &&
              (v.withCredentials = this.withCredentials),
            v.overrideMimeType &&
              v.overrideMimeType(
                void 0 !== this.mimeType ? this.mimeType : "text/plain"
              );
          for (var g in this.requestHeader)
            v.setRequestHeader(g, this.requestHeader[g]);
          v.send(null);
        }
        return i.manager.itemStart(e), v;
      },
      setPath: function (e) {
        return (this.path = e), this;
      },
      setResponseType: function (e) {
        return (this.responseType = e), this;
      },
      setWithCredentials: function (e) {
        return (this.withCredentials = e), this;
      },
      setMimeType: function (e) {
        return (this.mimeType = e), this;
      },
      setRequestHeader: function (e) {
        return (this.requestHeader = e), this;
      },
    }),
      Object.assign(zn.prototype, {
        load: function (e, t, n, r) {
          var i = this,
            o = [],
            a = new jt();
          a.image = o;
          var s = new Bn(this.manager);
          if (
            (s.setPath(this.path),
            s.setResponseType("arraybuffer"),
            Array.isArray(e))
          )
            for (var c = 0, u = 0, l = e.length; u < l; ++u)
              !(function (u) {
                s.load(
                  e[u],
                  function (e) {
                    var n = i._parser(e, !0);
                    (o[u] = {
                      width: n.width,
                      height: n.height,
                      format: n.format,
                      mipmaps: n.mipmaps,
                    }),
                      6 === (c += 1) &&
                        (1 === n.mipmapCount && (a.minFilter = Oa),
                        (a.format = n.format),
                        (a.needsUpdate = !0),
                        t && t(a));
                  },
                  n,
                  r
                );
              })(u);
          else
            s.load(
              e,
              function (e) {
                var n = i._parser(e, !0);
                if (n.isCubemap)
                  for (
                    var r = n.mipmaps.length / n.mipmapCount, s = 0;
                    s < r;
                    s++
                  ) {
                    o[s] = { mipmaps: [] };
                    for (var c = 0; c < n.mipmapCount; c++)
                      o[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + c]),
                        (o[s].format = n.format),
                        (o[s].width = n.width),
                        (o[s].height = n.height);
                  }
                else
                  (a.image.width = n.width),
                    (a.image.height = n.height),
                    (a.mipmaps = n.mipmaps);
                1 === n.mipmapCount && (a.minFilter = Oa),
                  (a.format = n.format),
                  (a.needsUpdate = !0),
                  t && t(a);
              },
              n,
              r
            );
          return a;
        },
        setPath: function (e) {
          return (this.path = e), this;
        },
      }),
      Object.assign(Hn.prototype, {
        load: function (e, t, n, r) {
          var i = this,
            o = new p(),
            a = new Bn(this.manager);
          return (
            a.setResponseType("arraybuffer"),
            a.load(
              e,
              function (e) {
                var n = i._parser(e);
                n &&
                  (void 0 !== n.image
                    ? (o.image = n.image)
                    : void 0 !== n.data &&
                      ((o.image.width = n.width),
                      (o.image.height = n.height),
                      (o.image.data = n.data)),
                  (o.wrapS = void 0 !== n.wrapS ? n.wrapS : Na),
                  (o.wrapT = void 0 !== n.wrapT ? n.wrapT : Na),
                  (o.magFilter = void 0 !== n.magFilter ? n.magFilter : Oa),
                  (o.minFilter = void 0 !== n.minFilter ? n.minFilter : La),
                  (o.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1),
                  void 0 !== n.format && (o.format = n.format),
                  void 0 !== n.type && (o.type = n.type),
                  void 0 !== n.mipmaps && (o.mipmaps = n.mipmaps),
                  1 === n.mipmapCount && (o.minFilter = Oa),
                  (o.needsUpdate = !0),
                  t && t(o, n));
              },
              n,
              r
            ),
            o
          );
        },
      }),
      Object.assign(jn.prototype, {
        crossOrigin: "Anonymous",
        load: function (e, t, n, r) {
          void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e);
          var i = this,
            o = $s.get(e);
          if (void 0 !== o)
            return (
              i.manager.itemStart(e),
              setTimeout(function () {
                t && t(o), i.manager.itemEnd(e);
              }, 0),
              o
            );
          var a = document.createElementNS(
            "http://www.w3.org/1999/xhtml",
            "img"
          );
          return (
            a.addEventListener(
              "load",
              function () {
                $s.add(e, this), t && t(this), i.manager.itemEnd(e);
              },
              !1
            ),
            a.addEventListener(
              "error",
              function (t) {
                r && r(t), i.manager.itemEnd(e), i.manager.itemError(e);
              },
              !1
            ),
            "data:" !== e.substr(0, 5) &&
              void 0 !== this.crossOrigin &&
              (a.crossOrigin = this.crossOrigin),
            i.manager.itemStart(e),
            (a.src = e),
            a
          );
        },
        setCrossOrigin: function (e) {
          return (this.crossOrigin = e), this;
        },
        setPath: function (e) {
          return (this.path = e), this;
        },
      }),
      Object.assign(Gn.prototype, {
        crossOrigin: "Anonymous",
        load: function (e, t, n, r) {
          var i = new d(),
            o = new jn(this.manager);
          o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
          for (var a = 0, s = 0; s < e.length; ++s)
            !(function (n) {
              o.load(
                e[n],
                function (e) {
                  (i.images[n] = e),
                    6 == ++a && ((i.needsUpdate = !0), t && t(i));
                },
                void 0,
                r
              );
            })(s);
          return i;
        },
        setCrossOrigin: function (e) {
          return (this.crossOrigin = e), this;
        },
        setPath: function (e) {
          return (this.path = e), this;
        },
      }),
      Object.assign(Wn.prototype, {
        crossOrigin: "Anonymous",
        load: function (e, t, n, r) {
          var i = new jn(this.manager);
          i.setCrossOrigin(this.crossOrigin), i.setPath(this.path);
          var a = new o();
          return (
            (a.image = i.load(
              e,
              function () {
                var n =
                  e.search(/\.(jpg|jpeg)$/) > 0 ||
                  0 === e.search(/^data\:image\/jpeg/);
                (a.format = n ? Ya : Za),
                  (a.needsUpdate = !0),
                  void 0 !== t && t(a);
              },
              n,
              r
            )),
            a
          );
        },
        setCrossOrigin: function (e) {
          return (this.crossOrigin = e), this;
        },
        setPath: function (e) {
          return (this.path = e), this;
        },
      }),
      (qn.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: qn,
        isLight: !0,
        copy: function (e) {
          return (
            pe.prototype.copy.call(this, e),
            this.color.copy(e.color),
            (this.intensity = e.intensity),
            this
          );
        },
        toJSON: function (e) {
          var t = pe.prototype.toJSON.call(this, e);
          return (
            (t.object.color = this.color.getHex()),
            (t.object.intensity = this.intensity),
            void 0 !== this.groundColor &&
              (t.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (t.object.distance = this.distance),
            void 0 !== this.angle && (t.object.angle = this.angle),
            void 0 !== this.decay && (t.object.decay = this.decay),
            void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
            t
          );
        },
      })),
      (Xn.prototype = Object.assign(Object.create(qn.prototype), {
        constructor: Xn,
        isHemisphereLight: !0,
        copy: function (e) {
          return (
            qn.prototype.copy.call(this, e),
            this.groundColor.copy(e.groundColor),
            this
          );
        },
      })),
      Object.assign(Yn.prototype, {
        copy: function (e) {
          return (
            (this.camera = e.camera.clone()),
            (this.bias = e.bias),
            (this.radius = e.radius),
            this.mapSize.copy(e.mapSize),
            this
          );
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        toJSON: function () {
          var e = {};
          return (
            0 !== this.bias && (e.bias = this.bias),
            1 !== this.radius && (e.radius = this.radius),
            (512 === this.mapSize.x && 512 === this.mapSize.y) ||
              (e.mapSize = this.mapSize.toArray()),
            (e.camera = this.camera.toJSON(!1).object),
            delete e.camera.matrix,
            e
          );
        },
      }),
      (Zn.prototype = Object.assign(Object.create(Yn.prototype), {
        constructor: Zn,
        isSpotLightShadow: !0,
        update: function (e) {
          var t = this.camera,
            n = 2 * Os.RAD2DEG * e.angle,
            r = this.mapSize.width / this.mapSize.height,
            i = e.distance || t.far;
          (n === t.fov && r === t.aspect && i === t.far) ||
            ((t.fov = n),
            (t.aspect = r),
            (t.far = i),
            t.updateProjectionMatrix());
        },
      })),
      (Kn.prototype = Object.assign(Object.create(qn.prototype), {
        constructor: Kn,
        isSpotLight: !0,
        copy: function (e) {
          return (
            qn.prototype.copy.call(this, e),
            (this.distance = e.distance),
            (this.angle = e.angle),
            (this.penumbra = e.penumbra),
            (this.decay = e.decay),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        },
      })),
      (Jn.prototype = Object.assign(Object.create(qn.prototype), {
        constructor: Jn,
        isPointLight: !0,
        copy: function (e) {
          return (
            qn.prototype.copy.call(this, e),
            (this.distance = e.distance),
            (this.decay = e.decay),
            (this.shadow = e.shadow.clone()),
            this
          );
        },
      })),
      (Qn.prototype = Object.assign(Object.create(Yn.prototype), {
        constructor: Qn,
      })),
      ($n.prototype = Object.assign(Object.create(qn.prototype), {
        constructor: $n,
        isDirectionalLight: !0,
        copy: function (e) {
          return (
            qn.prototype.copy.call(this, e),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        },
      })),
      (er.prototype = Object.assign(Object.create(qn.prototype), {
        constructor: er,
        isAmbientLight: !0,
      })),
      (tr.prototype = Object.assign(Object.create(qn.prototype), {
        constructor: tr,
        isRectAreaLight: !0,
        copy: function (e) {
          return (
            qn.prototype.copy.call(this, e),
            (this.width = e.width),
            (this.height = e.height),
            this
          );
        },
        toJSON: function (e) {
          var t = qn.prototype.toJSON.call(this, e);
          return (
            (t.object.width = this.width), (t.object.height = this.height), t
          );
        },
      }));
    var tc = {
      arraySlice: function (e, t, n) {
        return tc.isTypedArray(e)
          ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length))
          : e.slice(t, n);
      },
      convertArray: function (e, t, n) {
        return !e || (!n && e.constructor === t)
          ? e
          : "number" == typeof t.BYTES_PER_ELEMENT
          ? new t(e)
          : Array.prototype.slice.call(e);
      },
      isTypedArray: function (e) {
        return ArrayBuffer.isView(e) && !(e instanceof DataView);
      },
      getKeyframeOrder: function (e) {
        function t(t, n) {
          return e[t] - e[n];
        }
        for (var n = e.length, r = new Array(n), i = 0; i !== n; ++i) r[i] = i;
        return r.sort(t), r;
      },
      sortedArray: function (e, t, n) {
        for (
          var r = e.length, i = new e.constructor(r), o = 0, a = 0;
          a !== r;
          ++o
        )
          for (var s = n[o] * t, c = 0; c !== t; ++c) i[a++] = e[s + c];
        return i;
      },
      flattenJSON: function (e, t, n, r) {
        for (var i = 1, o = e[0]; void 0 !== o && void 0 === o[r]; ) o = e[i++];
        if (void 0 !== o) {
          var a = o[r];
          if (void 0 !== a)
            if (Array.isArray(a))
              do {
                (a = o[r]),
                  void 0 !== a && (t.push(o.time), n.push.apply(n, a)),
                  (o = e[i++]);
              } while (void 0 !== o);
            else if (void 0 !== a.toArray)
              do {
                (a = o[r]),
                  void 0 !== a && (t.push(o.time), a.toArray(n, n.length)),
                  (o = e[i++]);
              } while (void 0 !== o);
            else
              do {
                (a = o[r]),
                  void 0 !== a && (t.push(o.time), n.push(a)),
                  (o = e[i++]);
              } while (void 0 !== o);
        }
      },
    };
    Object.assign(nr.prototype, {
      evaluate: function (e) {
        var t = this.parameterPositions,
          n = this._cachedIndex,
          r = t[n],
          i = t[n - 1];
        e: {
          t: {
            var o;
            n: {
              r: if (!(e < r)) {
                for (var a = n + 2; ; ) {
                  if (void 0 === r) {
                    if (e < i) break r;
                    return (
                      (n = t.length),
                      (this._cachedIndex = n),
                      this.afterEnd_(n - 1, e, i)
                    );
                  }
                  if (n === a) break;
                  if (((i = r), (r = t[++n]), e < r)) break t;
                }
                o = t.length;
                break n;
              }
              {
                if (e >= i) break e;
                var s = t[1];
                e < s && ((n = 2), (i = s));
                for (var a = n - 2; ; ) {
                  if (void 0 === i)
                    return (this._cachedIndex = 0), this.beforeStart_(0, e, r);
                  if (n === a) break;
                  if (((r = i), (i = t[--n - 1]), e >= i)) break t;
                }
                (o = n), (n = 0);
              }
            }
            for (; n < o; ) {
              var c = (n + o) >>> 1;
              e < t[c] ? (o = c) : (n = c + 1);
            }
            if (((r = t[n]), void 0 === (i = t[n - 1])))
              return (this._cachedIndex = 0), this.beforeStart_(0, e, r);
            if (void 0 === r)
              return (
                (n = t.length),
                (this._cachedIndex = n),
                this.afterEnd_(n - 1, i, e)
              );
          }
          (this._cachedIndex = n), this.intervalChanged_(n, i, r);
        }
        return this.interpolate_(n, i, e, r);
      },
      settings: null,
      DefaultSettings_: {},
      getSettings_: function () {
        return this.settings || this.DefaultSettings_;
      },
      copySampleValue_: function (e) {
        for (
          var t = this.resultBuffer,
            n = this.sampleValues,
            r = this.valueSize,
            i = e * r,
            o = 0;
          o !== r;
          ++o
        )
          t[o] = n[i + o];
        return t;
      },
      interpolate_: function (e, t, n, r) {
        throw new Error("call to abstract method");
      },
      intervalChanged_: function (e, t, n) {},
    }),
      //!\ DECLARE ALIAS AFTER assign prototype !
      Object.assign(nr.prototype, {
        beforeStart_: nr.prototype.copySampleValue_,
        afterEnd_: nr.prototype.copySampleValue_,
      }),
      (rr.prototype = Object.assign(Object.create(nr.prototype), {
        constructor: rr,
        DefaultSettings_: { endingStart: vs, endingEnd: vs },
        intervalChanged_: function (e, t, n) {
          var r = this.parameterPositions,
            i = e - 2,
            o = e + 1,
            a = r[i],
            s = r[o];
          if (void 0 === a)
            switch (this.getSettings_().endingStart) {
              case gs:
                (i = e), (a = 2 * t - n);
                break;
              case ys:
                (i = r.length - 2), (a = t + r[i] - r[i + 1]);
                break;
              default:
                (i = e), (a = n);
            }
          if (void 0 === s)
            switch (this.getSettings_().endingEnd) {
              case gs:
                (o = e), (s = 2 * n - t);
                break;
              case ys:
                (o = 1), (s = n + r[1] - r[0]);
                break;
              default:
                (o = e - 1), (s = t);
            }
          var c = 0.5 * (n - t),
            u = this.valueSize;
          (this._weightPrev = c / (t - a)),
            (this._weightNext = c / (s - n)),
            (this._offsetPrev = i * u),
            (this._offsetNext = o * u);
        },
        interpolate_: function (e, t, n, r) {
          for (
            var i = this.resultBuffer,
              o = this.sampleValues,
              a = this.valueSize,
              s = e * a,
              c = s - a,
              u = this._offsetPrev,
              l = this._offsetNext,
              h = this._weightPrev,
              p = this._weightNext,
              d = (n - t) / (r - t),
              f = d * d,
              m = f * d,
              v = -h * m + 2 * h * f - h * d,
              g = (1 + h) * m + (-1.5 - 2 * h) * f + (-0.5 + h) * d + 1,
              y = (-1 - p) * m + (1.5 + p) * f + 0.5 * d,
              _ = p * m - p * f,
              b = 0;
            b !== a;
            ++b
          )
            i[b] = v * o[u + b] + g * o[c + b] + y * o[s + b] + _ * o[l + b];
          return i;
        },
      })),
      (ir.prototype = Object.assign(Object.create(nr.prototype), {
        constructor: ir,
        interpolate_: function (e, t, n, r) {
          for (
            var i = this.resultBuffer,
              o = this.sampleValues,
              a = this.valueSize,
              s = e * a,
              c = s - a,
              u = (n - t) / (r - t),
              l = 1 - u,
              h = 0;
            h !== a;
            ++h
          )
            i[h] = o[c + h] * l + o[s + h] * u;
          return i;
        },
      })),
      (or.prototype = Object.assign(Object.create(nr.prototype), {
        constructor: or,
        interpolate_: function (e, t, n, r) {
          return this.copySampleValue_(e - 1);
        },
      }));
    var nc;
    (nc = {
      TimeBufferType: Float32Array,
      ValueBufferType: Float32Array,
      DefaultInterpolation: fs,
      InterpolantFactoryMethodDiscrete: function (e) {
        return new or(this.times, this.values, this.getValueSize(), e);
      },
      InterpolantFactoryMethodLinear: function (e) {
        return new ir(this.times, this.values, this.getValueSize(), e);
      },
      InterpolantFactoryMethodSmooth: function (e) {
        return new rr(this.times, this.values, this.getValueSize(), e);
      },
      setInterpolation: function (e) {
        var t;
        switch (e) {
          case ds:
            t = this.InterpolantFactoryMethodDiscrete;
            break;
          case fs:
            t = this.InterpolantFactoryMethodLinear;
            break;
          case ms:
            t = this.InterpolantFactoryMethodSmooth;
        }
        if (void 0 === t) {
          var n =
            "unsupported interpolation for " +
            this.ValueTypeName +
            " keyframe track named " +
            this.name;
          if (void 0 === this.createInterpolant) {
            if (e === this.DefaultInterpolation) throw new Error(n);
            this.setInterpolation(this.DefaultInterpolation);
          }
          return void console.warn("THREE.KeyframeTrackPrototype:", n);
        }
        this.createInterpolant = t;
      },
      getInterpolation: function () {
        switch (this.createInterpolant) {
          case this.InterpolantFactoryMethodDiscrete:
            return ds;
          case this.InterpolantFactoryMethodLinear:
            return fs;
          case this.InterpolantFactoryMethodSmooth:
            return ms;
        }
      },
      getValueSize: function () {
        return this.values.length / this.times.length;
      },
      shift: function (e) {
        if (0 !== e)
          for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] += e;
        return this;
      },
      scale: function (e) {
        if (1 !== e)
          for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] *= e;
        return this;
      },
      trim: function (e, t) {
        for (
          var n = this.times, r = n.length, i = 0, o = r - 1;
          i !== r && n[i] < e;

        )
          ++i;
        for (; -1 !== o && n[o] > t; ) --o;
        if ((++o, 0 !== i || o !== r)) {
          i >= o && ((o = Math.max(o, 1)), (i = o - 1));
          var a = this.getValueSize();
          (this.times = tc.arraySlice(n, i, o)),
            (this.values = tc.arraySlice(this.values, i * a, o * a));
        }
        return this;
      },
      validate: function () {
        var e = !0,
          t = this.getValueSize();
        t - Math.floor(t) != 0 &&
          (console.error(
            "THREE.KeyframeTrackPrototype: Invalid value size in track.",
            this
          ),
          (e = !1));
        var n = this.times,
          r = this.values,
          i = n.length;
        0 === i &&
          (console.error("THREE.KeyframeTrackPrototype: Track is empty.", this),
          (e = !1));
        for (var o = null, a = 0; a !== i; a++) {
          var s = n[a];
          if ("number" == typeof s && isNaN(s)) {
            console.error(
              "THREE.KeyframeTrackPrototype: Time is not a valid number.",
              this,
              a,
              s
            ),
              (e = !1);
            break;
          }
          if (null !== o && o > s) {
            console.error(
              "THREE.KeyframeTrackPrototype: Out of order keys.",
              this,
              a,
              s,
              o
            ),
              (e = !1);
            break;
          }
          o = s;
        }
        if (void 0 !== r && tc.isTypedArray(r))
          for (var a = 0, c = r.length; a !== c; ++a) {
            var u = r[a];
            if (isNaN(u)) {
              console.error(
                "THREE.KeyframeTrackPrototype: Value is not a valid number.",
                this,
                a,
                u
              ),
                (e = !1);
              break;
            }
          }
        return e;
      },
      optimize: function () {
        for (
          var e = this.times,
            t = this.values,
            n = this.getValueSize(),
            r = this.getInterpolation() === ms,
            i = 1,
            o = e.length - 1,
            a = 1;
          a < o;
          ++a
        ) {
          var s = !1,
            c = e[a];
          if (c !== e[a + 1] && (1 !== a || c !== c[0]))
            if (r) s = !0;
            else
              for (var u = a * n, l = u - n, h = u + n, p = 0; p !== n; ++p) {
                var d = t[u + p];
                if (d !== t[l + p] || d !== t[h + p]) {
                  s = !0;
                  break;
                }
              }
          if (s) {
            if (a !== i) {
              e[i] = e[a];
              for (var f = a * n, m = i * n, p = 0; p !== n; ++p)
                t[m + p] = t[f + p];
            }
            ++i;
          }
        }
        if (o > 0) {
          e[i] = e[o];
          for (var f = o * n, m = i * n, p = 0; p !== n; ++p)
            t[m + p] = t[f + p];
          ++i;
        }
        return (
          i !== e.length &&
            ((this.times = tc.arraySlice(e, 0, i)),
            (this.values = tc.arraySlice(t, 0, i * n))),
          this
        );
      },
    }),
      (sr.prototype = Object.assign(Object.create(nc), {
        constructor: sr,
        ValueTypeName: "vector",
      })),
      (cr.prototype = Object.assign(Object.create(nr.prototype), {
        constructor: cr,
        interpolate_: function (e, t, n, r) {
          for (
            var i = this.resultBuffer,
              o = this.sampleValues,
              a = this.valueSize,
              s = e * a,
              c = (n - t) / (r - t),
              l = s + a;
            s !== l;
            s += 4
          )
            u.slerpFlat(i, 0, o, s - a, o, s, c);
          return i;
        },
      })),
      (ur.prototype = Object.assign(Object.create(nc), {
        constructor: ur,
        ValueTypeName: "quaternion",
        DefaultInterpolation: fs,
        InterpolantFactoryMethodLinear: function (e) {
          return new cr(this.times, this.values, this.getValueSize(), e);
        },
        InterpolantFactoryMethodSmooth: void 0,
      })),
      (lr.prototype = Object.assign(Object.create(nc), {
        constructor: lr,
        ValueTypeName: "number",
      })),
      (hr.prototype = Object.assign(Object.create(nc), {
        constructor: hr,
        ValueTypeName: "string",
        ValueBufferType: Array,
        DefaultInterpolation: ds,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0,
      })),
      (pr.prototype = Object.assign(Object.create(nc), {
        constructor: pr,
        ValueTypeName: "bool",
        ValueBufferType: Array,
        DefaultInterpolation: ds,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0,
      })),
      (dr.prototype = Object.assign(Object.create(nc), {
        constructor: dr,
        ValueTypeName: "color",
      })),
      (fr.prototype = nc),
      (nc.constructor = fr),
      Object.assign(fr, {
        parse: function (e) {
          if (void 0 === e.type)
            throw new Error("track type undefined, can not parse");
          var t = fr._getTrackTypeForValueTypeName(e.type);
          if (void 0 === e.times) {
            var n = [],
              r = [];
            tc.flattenJSON(e.keys, n, r, "value"),
              (e.times = n),
              (e.values = r);
          }
          return void 0 !== t.parse
            ? t.parse(e)
            : new t(e.name, e.times, e.values, e.interpolation);
        },
        toJSON: function (e) {
          var t,
            n = e.constructor;
          if (void 0 !== n.toJSON) t = n.toJSON(e);
          else {
            t = {
              name: e.name,
              times: tc.convertArray(e.times, Array),
              values: tc.convertArray(e.values, Array),
            };
            var r = e.getInterpolation();
            r !== e.DefaultInterpolation && (t.interpolation = r);
          }
          return (t.type = e.ValueTypeName), t;
        },
        _getTrackTypeForValueTypeName: function (e) {
          switch (e.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return lr;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return sr;
            case "color":
              return dr;
            case "quaternion":
              return ur;
            case "bool":
            case "boolean":
              return pr;
            case "string":
              return hr;
          }
          throw new Error("Unsupported typeName: " + e);
        },
      }),
      Object.assign(mr, {
        parse: function (e) {
          for (
            var t = [], n = e.tracks, r = 1 / (e.fps || 1), i = 0, o = n.length;
            i !== o;
            ++i
          )
            t.push(fr.parse(n[i]).scale(r));
          return new mr(e.name, e.duration, t);
        },
        toJSON: function (e) {
          for (
            var t = [],
              n = e.tracks,
              r = { name: e.name, duration: e.duration, tracks: t },
              i = 0,
              o = n.length;
            i !== o;
            ++i
          )
            t.push(fr.toJSON(n[i]));
          return r;
        },
        CreateFromMorphTargetSequence: function (e, t, n, r) {
          for (var i = t.length, o = [], a = 0; a < i; a++) {
            var s = [],
              c = [];
            s.push((a + i - 1) % i, a, (a + 1) % i), c.push(0, 1, 0);
            var u = tc.getKeyframeOrder(s);
            (s = tc.sortedArray(s, 1, u)),
              (c = tc.sortedArray(c, 1, u)),
              r || 0 !== s[0] || (s.push(i), c.push(c[0])),
              o.push(
                new lr(".morphTargetInfluences[" + t[a].name + "]", s, c).scale(
                  1 / n
                )
              );
          }
          return new mr(e, -1, o);
        },
        findByName: function (e, t) {
          var n = e;
          if (!Array.isArray(e)) {
            var r = e;
            n = (r.geometry && r.geometry.animations) || r.animations;
          }
          for (var i = 0; i < n.length; i++) if (n[i].name === t) return n[i];
          return null;
        },
        CreateClipsFromMorphTargetSequences: function (e, t, n) {
          for (
            var r = {}, i = /^([\w-]*?)([\d]+)$/, o = 0, a = e.length;
            o < a;
            o++
          ) {
            var s = e[o],
              c = s.name.match(i);
            if (c && c.length > 1) {
              var u = c[1],
                l = r[u];
              l || (r[u] = l = []), l.push(s);
            }
          }
          var h = [];
          for (var u in r)
            h.push(mr.CreateFromMorphTargetSequence(u, r[u], t, n));
          return h;
        },
        parseAnimation: function (e, t) {
          if (!e)
            return (
              console.error(
                "THREE.AnimationClip: No animation in JSONLoader data."
              ),
              null
            );
          for (
            var n = function (e, t, n, r, i) {
                if (0 !== n.length) {
                  var o = [],
                    a = [];
                  tc.flattenJSON(n, o, a, r),
                    0 !== o.length && i.push(new e(t, o, a));
                }
              },
              r = [],
              i = e.name || "default",
              o = e.length || -1,
              a = e.fps || 30,
              s = e.hierarchy || [],
              c = 0;
            c < s.length;
            c++
          ) {
            var u = s[c].keys;
            if (u && 0 !== u.length)
              if (u[0].morphTargets) {
                for (var l = {}, h = 0; h < u.length; h++)
                  if (u[h].morphTargets)
                    for (var p = 0; p < u[h].morphTargets.length; p++)
                      l[u[h].morphTargets[p]] = -1;
                for (var d in l) {
                  for (
                    var f = [], m = [], p = 0;
                    p !== u[h].morphTargets.length;
                    ++p
                  ) {
                    var v = u[h];
                    f.push(v.time), m.push(v.morphTarget === d ? 1 : 0);
                  }
                  r.push(new lr(".morphTargetInfluence[" + d + "]", f, m));
                }
                o = l.length * (a || 1);
              } else {
                var g = ".bones[" + t[c].name + "]";
                n(sr, g + ".position", u, "pos", r),
                  n(ur, g + ".quaternion", u, "rot", r),
                  n(sr, g + ".scale", u, "scl", r);
              }
          }
          return 0 === r.length ? null : new mr(i, o, r);
        },
      }),
      Object.assign(mr.prototype, {
        resetDuration: function () {
          for (var e = this.tracks, t = 0, n = 0, r = e.length; n !== r; ++n) {
            var i = this.tracks[n];
            t = Math.max(t, i.times[i.times.length - 1]);
          }
          this.duration = t;
        },
        trim: function () {
          for (var e = 0; e < this.tracks.length; e++)
            this.tracks[e].trim(0, this.duration);
          return this;
        },
        optimize: function () {
          for (var e = 0; e < this.tracks.length; e++)
            this.tracks[e].optimize();
          return this;
        },
      }),
      Object.assign(vr.prototype, {
        load: function (e, t, n, r) {
          var i = this;
          new Bn(i.manager).load(
            e,
            function (e) {
              t(i.parse(JSON.parse(e)));
            },
            n,
            r
          );
        },
        setTextures: function (e) {
          this.textures = e;
        },
        parse: function (e) {
          function t(e) {
            return (
              void 0 === n[e] &&
                console.warn("THREE.MaterialLoader: Undefined texture", e),
              n[e]
            );
          }
          var n = this.textures,
            r = new Qs[e.type]();
          if (
            (void 0 !== e.uuid && (r.uuid = e.uuid),
            void 0 !== e.name && (r.name = e.name),
            void 0 !== e.color && r.color.setHex(e.color),
            void 0 !== e.roughness && (r.roughness = e.roughness),
            void 0 !== e.metalness && (r.metalness = e.metalness),
            void 0 !== e.emissive && r.emissive.setHex(e.emissive),
            void 0 !== e.specular && r.specular.setHex(e.specular),
            void 0 !== e.shininess && (r.shininess = e.shininess),
            void 0 !== e.clearCoat && (r.clearCoat = e.clearCoat),
            void 0 !== e.clearCoatRoughness &&
              (r.clearCoatRoughness = e.clearCoatRoughness),
            void 0 !== e.uniforms && (r.uniforms = e.uniforms),
            void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader),
            void 0 !== e.fragmentShader &&
              (r.fragmentShader = e.fragmentShader),
            void 0 !== e.vertexColors && (r.vertexColors = e.vertexColors),
            void 0 !== e.fog && (r.fog = e.fog),
            void 0 !== e.flatShading && (r.flatShading = e.flatShading),
            void 0 !== e.blending && (r.blending = e.blending),
            void 0 !== e.side && (r.side = e.side),
            void 0 !== e.opacity && (r.opacity = e.opacity),
            void 0 !== e.transparent && (r.transparent = e.transparent),
            void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest),
            void 0 !== e.depthTest && (r.depthTest = e.depthTest),
            void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite),
            void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite),
            void 0 !== e.wireframe && (r.wireframe = e.wireframe),
            void 0 !== e.wireframeLinewidth &&
              (r.wireframeLinewidth = e.wireframeLinewidth),
            void 0 !== e.wireframeLinecap &&
              (r.wireframeLinecap = e.wireframeLinecap),
            void 0 !== e.wireframeLinejoin &&
              (r.wireframeLinejoin = e.wireframeLinejoin),
            void 0 !== e.skinning && (r.skinning = e.skinning),
            void 0 !== e.morphTargets && (r.morphTargets = e.morphTargets),
            void 0 !== e.dithering && (r.dithering = e.dithering),
            void 0 !== e.visible && (r.visible = e.visible),
            void 0 !== e.userData && (r.userData = e.userData),
            void 0 !== e.shading && (r.flatShading = 1 === e.shading),
            void 0 !== e.size && (r.size = e.size),
            void 0 !== e.sizeAttenuation &&
              (r.sizeAttenuation = e.sizeAttenuation),
            void 0 !== e.map && (r.map = t(e.map)),
            void 0 !== e.alphaMap &&
              ((r.alphaMap = t(e.alphaMap)), (r.transparent = !0)),
            void 0 !== e.bumpMap && (r.bumpMap = t(e.bumpMap)),
            void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale),
            void 0 !== e.normalMap && (r.normalMap = t(e.normalMap)),
            void 0 !== e.normalScale)
          ) {
            var o = e.normalScale;
            !1 === Array.isArray(o) && (o = [o, o]),
              (r.normalScale = new i().fromArray(o));
          }
          return (
            void 0 !== e.displacementMap &&
              (r.displacementMap = t(e.displacementMap)),
            void 0 !== e.displacementScale &&
              (r.displacementScale = e.displacementScale),
            void 0 !== e.displacementBias &&
              (r.displacementBias = e.displacementBias),
            void 0 !== e.roughnessMap && (r.roughnessMap = t(e.roughnessMap)),
            void 0 !== e.metalnessMap && (r.metalnessMap = t(e.metalnessMap)),
            void 0 !== e.emissiveMap && (r.emissiveMap = t(e.emissiveMap)),
            void 0 !== e.emissiveIntensity &&
              (r.emissiveIntensity = e.emissiveIntensity),
            void 0 !== e.specularMap && (r.specularMap = t(e.specularMap)),
            void 0 !== e.envMap && (r.envMap = t(e.envMap)),
            void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity),
            void 0 !== e.lightMap && (r.lightMap = t(e.lightMap)),
            void 0 !== e.lightMapIntensity &&
              (r.lightMapIntensity = e.lightMapIntensity),
            void 0 !== e.aoMap && (r.aoMap = t(e.aoMap)),
            void 0 !== e.aoMapIntensity &&
              (r.aoMapIntensity = e.aoMapIntensity),
            void 0 !== e.gradientMap && (r.gradientMap = t(e.gradientMap)),
            r
          );
        },
      }),
      Object.assign(gr.prototype, {
        load: function (e, t, n, r) {
          var i = this;
          new Bn(i.manager).load(
            e,
            function (e) {
              t(i.parse(JSON.parse(e)));
            },
            n,
            r
          );
        },
        parse: function (e) {
          var t = new Pe(),
            n = e.data.index;
          if (void 0 !== n) {
            var r = new rc[n.type](n.array);
            t.setIndex(new _e(r, 1));
          }
          var i = e.data.attributes;
          for (var o in i) {
            var a = i[o],
              r = new rc[a.type](a.array);
            t.addAttribute(o, new _e(r, a.itemSize, a.normalized));
          }
          var s = e.data.groups || e.data.drawcalls || e.data.offsets;
          if (void 0 !== s)
            for (var c = 0, u = s.length; c !== u; ++c) {
              var h = s[c];
              t.addGroup(h.start, h.count, h.materialIndex);
            }
          var p = e.data.boundingSphere;
          if (void 0 !== p) {
            var d = new l();
            void 0 !== p.center && d.fromArray(p.center),
              (t.boundingSphere = new ie(d, p.radius));
          }
          return t;
        },
      });
    var rc = {
      Int8Array: Int8Array,
      Uint8Array: Uint8Array,
      Uint8ClampedArray:
        "undefined" != typeof Uint8ClampedArray
          ? Uint8ClampedArray
          : Uint8Array,
      Int16Array: Int16Array,
      Uint16Array: Uint16Array,
      Int32Array: Int32Array,
      Uint32Array: Uint32Array,
      Float32Array: Float32Array,
      Float64Array: Float64Array,
    };
    (yr.Handlers = {
      handlers: [],
      add: function (e, t) {
        this.handlers.push(e, t);
      },
      get: function (e) {
        for (var t = this.handlers, n = 0, r = t.length; n < r; n += 2) {
          var i = t[n],
            o = t[n + 1];
          if (i.test(e)) return o;
        }
        return null;
      },
    }),
      Object.assign(yr.prototype, {
        crossOrigin: void 0,
        extractUrlBase: function (e) {
          var t = e.split("/");
          return 1 === t.length ? "./" : (t.pop(), t.join("/") + "/");
        },
        initMaterials: function (e, t, n) {
          for (var r = [], i = 0; i < e.length; ++i)
            r[i] = this.createMaterial(e[i], t, n);
          return r;
        },
        createMaterial: (function () {
          var e = {
              NoBlending: Lo,
              NormalBlending: Io,
              AdditiveBlending: Uo,
              SubtractiveBlending: ko,
              MultiplyBlending: Fo,
              CustomBlending: Vo,
            },
            t = new Y(),
            n = new Wn(),
            r = new vr();
          return function (i, o, a) {
            function s(e, t, r, i, s) {
              var u,
                l = o + e,
                h = yr.Handlers.get(l);
              null !== h
                ? (u = h.load(l))
                : (n.setCrossOrigin(a), (u = n.load(l))),
                void 0 !== t &&
                  (u.repeat.fromArray(t),
                  1 !== t[0] && (u.wrapS = Sa),
                  1 !== t[1] && (u.wrapT = Sa)),
                void 0 !== r && u.offset.fromArray(r),
                void 0 !== i &&
                  ("repeat" === i[0] && (u.wrapS = Sa),
                  "mirror" === i[0] && (u.wrapS = Ca),
                  "repeat" === i[1] && (u.wrapT = Sa),
                  "mirror" === i[1] && (u.wrapT = Ca)),
                void 0 !== s && (u.anisotropy = s);
              var p = Os.generateUUID();
              return (c[p] = u), p;
            }
            var c = {},
              u = { uuid: Os.generateUUID(), type: "MeshLambertMaterial" };
            for (var l in i) {
              var h = i[l];
              switch (l) {
                case "DbgColor":
                case "DbgIndex":
                case "opticalDensity":
                case "illumination":
                  break;
                case "DbgName":
                  u.name = h;
                  break;
                case "blending":
                  u.blending = e[h];
                  break;
                case "colorAmbient":
                case "mapAmbient":
                  console.warn(
                    "THREE.Loader.createMaterial:",
                    l,
                    "is no longer supported."
                  );
                  break;
                case "colorDiffuse":
                  u.color = t.fromArray(h).getHex();
                  break;
                case "colorSpecular":
                  u.specular = t.fromArray(h).getHex();
                  break;
                case "colorEmissive":
                  u.emissive = t.fromArray(h).getHex();
                  break;
                case "specularCoef":
                  u.shininess = h;
                  break;
                case "shading":
                  "basic" === h.toLowerCase() && (u.type = "MeshBasicMaterial"),
                    "phong" === h.toLowerCase() &&
                      (u.type = "MeshPhongMaterial"),
                    "standard" === h.toLowerCase() &&
                      (u.type = "MeshStandardMaterial");
                  break;
                case "mapDiffuse":
                  u.map = s(
                    h,
                    i.mapDiffuseRepeat,
                    i.mapDiffuseOffset,
                    i.mapDiffuseWrap,
                    i.mapDiffuseAnisotropy
                  );
                  break;
                case "mapDiffuseRepeat":
                case "mapDiffuseOffset":
                case "mapDiffuseWrap":
                case "mapDiffuseAnisotropy":
                  break;
                case "mapEmissive":
                  u.emissiveMap = s(
                    h,
                    i.mapEmissiveRepeat,
                    i.mapEmissiveOffset,
                    i.mapEmissiveWrap,
                    i.mapEmissiveAnisotropy
                  );
                  break;
                case "mapEmissiveRepeat":
                case "mapEmissiveOffset":
                case "mapEmissiveWrap":
                case "mapEmissiveAnisotropy":
                  break;
                case "mapLight":
                  u.lightMap = s(
                    h,
                    i.mapLightRepeat,
                    i.mapLightOffset,
                    i.mapLightWrap,
                    i.mapLightAnisotropy
                  );
                  break;
                case "mapLightRepeat":
                case "mapLightOffset":
                case "mapLightWrap":
                case "mapLightAnisotropy":
                  break;
                case "mapAO":
                  u.aoMap = s(
                    h,
                    i.mapAORepeat,
                    i.mapAOOffset,
                    i.mapAOWrap,
                    i.mapAOAnisotropy
                  );
                  break;
                case "mapAORepeat":
                case "mapAOOffset":
                case "mapAOWrap":
                case "mapAOAnisotropy":
                  break;
                case "mapBump":
                  u.bumpMap = s(
                    h,
                    i.mapBumpRepeat,
                    i.mapBumpOffset,
                    i.mapBumpWrap,
                    i.mapBumpAnisotropy
                  );
                  break;
                case "mapBumpScale":
                  u.bumpScale = h;
                  break;
                case "mapBumpRepeat":
                case "mapBumpOffset":
                case "mapBumpWrap":
                case "mapBumpAnisotropy":
                  break;
                case "mapNormal":
                  u.normalMap = s(
                    h,
                    i.mapNormalRepeat,
                    i.mapNormalOffset,
                    i.mapNormalWrap,
                    i.mapNormalAnisotropy
                  );
                  break;
                case "mapNormalFactor":
                  u.normalScale = [h, h];
                  break;
                case "mapNormalRepeat":
                case "mapNormalOffset":
                case "mapNormalWrap":
                case "mapNormalAnisotropy":
                  break;
                case "mapSpecular":
                  u.specularMap = s(
                    h,
                    i.mapSpecularRepeat,
                    i.mapSpecularOffset,
                    i.mapSpecularWrap,
                    i.mapSpecularAnisotropy
                  );
                  break;
                case "mapSpecularRepeat":
                case "mapSpecularOffset":
                case "mapSpecularWrap":
                case "mapSpecularAnisotropy":
                  break;
                case "mapMetalness":
                  u.metalnessMap = s(
                    h,
                    i.mapMetalnessRepeat,
                    i.mapMetalnessOffset,
                    i.mapMetalnessWrap,
                    i.mapMetalnessAnisotropy
                  );
                  break;
                case "mapMetalnessRepeat":
                case "mapMetalnessOffset":
                case "mapMetalnessWrap":
                case "mapMetalnessAnisotropy":
                  break;
                case "mapRoughness":
                  u.roughnessMap = s(
                    h,
                    i.mapRoughnessRepeat,
                    i.mapRoughnessOffset,
                    i.mapRoughnessWrap,
                    i.mapRoughnessAnisotropy
                  );
                  break;
                case "mapRoughnessRepeat":
                case "mapRoughnessOffset":
                case "mapRoughnessWrap":
                case "mapRoughnessAnisotropy":
                  break;
                case "mapAlpha":
                  u.alphaMap = s(
                    h,
                    i.mapAlphaRepeat,
                    i.mapAlphaOffset,
                    i.mapAlphaWrap,
                    i.mapAlphaAnisotropy
                  );
                  break;
                case "mapAlphaRepeat":
                case "mapAlphaOffset":
                case "mapAlphaWrap":
                case "mapAlphaAnisotropy":
                  break;
                case "flipSided":
                  u.side = No;
                  break;
                case "doubleSided":
                  u.side = Co;
                  break;
                case "transparency":
                  console.warn(
                    "THREE.Loader.createMaterial: transparency has been renamed to opacity"
                  ),
                    (u.opacity = h);
                  break;
                case "depthTest":
                case "depthWrite":
                case "colorWrite":
                case "opacity":
                case "reflectivity":
                case "transparent":
                case "visible":
                case "wireframe":
                  u[l] = h;
                  break;
                case "vertexColors":
                  !0 === h && (u.vertexColors = Do),
                    "face" === h && (u.vertexColors = Oo);
                  break;
                default:
                  console.error(
                    "THREE.Loader.createMaterial: Unsupported",
                    l,
                    h
                  );
              }
            }
            return (
              "MeshBasicMaterial" === u.type && delete u.emissive,
              "MeshPhongMaterial" !== u.type && delete u.specular,
              u.opacity < 1 && (u.transparent = !0),
              r.setTextures(c),
              r.parse(u)
            );
          };
        })(),
      }),
      Object.assign(_r.prototype, {
        load: function (e, t, n, r) {
          var i = this,
            o =
              this.texturePath && "string" == typeof this.texturePath
                ? this.texturePath
                : yr.prototype.extractUrlBase(e),
            a = new Bn(this.manager);
          a.setWithCredentials(this.withCredentials),
            a.load(
              e,
              function (n) {
                var r = JSON.parse(n),
                  a = r.metadata;
                if (void 0 !== a) {
                  var s = a.type;
                  if (void 0 !== s) {
                    if ("object" === s.toLowerCase())
                      return void console.error(
                        "THREE.JSONLoader: " +
                          e +
                          " should be loaded with THREE.ObjectLoader instead."
                      );
                    if ("scene" === s.toLowerCase())
                      return void console.error(
                        "THREE.JSONLoader: " +
                          e +
                          " should be loaded with THREE.SceneLoader instead."
                      );
                  }
                }
                var c = i.parse(r, o);
                t(c.geometry, c.materials);
              },
              n,
              r
            );
        },
        setTexturePath: function (e) {
          this.texturePath = e;
        },
        parse: (function () {
          function e(e, t) {
            function n(e, t) {
              return e & (1 << t);
            }
            var r,
              o,
              a,
              s,
              c,
              u,
              h,
              p,
              d,
              f,
              m,
              v,
              g,
              y,
              _,
              b,
              x,
              E,
              w,
              M,
              T,
              S,
              N,
              C,
              A,
              R,
              P,
              O = e.faces,
              D = e.vertices,
              L = e.normals,
              I = e.colors,
              U = e.scale,
              k = 0;
            if (void 0 !== e.uvs) {
              for (r = 0; r < e.uvs.length; r++) e.uvs[r].length && k++;
              for (r = 0; r < k; r++) t.faceVertexUvs[r] = [];
            }
            for (s = 0, c = D.length; s < c; )
              (E = new l()),
                (E.x = D[s++] * U),
                (E.y = D[s++] * U),
                (E.z = D[s++] * U),
                t.vertices.push(E);
            for (s = 0, c = O.length; s < c; )
              if (
                ((f = O[s++]),
                (m = n(f, 0)),
                (v = n(f, 1)),
                (g = n(f, 3)),
                (y = n(f, 4)),
                (_ = n(f, 5)),
                (b = n(f, 6)),
                (x = n(f, 7)),
                m)
              ) {
                if (
                  ((M = new ve()),
                  (M.a = O[s]),
                  (M.b = O[s + 1]),
                  (M.c = O[s + 3]),
                  (T = new ve()),
                  (T.a = O[s + 1]),
                  (T.b = O[s + 2]),
                  (T.c = O[s + 3]),
                  (s += 4),
                  v &&
                    ((d = O[s++]),
                    (M.materialIndex = d),
                    (T.materialIndex = d)),
                  (a = t.faces.length),
                  g)
                )
                  for (r = 0; r < k; r++)
                    for (
                      C = e.uvs[r],
                        t.faceVertexUvs[r][a] = [],
                        t.faceVertexUvs[r][a + 1] = [],
                        o = 0;
                      o < 4;
                      o++
                    )
                      (p = O[s++]),
                        (R = C[2 * p]),
                        (P = C[2 * p + 1]),
                        (A = new i(R, P)),
                        2 !== o && t.faceVertexUvs[r][a].push(A),
                        0 !== o && t.faceVertexUvs[r][a + 1].push(A);
                if (
                  (y &&
                    ((h = 3 * O[s++]),
                    M.normal.set(L[h++], L[h++], L[h]),
                    T.normal.copy(M.normal)),
                  _)
                )
                  for (r = 0; r < 4; r++)
                    (h = 3 * O[s++]),
                      (N = new l(L[h++], L[h++], L[h])),
                      2 !== r && M.vertexNormals.push(N),
                      0 !== r && T.vertexNormals.push(N);
                if (
                  (b &&
                    ((u = O[s++]),
                    (S = I[u]),
                    M.color.setHex(S),
                    T.color.setHex(S)),
                  x)
                )
                  for (r = 0; r < 4; r++)
                    (u = O[s++]),
                      (S = I[u]),
                      2 !== r && M.vertexColors.push(new Y(S)),
                      0 !== r && T.vertexColors.push(new Y(S));
                t.faces.push(M), t.faces.push(T);
              } else {
                if (
                  ((w = new ve()),
                  (w.a = O[s++]),
                  (w.b = O[s++]),
                  (w.c = O[s++]),
                  v && ((d = O[s++]), (w.materialIndex = d)),
                  (a = t.faces.length),
                  g)
                )
                  for (r = 0; r < k; r++)
                    for (
                      C = e.uvs[r], t.faceVertexUvs[r][a] = [], o = 0;
                      o < 3;
                      o++
                    )
                      (p = O[s++]),
                        (R = C[2 * p]),
                        (P = C[2 * p + 1]),
                        (A = new i(R, P)),
                        t.faceVertexUvs[r][a].push(A);
                if (
                  (y && ((h = 3 * O[s++]), w.normal.set(L[h++], L[h++], L[h])),
                  _)
                )
                  for (r = 0; r < 3; r++)
                    (h = 3 * O[s++]),
                      (N = new l(L[h++], L[h++], L[h])),
                      w.vertexNormals.push(N);
                if ((b && ((u = O[s++]), w.color.setHex(I[u])), x))
                  for (r = 0; r < 3; r++)
                    (u = O[s++]), w.vertexColors.push(new Y(I[u]));
                t.faces.push(w);
              }
          }
          function t(e, t) {
            var n =
              void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
            if (e.skinWeights)
              for (var r = 0, i = e.skinWeights.length; r < i; r += n) {
                var o = e.skinWeights[r],
                  s = n > 1 ? e.skinWeights[r + 1] : 0,
                  c = n > 2 ? e.skinWeights[r + 2] : 0,
                  u = n > 3 ? e.skinWeights[r + 3] : 0;
                t.skinWeights.push(new a(o, s, c, u));
              }
            if (e.skinIndices)
              for (var r = 0, i = e.skinIndices.length; r < i; r += n) {
                var l = e.skinIndices[r],
                  h = n > 1 ? e.skinIndices[r + 1] : 0,
                  p = n > 2 ? e.skinIndices[r + 2] : 0,
                  d = n > 3 ? e.skinIndices[r + 3] : 0;
                t.skinIndices.push(new a(l, h, p, d));
              }
            (t.bones = e.bones),
              t.bones &&
                t.bones.length > 0 &&
                (t.skinWeights.length !== t.skinIndices.length ||
                  t.skinIndices.length !== t.vertices.length) &&
                console.warn(
                  "When skinning, number of vertices (" +
                    t.vertices.length +
                    "), skinIndices (" +
                    t.skinIndices.length +
                    "), and skinWeights (" +
                    t.skinWeights.length +
                    ") should match."
                );
          }
          function n(e, t) {
            var n = e.scale;
            if (void 0 !== e.morphTargets)
              for (var r = 0, i = e.morphTargets.length; r < i; r++) {
                (t.morphTargets[r] = {}),
                  (t.morphTargets[r].name = e.morphTargets[r].name),
                  (t.morphTargets[r].vertices = []);
                for (
                  var o = t.morphTargets[r].vertices,
                    a = e.morphTargets[r].vertices,
                    s = 0,
                    c = a.length;
                  s < c;
                  s += 3
                ) {
                  var u = new l();
                  (u.x = a[s] * n),
                    (u.y = a[s + 1] * n),
                    (u.z = a[s + 2] * n),
                    o.push(u);
                }
              }
            if (void 0 !== e.morphColors && e.morphColors.length > 0) {
              console.warn(
                'THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.'
              );
              for (
                var h = t.faces,
                  p = e.morphColors[0].colors,
                  r = 0,
                  i = h.length;
                r < i;
                r++
              )
                h[r].color.fromArray(p, 3 * r);
            }
          }
          function r(e, t) {
            var n = [],
              r = [];
            void 0 !== e.animation && r.push(e.animation),
              void 0 !== e.animations &&
                (e.animations.length
                  ? (r = r.concat(e.animations))
                  : r.push(e.animations));
            for (var i = 0; i < r.length; i++) {
              var o = mr.parseAnimation(r[i], t.bones);
              o && n.push(o);
            }
            if (t.morphTargets) {
              var a = mr.CreateClipsFromMorphTargetSequences(
                t.morphTargets,
                10
              );
              n = n.concat(a);
            }
            n.length > 0 && (t.animations = n);
          }
          return function (i, o) {
            void 0 !== i.data && (i = i.data),
              void 0 !== i.scale ? (i.scale = 1 / i.scale) : (i.scale = 1);
            var a = new ye();
            return (
              e(i, a),
              t(i, a),
              n(i, a),
              r(i, a),
              a.computeFaceNormals(),
              a.computeBoundingSphere(),
              void 0 === i.materials || 0 === i.materials.length
                ? { geometry: a }
                : {
                    geometry: a,
                    materials: yr.prototype.initMaterials(
                      i.materials,
                      o,
                      this.crossOrigin
                    ),
                  }
            );
          };
        })(),
      }),
      Object.assign(br.prototype, {
        load: function (e, t, n, r) {
          "" === this.texturePath &&
            (this.texturePath = e.substring(0, e.lastIndexOf("/") + 1));
          var i = this;
          new Bn(i.manager).load(
            e,
            function (n) {
              var o = null;
              try {
                o = JSON.parse(n);
              } catch (t) {
                return (
                  void 0 !== r && r(t),
                  void console.error(
                    "THREE:ObjectLoader: Can't parse " + e + ".",
                    t.message
                  )
                );
              }
              var a = o.metadata;
              if (
                void 0 === a ||
                void 0 === a.type ||
                "geometry" === a.type.toLowerCase()
              )
                return void console.error(
                  "THREE.ObjectLoader: Can't load " +
                    e +
                    ". Use THREE.JSONLoader instead."
                );
              i.parse(o, t);
            },
            n,
            r
          );
        },
        setTexturePath: function (e) {
          this.texturePath = e;
        },
        setCrossOrigin: function (e) {
          this.crossOrigin = e;
        },
        parse: function (e, t) {
          var n = this.parseGeometries(e.geometries),
            r = this.parseImages(e.images, function () {
              void 0 !== t && t(a);
            }),
            i = this.parseTextures(e.textures, r),
            o = this.parseMaterials(e.materials, i),
            a = this.parseObject(e.object, n, o);
          return (
            e.animations && (a.animations = this.parseAnimations(e.animations)),
            (void 0 !== e.images && 0 !== e.images.length) ||
              (void 0 !== t && t(a)),
            a
          );
        },
        parseGeometries: function (e) {
          var t = {};
          if (void 0 !== e)
            for (
              var n = new _r(), r = new gr(), i = 0, o = e.length;
              i < o;
              i++
            ) {
              var a,
                s = e[i];
              switch (s.type) {
                case "PlaneGeometry":
                case "PlaneBufferGeometry":
                  a = new Js[s.type](
                    s.width,
                    s.height,
                    s.widthSegments,
                    s.heightSegments
                  );
                  break;
                case "BoxGeometry":
                case "BoxBufferGeometry":
                case "CubeGeometry":
                  a = new Js[s.type](
                    s.width,
                    s.height,
                    s.depth,
                    s.widthSegments,
                    s.heightSegments,
                    s.depthSegments
                  );
                  break;
                case "CircleGeometry":
                case "CircleBufferGeometry":
                  a = new Js[s.type](
                    s.radius,
                    s.segments,
                    s.thetaStart,
                    s.thetaLength
                  );
                  break;
                case "CylinderGeometry":
                case "CylinderBufferGeometry":
                  a = new Js[s.type](
                    s.radiusTop,
                    s.radiusBottom,
                    s.height,
                    s.radialSegments,
                    s.heightSegments,
                    s.openEnded,
                    s.thetaStart,
                    s.thetaLength
                  );
                  break;
                case "ConeGeometry":
                case "ConeBufferGeometry":
                  a = new Js[s.type](
                    s.radius,
                    s.height,
                    s.radialSegments,
                    s.heightSegments,
                    s.openEnded,
                    s.thetaStart,
                    s.thetaLength
                  );
                  break;
                case "SphereGeometry":
                case "SphereBufferGeometry":
                  a = new Js[s.type](
                    s.radius,
                    s.widthSegments,
                    s.heightSegments,
                    s.phiStart,
                    s.phiLength,
                    s.thetaStart,
                    s.thetaLength
                  );
                  break;
                case "DodecahedronGeometry":
                case "IcosahedronGeometry":
                case "OctahedronGeometry":
                case "TetrahedronGeometry":
                  a = new Js[s.type](s.radius, s.detail);
                  break;
                case "RingGeometry":
                case "RingBufferGeometry":
                  a = new Js[s.type](
                    s.innerRadius,
                    s.outerRadius,
                    s.thetaSegments,
                    s.phiSegments,
                    s.thetaStart,
                    s.thetaLength
                  );
                  break;
                case "TorusGeometry":
                case "TorusBufferGeometry":
                  a = new Js[s.type](
                    s.radius,
                    s.tube,
                    s.radialSegments,
                    s.tubularSegments,
                    s.arc
                  );
                  break;
                case "TorusKnotGeometry":
                case "TorusKnotBufferGeometry":
                  a = new Js[s.type](
                    s.radius,
                    s.tube,
                    s.tubularSegments,
                    s.radialSegments,
                    s.p,
                    s.q
                  );
                  break;
                case "LatheGeometry":
                case "LatheBufferGeometry":
                  a = new Js[s.type](
                    s.points,
                    s.segments,
                    s.phiStart,
                    s.phiLength
                  );
                  break;
                case "BufferGeometry":
                  a = r.parse(s);
                  break;
                case "Geometry":
                  a = n.parse(s, this.texturePath).geometry;
                  break;
                default:
                  console.warn(
                    'THREE.ObjectLoader: Unsupported geometry type "' +
                      s.type +
                      '"'
                  );
                  continue;
              }
              (a.uuid = s.uuid),
                void 0 !== s.name && (a.name = s.name),
                (t[s.uuid] = a);
            }
          return t;
        },
        parseMaterials: function (e, t) {
          var n = {};
          if (void 0 !== e) {
            var r = new vr();
            r.setTextures(t);
            for (var i = 0, o = e.length; i < o; i++) {
              var a = e[i];
              if ("MultiMaterial" === a.type) {
                for (var s = [], c = 0; c < a.materials.length; c++)
                  s.push(r.parse(a.materials[c]));
                n[a.uuid] = s;
              } else n[a.uuid] = r.parse(a);
            }
          }
          return n;
        },
        parseAnimations: function (e) {
          for (var t = [], n = 0; n < e.length; n++) {
            var r = mr.parse(e[n]);
            t.push(r);
          }
          return t;
        },
        parseImages: function (e, t) {
          var n = this,
            r = {};
          if (void 0 !== e && e.length > 0) {
            var i = new Vn(t),
              o = new jn(i);
            o.setCrossOrigin(this.crossOrigin);
            for (var a = 0, s = e.length; a < s; a++) {
              var c = e[a],
                u = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)
                  ? c.url
                  : n.texturePath + c.url;
              r[c.uuid] = (function (e) {
                return (
                  n.manager.itemStart(e),
                  o.load(
                    e,
                    function () {
                      n.manager.itemEnd(e);
                    },
                    void 0,
                    function () {
                      n.manager.itemEnd(e), n.manager.itemError(e);
                    }
                  )
                );
              })(u);
            }
          }
          return r;
        },
        parseTextures: function (e, t) {
          function n(e, t) {
            return "number" == typeof e
              ? e
              : (console.warn(
                  "THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
                  e
                ),
                t[e]);
          }
          var r = {};
          if (void 0 !== e)
            for (var i = 0, a = e.length; i < a; i++) {
              var s = e[i];
              void 0 === s.image &&
                console.warn(
                  'THREE.ObjectLoader: No "image" specified for',
                  s.uuid
                ),
                void 0 === t[s.image] &&
                  console.warn("THREE.ObjectLoader: Undefined image", s.image);
              var c = new o(t[s.image]);
              (c.needsUpdate = !0),
                (c.uuid = s.uuid),
                void 0 !== s.name && (c.name = s.name),
                void 0 !== s.mapping && (c.mapping = n(s.mapping, ic)),
                void 0 !== s.offset && c.offset.fromArray(s.offset),
                void 0 !== s.repeat && c.repeat.fromArray(s.repeat),
                void 0 !== s.wrap &&
                  ((c.wrapS = n(s.wrap[0], oc)), (c.wrapT = n(s.wrap[1], oc))),
                void 0 !== s.minFilter && (c.minFilter = n(s.minFilter, ac)),
                void 0 !== s.magFilter && (c.magFilter = n(s.magFilter, ac)),
                void 0 !== s.anisotropy && (c.anisotropy = s.anisotropy),
                void 0 !== s.flipY && (c.flipY = s.flipY),
                (r[s.uuid] = c);
            }
          return r;
        },
        parseObject: (function () {
          var e = new h();
          return function (t, n, r) {
            function i(e) {
              return (
                void 0 === n[e] &&
                  console.warn("THREE.ObjectLoader: Undefined geometry", e),
                n[e]
              );
            }
            function o(e) {
              if (void 0 !== e) {
                if (Array.isArray(e)) {
                  for (var t = [], n = 0, i = e.length; n < i; n++) {
                    var o = e[n];
                    void 0 === r[o] &&
                      console.warn("THREE.ObjectLoader: Undefined material", o),
                      t.push(r[o]);
                  }
                  return t;
                }
                return (
                  void 0 === r[e] &&
                    console.warn("THREE.ObjectLoader: Undefined material", e),
                  r[e]
                );
              }
            }
            var a;
            switch (t.type) {
              case "Scene":
                (a = new Nt()),
                  void 0 !== t.background &&
                    Number.isInteger(t.background) &&
                    (a.background = new Y(t.background)),
                  void 0 !== t.fog &&
                    ("Fog" === t.fog.type
                      ? (a.fog = new St(t.fog.color, t.fog.near, t.fog.far))
                      : "FogExp2" === t.fog.type &&
                        (a.fog = new Tt(t.fog.color, t.fog.density)));
                break;
              case "PerspectiveCamera":
                (a = new me(t.fov, t.aspect, t.near, t.far)),
                  void 0 !== t.focus && (a.focus = t.focus),
                  void 0 !== t.zoom && (a.zoom = t.zoom),
                  void 0 !== t.filmGauge && (a.filmGauge = t.filmGauge),
                  void 0 !== t.filmOffset && (a.filmOffset = t.filmOffset),
                  void 0 !== t.view && (a.view = Object.assign({}, t.view));
                break;
              case "OrthographicCamera":
                a = new fe(t.left, t.right, t.top, t.bottom, t.near, t.far);
                break;
              case "AmbientLight":
                a = new er(t.color, t.intensity);
                break;
              case "DirectionalLight":
                a = new $n(t.color, t.intensity);
                break;
              case "PointLight":
                a = new Jn(t.color, t.intensity, t.distance, t.decay);
                break;
              case "RectAreaLight":
                a = new tr(t.color, t.intensity, t.width, t.height);
                break;
              case "SpotLight":
                a = new Kn(
                  t.color,
                  t.intensity,
                  t.distance,
                  t.angle,
                  t.penumbra,
                  t.decay
                );
                break;
              case "HemisphereLight":
                a = new Xn(t.color, t.groundColor, t.intensity);
                break;
              case "SkinnedMesh":
                console.warn(
                  "THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet."
                );
              case "Mesh":
                var s = i(t.geometry),
                  c = o(t.material);
                a = s.bones && s.bones.length > 0 ? new Lt(s, c) : new Be(s, c);
                break;
              case "LOD":
                a = new Pt();
                break;
              case "Line":
                a = new Ut(i(t.geometry), o(t.material), t.mode);
                break;
              case "LineLoop":
                a = new Ft(i(t.geometry), o(t.material));
                break;
              case "LineSegments":
                a = new kt(i(t.geometry), o(t.material));
                break;
              case "PointCloud":
              case "Points":
                a = new Bt(i(t.geometry), o(t.material));
                break;
              case "Sprite":
                a = new Rt(o(t.material));
                break;
              case "Group":
                a = new zt();
                break;
              default:
                a = new pe();
            }
            if (
              ((a.uuid = t.uuid),
              void 0 !== t.name && (a.name = t.name),
              void 0 !== t.matrix
                ? (e.fromArray(t.matrix),
                  e.decompose(a.position, a.quaternion, a.scale))
                : (void 0 !== t.position && a.position.fromArray(t.position),
                  void 0 !== t.rotation && a.rotation.fromArray(t.rotation),
                  void 0 !== t.quaternion &&
                    a.quaternion.fromArray(t.quaternion),
                  void 0 !== t.scale && a.scale.fromArray(t.scale)),
              void 0 !== t.castShadow && (a.castShadow = t.castShadow),
              void 0 !== t.receiveShadow && (a.receiveShadow = t.receiveShadow),
              t.shadow &&
                (void 0 !== t.shadow.bias && (a.shadow.bias = t.shadow.bias),
                void 0 !== t.shadow.radius &&
                  (a.shadow.radius = t.shadow.radius),
                void 0 !== t.shadow.mapSize &&
                  a.shadow.mapSize.fromArray(t.shadow.mapSize),
                void 0 !== t.shadow.camera &&
                  (a.shadow.camera = this.parseObject(t.shadow.camera))),
              void 0 !== t.visible && (a.visible = t.visible),
              void 0 !== t.userData && (a.userData = t.userData),
              void 0 !== t.children)
            )
              for (var u = t.children, l = 0; l < u.length; l++)
                a.add(this.parseObject(u[l], n, r));
            if ("LOD" === t.type)
              for (var h = t.levels, p = 0; p < h.length; p++) {
                var d = h[p],
                  f = a.getObjectByProperty("uuid", d.object);
                void 0 !== f && a.addLevel(f, d.distance);
              }
            return a;
          };
        })(),
      });
    var ic = {
        UVMapping: ya,
        CubeReflectionMapping: _a,
        CubeRefractionMapping: ba,
        EquirectangularReflectionMapping: xa,
        EquirectangularRefractionMapping: Ea,
        SphericalReflectionMapping: wa,
        CubeUVReflectionMapping: Ma,
        CubeUVRefractionMapping: Ta,
      },
      oc = {
        RepeatWrapping: Sa,
        ClampToEdgeWrapping: Na,
        MirroredRepeatWrapping: Ca,
      },
      ac = {
        NearestFilter: Aa,
        NearestMipMapNearestFilter: Ra,
        NearestMipMapLinearFilter: Pa,
        LinearFilter: Oa,
        LinearMipMapNearestFilter: Da,
        LinearMipMapLinearFilter: La,
      };
    Object.assign(Pr.prototype, {
      getPoint: function () {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
      },
      getPointAt: function (e) {
        var t = this.getUtoTmapping(e);
        return this.getPoint(t);
      },
      getPoints: function (e) {
        void 0 === e && (e = 5);
        for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
        return t;
      },
      getSpacedPoints: function (e) {
        void 0 === e && (e = 5);
        for (var t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
        return t;
      },
      getLength: function () {
        var e = this.getLengths();
        return e[e.length - 1];
      },
      getLengths: function (e) {
        if (
          (void 0 === e && (e = this.arcLengthDivisions),
          this.cacheArcLengths &&
            this.cacheArcLengths.length === e + 1 &&
            !this.needsUpdate)
        )
          return this.cacheArcLengths;
        this.needsUpdate = !1;
        var t,
          n,
          r = [],
          i = this.getPoint(0),
          o = 0;
        for (r.push(0), n = 1; n <= e; n++)
          (t = this.getPoint(n / e)),
            (o += t.distanceTo(i)),
            r.push(o),
            (i = t);
        return (this.cacheArcLengths = r), r;
      },
      updateArcLengths: function () {
        (this.needsUpdate = !0), this.getLengths();
      },
      getUtoTmapping: function (e, t) {
        var n,
          r = this.getLengths(),
          i = 0,
          o = r.length;
        n = t || e * r[o - 1];
        for (var a, s = 0, c = o - 1; s <= c; )
          if (((i = Math.floor(s + (c - s) / 2)), (a = r[i] - n) < 0))
            s = i + 1;
          else {
            if (!(a > 0)) {
              c = i;
              break;
            }
            c = i - 1;
          }
        if (((i = c), r[i] === n)) return i / (o - 1);
        var u = r[i];
        return (i + (n - u) / (r[i + 1] - u)) / (o - 1);
      },
      getTangent: function (e) {
        var t = e - 1e-4,
          n = e + 1e-4;
        t < 0 && (t = 0), n > 1 && (n = 1);
        var r = this.getPoint(t);
        return this.getPoint(n).clone().sub(r).normalize();
      },
      getTangentAt: function (e) {
        var t = this.getUtoTmapping(e);
        return this.getTangent(t);
      },
      computeFrenetFrames: function (e, t) {
        var n,
          r,
          i,
          o = new l(),
          a = [],
          s = [],
          c = [],
          u = new l(),
          p = new h();
        for (n = 0; n <= e; n++)
          (r = n / e), (a[n] = this.getTangentAt(r)), a[n].normalize();
        (s[0] = new l()), (c[0] = new l());
        var d = Number.MAX_VALUE,
          f = Math.abs(a[0].x),
          m = Math.abs(a[0].y),
          v = Math.abs(a[0].z);
        for (
          f <= d && ((d = f), o.set(1, 0, 0)),
            m <= d && ((d = m), o.set(0, 1, 0)),
            v <= d && o.set(0, 0, 1),
            u.crossVectors(a[0], o).normalize(),
            s[0].crossVectors(a[0], u),
            c[0].crossVectors(a[0], s[0]),
            n = 1;
          n <= e;
          n++
        )
          (s[n] = s[n - 1].clone()),
            (c[n] = c[n - 1].clone()),
            u.crossVectors(a[n - 1], a[n]),
            u.length() > Number.EPSILON &&
              (u.normalize(),
              (i = Math.acos(Os.clamp(a[n - 1].dot(a[n]), -1, 1))),
              s[n].applyMatrix4(p.makeRotationAxis(u, i))),
            c[n].crossVectors(a[n], s[n]);
        if (!0 === t)
          for (
            i = Math.acos(Os.clamp(s[0].dot(s[e]), -1, 1)),
              i /= e,
              a[0].dot(u.crossVectors(s[0], s[e])) > 0 && (i = -i),
              n = 1;
            n <= e;
            n++
          )
            s[n].applyMatrix4(p.makeRotationAxis(a[n], i * n)),
              c[n].crossVectors(a[n], s[n]);
        return { tangents: a, normals: s, binormals: c };
      },
    }),
      (Or.prototype = Object.create(Pr.prototype)),
      (Or.prototype.constructor = Or),
      (Or.prototype.isLineCurve = !0),
      (Or.prototype.getPoint = function (e) {
        if (1 === e) return this.v2.clone();
        var t = this.v2.clone().sub(this.v1);
        return t.multiplyScalar(e).add(this.v1), t;
      }),
      (Or.prototype.getPointAt = function (e) {
        return this.getPoint(e);
      }),
      (Or.prototype.getTangent = function (e) {
        return this.v2.clone().sub(this.v1).normalize();
      }),
      (Dr.prototype = Object.assign(Object.create(Pr.prototype), {
        constructor: Dr,
        add: function (e) {
          this.curves.push(e);
        },
        closePath: function () {
          var e = this.curves[0].getPoint(0),
            t = this.curves[this.curves.length - 1].getPoint(1);
          e.equals(t) || this.curves.push(new Or(t, e));
        },
        getPoint: function (e) {
          for (
            var t = e * this.getLength(), n = this.getCurveLengths(), r = 0;
            r < n.length;

          ) {
            if (n[r] >= t) {
              var i = n[r] - t,
                o = this.curves[r],
                a = o.getLength(),
                s = 0 === a ? 0 : 1 - i / a;
              return o.getPointAt(s);
            }
            r++;
          }
          return null;
        },
        getLength: function () {
          var e = this.getCurveLengths();
          return e[e.length - 1];
        },
        updateArcLengths: function () {
          (this.needsUpdate = !0),
            (this.cacheLengths = null),
            this.getCurveLengths();
        },
        getCurveLengths: function () {
          if (
            this.cacheLengths &&
            this.cacheLengths.length === this.curves.length
          )
            return this.cacheLengths;
          for (var e = [], t = 0, n = 0, r = this.curves.length; n < r; n++)
            (t += this.curves[n].getLength()), e.push(t);
          return (this.cacheLengths = e), e;
        },
        getSpacedPoints: function (e) {
          void 0 === e && (e = 40);
          for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
          return this.autoClose && t.push(t[0]), t;
        },
        getPoints: function (e) {
          e = e || 12;
          for (var t, n = [], r = 0, i = this.curves; r < i.length; r++)
            for (
              var o = i[r],
                a =
                  o && o.isEllipseCurve
                    ? 2 * e
                    : o && o.isLineCurve
                    ? 1
                    : o && o.isSplineCurve
                    ? e * o.points.length
                    : e,
                s = o.getPoints(a),
                c = 0;
              c < s.length;
              c++
            ) {
              var u = s[c];
              (t && t.equals(u)) || (n.push(u), (t = u));
            }
          return (
            this.autoClose &&
              n.length > 1 &&
              !n[n.length - 1].equals(n[0]) &&
              n.push(n[0]),
            n
          );
        },
        createPointsGeometry: function (e) {
          var t = this.getPoints(e);
          return this.createGeometry(t);
        },
        createSpacedPointsGeometry: function (e) {
          var t = this.getSpacedPoints(e);
          return this.createGeometry(t);
        },
        createGeometry: function (e) {
          for (var t = new ye(), n = 0, r = e.length; n < r; n++) {
            var i = e[n];
            t.vertices.push(new l(i.x, i.y, i.z || 0));
          }
          return t;
        },
      })),
      (Lr.prototype = Object.create(Pr.prototype)),
      (Lr.prototype.constructor = Lr),
      (Lr.prototype.isEllipseCurve = !0),
      (Lr.prototype.getPoint = function (e) {
        for (
          var t = 2 * Math.PI,
            n = this.aEndAngle - this.aStartAngle,
            r = Math.abs(n) < Number.EPSILON;
          n < 0;

        )
          n += t;
        for (; n > t; ) n -= t;
        n < Number.EPSILON && (n = r ? 0 : t),
          !0 !== this.aClockwise || r || (n === t ? (n = -t) : (n -= t));
        var o = this.aStartAngle + e * n,
          a = this.aX + this.xRadius * Math.cos(o),
          s = this.aY + this.yRadius * Math.sin(o);
        if (0 !== this.aRotation) {
          var c = Math.cos(this.aRotation),
            u = Math.sin(this.aRotation),
            l = a - this.aX,
            h = s - this.aY;
          (a = l * c - h * u + this.aX), (s = l * u + h * c + this.aY);
        }
        return new i(a, s);
      }),
      (Ir.prototype = Object.create(Pr.prototype)),
      (Ir.prototype.constructor = Ir),
      (Ir.prototype.isSplineCurve = !0),
      (Ir.prototype.getPoint = function (e) {
        var t = this.points,
          n = (t.length - 1) * e,
          r = Math.floor(n),
          o = n - r,
          a = t[0 === r ? r : r - 1],
          s = t[r],
          c = t[r > t.length - 2 ? t.length - 1 : r + 1],
          u = t[r > t.length - 3 ? t.length - 1 : r + 2];
        return new i(xr(o, a.x, s.x, c.x, u.x), xr(o, a.y, s.y, c.y, u.y));
      }),
      (Ur.prototype = Object.create(Pr.prototype)),
      (Ur.prototype.constructor = Ur),
      (Ur.prototype.getPoint = function (e) {
        var t = this.v0,
          n = this.v1,
          r = this.v2,
          o = this.v3;
        return new i(Rr(e, t.x, n.x, r.x, o.x), Rr(e, t.y, n.y, r.y, o.y));
      }),
      (kr.prototype = Object.create(Pr.prototype)),
      (kr.prototype.constructor = kr),
      (kr.prototype.getPoint = function (e) {
        var t = this.v0,
          n = this.v1,
          r = this.v2;
        return new i(Tr(e, t.x, n.x, r.x), Tr(e, t.y, n.y, r.y));
      });
    var sc = Object.assign(Object.create(Dr.prototype), {
      fromPoints: function (e) {
        this.moveTo(e[0].x, e[0].y);
        for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
      },
      moveTo: function (e, t) {
        this.currentPoint.set(e, t);
      },
      lineTo: function (e, t) {
        var n = new Or(this.currentPoint.clone(), new i(e, t));
        this.curves.push(n), this.currentPoint.set(e, t);
      },
      quadraticCurveTo: function (e, t, n, r) {
        var o = new kr(this.currentPoint.clone(), new i(e, t), new i(n, r));
        this.curves.push(o), this.currentPoint.set(n, r);
      },
      bezierCurveTo: function (e, t, n, r, o, a) {
        var s = new Ur(
          this.currentPoint.clone(),
          new i(e, t),
          new i(n, r),
          new i(o, a)
        );
        this.curves.push(s), this.currentPoint.set(o, a);
      },
      splineThru: function (e) {
        var t = [this.currentPoint.clone()].concat(e),
          n = new Ir(t);
        this.curves.push(n), this.currentPoint.copy(e[e.length - 1]);
      },
      arc: function (e, t, n, r, i, o) {
        var a = this.currentPoint.x,
          s = this.currentPoint.y;
        this.absarc(e + a, t + s, n, r, i, o);
      },
      absarc: function (e, t, n, r, i, o) {
        this.absellipse(e, t, n, n, r, i, o);
      },
      ellipse: function (e, t, n, r, i, o, a, s) {
        var c = this.currentPoint.x,
          u = this.currentPoint.y;
        this.absellipse(e + c, t + u, n, r, i, o, a, s);
      },
      absellipse: function (e, t, n, r, i, o, a, s) {
        var c = new Lr(e, t, n, r, i, o, a, s);
        if (this.curves.length > 0) {
          var u = c.getPoint(0);
          u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
        }
        this.curves.push(c);
        var l = c.getPoint(1);
        this.currentPoint.copy(l);
      },
    });
    (Fr.prototype = sc),
      (sc.constructor = Fr),
      (Vr.prototype = Object.assign(Object.create(sc), {
        constructor: Vr,
        getPointsHoles: function (e) {
          for (var t = [], n = 0, r = this.holes.length; n < r; n++)
            t[n] = this.holes[n].getPoints(e);
          return t;
        },
        extractAllPoints: function (e) {
          return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
        },
        extractPoints: function (e) {
          return this.extractAllPoints(e);
        },
      })),
      Object.assign(Br.prototype, {
        moveTo: function (e, t) {
          (this.currentPath = new Fr()),
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(e, t);
        },
        lineTo: function (e, t) {
          this.currentPath.lineTo(e, t);
        },
        quadraticCurveTo: function (e, t, n, r) {
          this.currentPath.quadraticCurveTo(e, t, n, r);
        },
        bezierCurveTo: function (e, t, n, r, i, o) {
          this.currentPath.bezierCurveTo(e, t, n, r, i, o);
        },
        splineThru: function (e) {
          this.currentPath.splineThru(e);
        },
        toShapes: function (e, t) {
          function n(e) {
            for (var t = [], n = 0, r = e.length; n < r; n++) {
              var i = e[n],
                o = new Vr();
              (o.curves = i.curves), t.push(o);
            }
            return t;
          }
          var r = Ks.isClockWise,
            i = this.subPaths;
          if (0 === i.length) return [];
          if (!0 === t) return n(i);
          var o,
            a,
            s,
            c = [];
          if (1 === i.length)
            return (
              (a = i[0]), (s = new Vr()), (s.curves = a.curves), c.push(s), c
            );
          var u = !r(i[0].getPoints());
          u = e ? !u : u;
          var l,
            h = [],
            p = [],
            d = [],
            f = 0;
          (p[f] = void 0), (d[f] = []);
          for (var m = 0, v = i.length; m < v; m++)
            (a = i[m]),
              (l = a.getPoints()),
              (o = r(l)),
              (o = e ? !o : o),
              o
                ? (!u && p[f] && f++,
                  (p[f] = { s: new Vr(), p: l }),
                  (p[f].s.curves = a.curves),
                  u && f++,
                  (d[f] = []))
                : d[f].push({ h: a, p: l[0] });
          if (!p[0]) return n(i);
          if (p.length > 1) {
            for (var g = !1, y = [], _ = 0, b = p.length; _ < b; _++) h[_] = [];
            for (var _ = 0, b = p.length; _ < b; _++)
              for (var x = d[_], E = 0; E < x.length; E++) {
                for (var w = x[E], M = !0, T = 0; T < p.length; T++)
                  (function (e, t) {
                    for (
                      var n = t.length, r = !1, i = n - 1, o = 0;
                      o < n;
                      i = o++
                    ) {
                      var a = t[i],
                        s = t[o],
                        c = s.x - a.x,
                        u = s.y - a.y;
                      if (Math.abs(u) > Number.EPSILON) {
                        if (
                          (u < 0 &&
                            ((a = t[o]), (c = -c), (s = t[i]), (u = -u)),
                          e.y < a.y || e.y > s.y)
                        )
                          continue;
                        if (e.y === a.y) {
                          if (e.x === a.x) return !0;
                        } else {
                          var l = u * (e.x - a.x) - c * (e.y - a.y);
                          if (0 === l) return !0;
                          if (l < 0) continue;
                          r = !r;
                        }
                      } else {
                        if (e.y !== a.y) continue;
                        if (
                          (s.x <= e.x && e.x <= a.x) ||
                          (a.x <= e.x && e.x <= s.x)
                        )
                          return !0;
                      }
                    }
                    return r;
                  })(w.p, p[T].p) &&
                    (_ !== T && y.push({ froms: _, tos: T, hole: E }),
                    M ? ((M = !1), h[T].push(w)) : (g = !0));
                M && h[_].push(w);
              }
            y.length > 0 && (g || (d = h));
          }
          for (var S, m = 0, N = p.length; m < N; m++) {
            (s = p[m].s), c.push(s), (S = d[m]);
            for (var C = 0, A = S.length; C < A; C++) s.holes.push(S[C].h);
          }
          return c;
        },
      }),
      Object.assign(zr.prototype, {
        isFont: !0,
        generateShapes: function (e, t, n) {
          function r(e, t, r, o) {
            var a = i.glyphs[e] || i.glyphs["?"];
            if (a) {
              var s,
                c,
                u,
                l,
                h,
                p,
                d,
                f,
                m,
                v,
                g,
                y = new Br(),
                _ = [];
              if (a.o)
                for (
                  var b =
                      a._cachedOutline || (a._cachedOutline = a.o.split(" ")),
                    x = 0,
                    E = b.length;
                  x < E;

                ) {
                  var w = b[x++];
                  switch (w) {
                    case "m":
                      (s = b[x++] * t + r),
                        (c = b[x++] * t + o),
                        y.moveTo(s, c);
                      break;
                    case "l":
                      (s = b[x++] * t + r),
                        (c = b[x++] * t + o),
                        y.lineTo(s, c);
                      break;
                    case "q":
                      if (
                        ((u = b[x++] * t + r),
                        (l = b[x++] * t + o),
                        (d = b[x++] * t + r),
                        (f = b[x++] * t + o),
                        y.quadraticCurveTo(d, f, u, l),
                        (g = _[_.length - 1]))
                      ) {
                        (h = g.x), (p = g.y);
                        for (var M = 1; M <= n; M++) {
                          var T = M / n;
                          Tr(T, h, d, u), Tr(T, p, f, l);
                        }
                      }
                      break;
                    case "b":
                      if (
                        ((u = b[x++] * t + r),
                        (l = b[x++] * t + o),
                        (d = b[x++] * t + r),
                        (f = b[x++] * t + o),
                        (m = b[x++] * t + r),
                        (v = b[x++] * t + o),
                        y.bezierCurveTo(d, f, m, v, u, l),
                        (g = _[_.length - 1]))
                      ) {
                        (h = g.x), (p = g.y);
                        for (var M = 1; M <= n; M++) {
                          var T = M / n;
                          Rr(T, h, d, m, u), Rr(T, p, f, v, l);
                        }
                      }
                  }
                }
              return { offsetX: a.ha * t, path: y };
            }
          }
          void 0 === t && (t = 100), void 0 === n && (n = 4);
          for (
            var i = this.data,
              o = (function (e) {
                for (
                  var n = String(e).split(""),
                    o = t / i.resolution,
                    a =
                      (i.boundingBox.yMax -
                        i.boundingBox.yMin +
                        i.underlineThickness) *
                      o,
                    s = 0,
                    c = 0,
                    u = [],
                    l = 0;
                  l < n.length;
                  l++
                ) {
                  var h = n[l];
                  if ("\n" === h) (s = 0), (c -= a);
                  else {
                    var p = r(h, o, s, c);
                    (s += p.offsetX), u.push(p.path);
                  }
                }
                return u;
              })(e),
              a = [],
              s = 0,
              c = o.length;
            s < c;
            s++
          )
            Array.prototype.push.apply(a, o[s].toShapes());
          return a;
        },
      }),
      Object.assign(Hr.prototype, {
        load: function (e, t, n, r) {
          var i = this;
          new Bn(this.manager).load(
            e,
            function (e) {
              var n;
              try {
                n = JSON.parse(e);
              } catch (t) {
                console.warn(
                  "THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."
                ),
                  (n = JSON.parse(e.substring(65, e.length - 2)));
              }
              var r = i.parse(n);
              t && t(r);
            },
            n,
            r
          );
        },
        parse: function (e) {
          return new zr(e);
        },
      });
    var cc,
      uc = {
        getContext: function () {
          return (
            void 0 === cc &&
              (cc = new (window.AudioContext || window.webkitAudioContext)()),
            cc
          );
        },
        setContext: function (e) {
          cc = e;
        },
      };
    Object.assign(jr.prototype, {
      load: function (e, t, n, r) {
        var i = new Bn(this.manager);
        i.setResponseType("arraybuffer"),
          i.load(
            e,
            function (e) {
              uc.getContext().decodeAudioData(e, function (e) {
                t(e);
              });
            },
            n,
            r
          );
      },
    }),
      Object.assign(Gr.prototype, {
        update: (function () {
          var e,
            t,
            n,
            r,
            i,
            o,
            a,
            s,
            c = new h(),
            u = new h();
          return function (l) {
            if (
              e !== this ||
              t !== l.focus ||
              n !== l.fov ||
              r !== l.aspect * this.aspect ||
              i !== l.near ||
              o !== l.far ||
              a !== l.zoom ||
              s !== this.eyeSep
            ) {
              (e = this),
                (t = l.focus),
                (n = l.fov),
                (r = l.aspect * this.aspect),
                (i = l.near),
                (o = l.far),
                (a = l.zoom);
              var h = l.projectionMatrix.clone();
              s = this.eyeSep / 2;
              var p,
                d,
                f = (s * i) / t,
                m = (i * Math.tan(Os.DEG2RAD * n * 0.5)) / a;
              (u.elements[12] = -s),
                (c.elements[12] = s),
                (p = -m * r + f),
                (d = m * r + f),
                (h.elements[0] = (2 * i) / (d - p)),
                (h.elements[8] = (d + p) / (d - p)),
                this.cameraL.projectionMatrix.copy(h),
                (p = -m * r - f),
                (d = m * r - f),
                (h.elements[0] = (2 * i) / (d - p)),
                (h.elements[8] = (d + p) / (d - p)),
                this.cameraR.projectionMatrix.copy(h);
            }
            this.cameraL.matrixWorld.copy(l.matrixWorld).multiply(u),
              this.cameraR.matrixWorld.copy(l.matrixWorld).multiply(c);
          };
        })(),
      }),
      (Wr.prototype = Object.create(pe.prototype)),
      (Wr.prototype.constructor = Wr),
      (qr.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: qr,
        getInput: function () {
          return this.gain;
        },
        removeFilter: function () {
          null !== this.filter &&
            (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            (this.filter = null));
        },
        getFilter: function () {
          return this.filter;
        },
        setFilter: function (e) {
          null !== this.filter
            ? (this.gain.disconnect(this.filter),
              this.filter.disconnect(this.context.destination))
            : this.gain.disconnect(this.context.destination),
            (this.filter = e),
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination);
        },
        getMasterVolume: function () {
          return this.gain.gain.value;
        },
        setMasterVolume: function (e) {
          this.gain.gain.value = e;
        },
        updateMatrixWorld: (function () {
          var e = new l(),
            t = new u(),
            n = new l(),
            r = new l();
          return function (i) {
            pe.prototype.updateMatrixWorld.call(this, i);
            var o = this.context.listener,
              a = this.up;
            this.matrixWorld.decompose(e, t, n),
              r.set(0, 0, -1).applyQuaternion(t),
              o.positionX
                ? (o.positionX.setValueAtTime(e.x, this.context.currentTime),
                  o.positionY.setValueAtTime(e.y, this.context.currentTime),
                  o.positionZ.setValueAtTime(e.z, this.context.currentTime),
                  o.forwardX.setValueAtTime(r.x, this.context.currentTime),
                  o.forwardY.setValueAtTime(r.y, this.context.currentTime),
                  o.forwardZ.setValueAtTime(r.z, this.context.currentTime),
                  o.upX.setValueAtTime(a.x, this.context.currentTime),
                  o.upY.setValueAtTime(a.y, this.context.currentTime),
                  o.upZ.setValueAtTime(a.z, this.context.currentTime))
                : (o.setPosition(e.x, e.y, e.z),
                  o.setOrientation(r.x, r.y, r.z, a.x, a.y, a.z));
          };
        })(),
      })),
      (Xr.prototype = Object.assign(Object.create(pe.prototype), {
        constructor: Xr,
        getOutput: function () {
          return this.gain;
        },
        setNodeSource: function (e) {
          return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = "audioNode"),
            (this.source = e),
            this.connect(),
            this
          );
        },
        setBuffer: function (e) {
          return (
            (this.buffer = e),
            (this.sourceType = "buffer"),
            this.autoplay && this.play(),
            this
          );
        },
        play: function () {
          if (!0 === this.isPlaying)
            return void console.warn("THREE.Audio: Audio is already playing.");
          if (!1 === this.hasPlaybackControl)
            return void console.warn(
              "THREE.Audio: this Audio has no playback control."
            );
          var e = this.context.createBufferSource();
          return (
            (e.buffer = this.buffer),
            (e.loop = this.loop),
            (e.onended = this.onEnded.bind(this)),
            e.playbackRate.setValueAtTime(this.playbackRate, this.startTime),
            e.start(0, this.startTime),
            (this.isPlaying = !0),
            (this.source = e),
            this.connect()
          );
        },
        pause: function () {
          return !1 === this.hasPlaybackControl
            ? void console.warn(
                "THREE.Audio: this Audio has no playback control."
              )
            : (this.source.stop(),
              (this.startTime = this.context.currentTime),
              (this.isPlaying = !1),
              this);
        },
        stop: function () {
          return !1 === this.hasPlaybackControl
            ? void console.warn(
                "THREE.Audio: this Audio has no playback control."
              )
            : (this.source.stop(),
              (this.startTime = 0),
              (this.isPlaying = !1),
              this);
        },
        connect: function () {
          if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++)
              this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
          } else this.source.connect(this.getOutput());
          return this;
        },
        disconnect: function () {
          if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++)
              this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
          } else this.source.disconnect(this.getOutput());
          return this;
        },
        getFilters: function () {
          return this.filters;
        },
        setFilters: function (e) {
          return (
            e || (e = []),
            !0 === this.isPlaying
              ? (this.disconnect(), (this.filters = e), this.connect())
              : (this.filters = e),
            this
          );
        },
        getFilter: function () {
          return this.getFilters()[0];
        },
        setFilter: function (e) {
          return this.setFilters(e ? [e] : []);
        },
        setPlaybackRate: function (e) {
          return !1 === this.hasPlaybackControl
            ? void console.warn(
                "THREE.Audio: this Audio has no playback control."
              )
            : ((this.playbackRate = e),
              !0 === this.isPlaying &&
                this.source.playbackRate.setValueAtTime(
                  this.playbackRate,
                  this.context.currentTime
                ),
              this);
        },
        getPlaybackRate: function () {
          return this.playbackRate;
        },
        onEnded: function () {
          this.isPlaying = !1;
        },
        getLoop: function () {
          return !1 === this.hasPlaybackControl
            ? (console.warn("THREE.Audio: this Audio has no playback control."),
              !1)
            : this.loop;
        },
        setLoop: function (e) {
          return !1 === this.hasPlaybackControl
            ? void console.warn(
                "THREE.Audio: this Audio has no playback control."
              )
            : ((this.loop = e),
              !0 === this.isPlaying && (this.source.loop = this.loop),
              this);
        },
        getVolume: function () {
          return this.gain.gain.value;
        },
        setVolume: function (e) {
          return (this.gain.gain.value = e), this;
        },
      })),
      (Yr.prototype = Object.assign(Object.create(Xr.prototype), {
        constructor: Yr,
        getOutput: function () {
          return this.panner;
        },
        getRefDistance: function () {
          return this.panner.refDistance;
        },
        setRefDistance: function (e) {
          this.panner.refDistance = e;
        },
        getRolloffFactor: function () {
          return this.panner.rolloffFactor;
        },
        setRolloffFactor: function (e) {
          this.panner.rolloffFactor = e;
        },
        getDistanceModel: function () {
          return this.panner.distanceModel;
        },
        setDistanceModel: function (e) {
          this.panner.distanceModel = e;
        },
        getMaxDistance: function () {
          return this.panner.maxDistance;
        },
        setMaxDistance: function (e) {
          this.panner.maxDistance = e;
        },
        updateMatrixWorld: (function () {
          var e = new l();
          return function (t) {
            pe.prototype.updateMatrixWorld.call(this, t),
              e.setFromMatrixPosition(this.matrixWorld),
              this.panner.setPosition(e.x, e.y, e.z);
          };
        })(),
      })),
      Object.assign(Zr.prototype, {
        getFrequencyData: function () {
          return this.analyser.getByteFrequencyData(this.data), this.data;
        },
        getAverageFrequency: function () {
          for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++)
            e += t[n];
          return e / t.length;
        },
      }),
      Object.assign(Kr.prototype, {
        accumulate: function (e, t) {
          var n = this.buffer,
            r = this.valueSize,
            i = e * r + r,
            o = this.cumulativeWeight;
          if (0 === o) {
            for (var a = 0; a !== r; ++a) n[i + a] = n[a];
            o = t;
          } else {
            o += t;
            var s = t / o;
            this._mixBufferRegion(n, i, 0, s, r);
          }
          this.cumulativeWeight = o;
        },
        apply: function (e) {
          var t = this.valueSize,
            n = this.buffer,
            r = e * t + t,
            i = this.cumulativeWeight,
            o = this.binding;
          if (((this.cumulativeWeight = 0), i < 1)) {
            var a = 3 * t;
            this._mixBufferRegion(n, r, a, 1 - i, t);
          }
          for (var s = t, c = t + t; s !== c; ++s)
            if (n[s] !== n[s + t]) {
              o.setValue(n, r);
              break;
            }
        },
        saveOriginalState: function () {
          var e = this.binding,
            t = this.buffer,
            n = this.valueSize,
            r = 3 * n;
          e.getValue(t, r);
          for (var i = n, o = r; i !== o; ++i) t[i] = t[r + (i % n)];
          this.cumulativeWeight = 0;
        },
        restoreOriginalState: function () {
          var e = 3 * this.valueSize;
          this.binding.setValue(this.buffer, e);
        },
        _select: function (e, t, n, r, i) {
          if (r >= 0.5) for (var o = 0; o !== i; ++o) e[t + o] = e[n + o];
        },
        _slerp: function (e, t, n, r) {
          u.slerpFlat(e, t, e, t, e, n, r);
        },
        _lerp: function (e, t, n, r, i) {
          for (var o = 1 - r, a = 0; a !== i; ++a) {
            var s = t + a;
            e[s] = e[s] * o + e[n + a] * r;
          }
        },
      }),
      Object.assign(Jr.prototype, {
        getValue: function (e, t) {
          this.bind();
          var n = this._targetGroup.nCachedObjects_,
            r = this._bindings[n];
          void 0 !== r && r.getValue(e, t);
        },
        setValue: function (e, t) {
          for (
            var n = this._bindings,
              r = this._targetGroup.nCachedObjects_,
              i = n.length;
            r !== i;
            ++r
          )
            n[r].setValue(e, t);
        },
        bind: function () {
          for (
            var e = this._bindings,
              t = this._targetGroup.nCachedObjects_,
              n = e.length;
            t !== n;
            ++t
          )
            e[t].bind();
        },
        unbind: function () {
          for (
            var e = this._bindings,
              t = this._targetGroup.nCachedObjects_,
              n = e.length;
            t !== n;
            ++t
          )
            e[t].unbind();
        },
      }),
      Object.assign(Qr, {
        Composite: Jr,
        create: function (e, t, n) {
          return e && e.isAnimationObjectGroup
            ? new Qr.Composite(e, t, n)
            : new Qr(e, t, n);
        },
        sanitizeNodeName: function (e) {
          return e.replace(/\s/g, "_").replace(/[^\w-]/g, "");
        },
        parseTrackName: (function () {
          var e = /((?:[\w-]+[\/:])*)/,
            t = /([\w-\.]+)?/,
            n = /(?:\.([\w-]+)(?:\[(.+)\])?)?/,
            r = /\.([\w-]+)(?:\[(.+)\])?/,
            i = new RegExp(
              "^" + e.source + t.source + n.source + r.source + "$"
            ),
            o = ["material", "materials", "bones"];
          return function (e) {
            var t = i.exec(e);
            if (!t)
              throw new Error("PropertyBinding: Cannot parse trackName: " + e);
            var n = {
                nodeName: t[2],
                objectName: t[3],
                objectIndex: t[4],
                propertyName: t[5],
                propertyIndex: t[6],
              },
              r = n.nodeName && n.nodeName.lastIndexOf(".");
            if (void 0 !== r && -1 !== r) {
              var a = n.nodeName.substring(r + 1);
              -1 !== o.indexOf(a) &&
                ((n.nodeName = n.nodeName.substring(0, r)), (n.objectName = a));
            }
            if (null === n.propertyName || 0 === n.propertyName.length)
              throw new Error(
                "PropertyBinding: can not parse propertyName from trackName: " +
                  e
              );
            return n;
          };
        })(),
        findNode: function (e, t) {
          if (
            !t ||
            "" === t ||
            "root" === t ||
            "." === t ||
            -1 === t ||
            t === e.name ||
            t === e.uuid
          )
            return e;
          if (e.skeleton) {
            var n = (function (e) {
              for (var n = 0; n < e.bones.length; n++) {
                var r = e.bones[n];
                if (r.name === t) return r;
              }
              return null;
            })(e.skeleton);
            if (n) return n;
          }
          if (e.children) {
            var r = function (e) {
                for (var n = 0; n < e.length; n++) {
                  var i = e[n];
                  if (i.name === t || i.uuid === t) return i;
                  var o = r(i.children);
                  if (o) return o;
                }
                return null;
              },
              i = r(e.children);
            if (i) return i;
          }
          return null;
        },
      }),
      Object.assign(Qr.prototype, {
        _getValue_unavailable: function () {},
        _setValue_unavailable: function () {},
        BindingType: {
          Direct: 0,
          EntireArray: 1,
          ArrayElement: 2,
          HasFromToArray: 3,
        },
        Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 },
        GetterByBindingType: [
          function (e, t) {
            e[t] = this.node[this.propertyName];
          },
          function (e, t) {
            for (
              var n = this.resolvedProperty, r = 0, i = n.length;
              r !== i;
              ++r
            )
              e[t++] = n[r];
          },
          function (e, t) {
            e[t] = this.resolvedProperty[this.propertyIndex];
          },
          function (e, t) {
            this.resolvedProperty.toArray(e, t);
          },
        ],
        SetterByBindingTypeAndVersioning: [
          [
            function (e, t) {
              this.node[this.propertyName] = e[t];
            },
            function (e, t) {
              (this.node[this.propertyName] = e[t]),
                (this.targetObject.needsUpdate = !0);
            },
            function (e, t) {
              (this.node[this.propertyName] = e[t]),
                (this.targetObject.matrixWorldNeedsUpdate = !0);
            },
          ],
          [
            function (e, t) {
              for (
                var n = this.resolvedProperty, r = 0, i = n.length;
                r !== i;
                ++r
              )
                n[r] = e[t++];
            },
            function (e, t) {
              for (
                var n = this.resolvedProperty, r = 0, i = n.length;
                r !== i;
                ++r
              )
                n[r] = e[t++];
              this.targetObject.needsUpdate = !0;
            },
            function (e, t) {
              for (
                var n = this.resolvedProperty, r = 0, i = n.length;
                r !== i;
                ++r
              )
                n[r] = e[t++];
              this.targetObject.matrixWorldNeedsUpdate = !0;
            },
          ],
          [
            function (e, t) {
              this.resolvedProperty[this.propertyIndex] = e[t];
            },
            function (e, t) {
              (this.resolvedProperty[this.propertyIndex] = e[t]),
                (this.targetObject.needsUpdate = !0);
            },
            function (e, t) {
              (this.resolvedProperty[this.propertyIndex] = e[t]),
                (this.targetObject.matrixWorldNeedsUpdate = !0);
            },
          ],
          [
            function (e, t) {
              this.resolvedProperty.fromArray(e, t);
            },
            function (e, t) {
              this.resolvedProperty.fromArray(e, t),
                (this.targetObject.needsUpdate = !0);
            },
            function (e, t) {
              this.resolvedProperty.fromArray(e, t),
                (this.targetObject.matrixWorldNeedsUpdate = !0);
            },
          ],
        ],
        getValue: function (e, t) {
          this.bind(), this.getValue(e, t);
        },
        setValue: function (e, t) {
          this.bind(), this.setValue(e, t);
        },
        bind: function () {
          var e = this.node,
            t = this.parsedPath,
            n = t.objectName,
            r = t.propertyName,
            i = t.propertyIndex;
          if (
            (e ||
              ((e = Qr.findNode(this.rootNode, t.nodeName) || this.rootNode),
              (this.node = e)),
            (this.getValue = this._getValue_unavailable),
            (this.setValue = this._setValue_unavailable),
            !e)
          )
            return void console.error(
              "THREE.PropertyBinding: Trying to update node for track: " +
                this.path +
                " but it wasn't found."
            );
          if (n) {
            var o = t.objectIndex;
            switch (n) {
              case "materials":
                if (!e.material)
                  return void console.error(
                    "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                    this
                  );
                if (!e.material.materials)
                  return void console.error(
                    "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
                    this
                  );
                e = e.material.materials;
                break;
              case "bones":
                if (!e.skeleton)
                  return void console.error(
                    "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
                    this
                  );
                e = e.skeleton.bones;
                for (var a = 0; a < e.length; a++)
                  if (e[a].name === o) {
                    o = a;
                    break;
                  }
                break;
              default:
                if (void 0 === e[n])
                  return void console.error(
                    "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
                    this
                  );
                e = e[n];
            }
            if (void 0 !== o) {
              if (void 0 === e[o])
                return void console.error(
                  "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
                  this,
                  e
                );
              e = e[o];
            }
          }
          var s = e[r];
          if (void 0 === s) {
            var c = t.nodeName;
            return void console.error(
              "THREE.PropertyBinding: Trying to update property for track: " +
                c +
                "." +
                r +
                " but it wasn't found.",
              e
            );
          }
          var u = this.Versioning.None;
          void 0 !== e.needsUpdate
            ? ((u = this.Versioning.NeedsUpdate), (this.targetObject = e))
            : void 0 !== e.matrixWorldNeedsUpdate &&
              ((u = this.Versioning.MatrixWorldNeedsUpdate),
              (this.targetObject = e));
          var l = this.BindingType.Direct;
          if (void 0 !== i) {
            if ("morphTargetInfluences" === r) {
              if (!e.geometry)
                return void console.error(
                  "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
                  this
                );
              if (e.geometry.isBufferGeometry) {
                if (!e.geometry.morphAttributes)
                  return void console.error(
                    "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
                    this
                  );
                for (
                  var a = 0;
                  a < this.node.geometry.morphAttributes.position.length;
                  a++
                )
                  if (e.geometry.morphAttributes.position[a].name === i) {
                    i = a;
                    break;
                  }
              } else {
                if (!e.geometry.morphTargets)
                  return void console.error(
                    "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",
                    this
                  );
                for (var a = 0; a < this.node.geometry.morphTargets.length; a++)
                  if (e.geometry.morphTargets[a].name === i) {
                    i = a;
                    break;
                  }
              }
            }
            (l = this.BindingType.ArrayElement),
              (this.resolvedProperty = s),
              (this.propertyIndex = i);
          } else
            void 0 !== s.fromArray && void 0 !== s.toArray
              ? ((l = this.BindingType.HasFromToArray),
                (this.resolvedProperty = s))
              : Array.isArray(s)
              ? ((l = this.BindingType.EntireArray),
                (this.resolvedProperty = s))
              : (this.propertyName = r);
          (this.getValue = this.GetterByBindingType[l]),
            (this.setValue = this.SetterByBindingTypeAndVersioning[l][u]);
        },
        unbind: function () {
          (this.node = null),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
        },
      }),
      //!\ DECLARE ALIAS AFTER assign prototype !
      Object.assign(Qr.prototype, {
        _getValue_unbound: Qr.prototype.getValue,
        _setValue_unbound: Qr.prototype.setValue,
      }),
      Object.assign($r.prototype, {
        isAnimationObjectGroup: !0,
        add: function (e) {
          for (
            var t = this._objects,
              n = t.length,
              r = this.nCachedObjects_,
              i = this._indicesByUUID,
              o = this._paths,
              a = this._parsedPaths,
              s = this._bindings,
              c = s.length,
              u = 0,
              l = arguments.length;
            u !== l;
            ++u
          ) {
            var h = arguments[u],
              p = h.uuid,
              d = i[p],
              f = void 0;
            if (void 0 === d) {
              (d = n++), (i[p] = d), t.push(h);
              for (var m = 0, v = c; m !== v; ++m)
                s[m].push(new Qr(h, o[m], a[m]));
            } else if (d < r) {
              f = t[d];
              var g = --r,
                y = t[g];
              (i[y.uuid] = d), (t[d] = y), (i[p] = g), (t[g] = h);
              for (var m = 0, v = c; m !== v; ++m) {
                var _ = s[m],
                  b = _[g],
                  x = _[d];
                (_[d] = b),
                  void 0 === x && (x = new Qr(h, o[m], a[m])),
                  (_[g] = x);
              }
            } else
              t[d] !== f &&
                console.error(
                  "THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes."
                );
          }
          this.nCachedObjects_ = r;
        },
        remove: function (e) {
          for (
            var t = this._objects,
              n = this.nCachedObjects_,
              r = this._indicesByUUID,
              i = this._bindings,
              o = i.length,
              a = 0,
              s = arguments.length;
            a !== s;
            ++a
          ) {
            var c = arguments[a],
              u = c.uuid,
              l = r[u];
            if (void 0 !== l && l >= n) {
              var h = n++,
                p = t[h];
              (r[p.uuid] = l), (t[l] = p), (r[u] = h), (t[h] = c);
              for (var d = 0, f = o; d !== f; ++d) {
                var m = i[d],
                  v = m[h],
                  g = m[l];
                (m[l] = v), (m[h] = g);
              }
            }
          }
          this.nCachedObjects_ = n;
        },
        uncache: function (e) {
          for (
            var t = this._objects,
              n = t.length,
              r = this.nCachedObjects_,
              i = this._indicesByUUID,
              o = this._bindings,
              a = o.length,
              s = 0,
              c = arguments.length;
            s !== c;
            ++s
          ) {
            var u = arguments[s],
              l = u.uuid,
              h = i[l];
            if (void 0 !== h)
              if ((delete i[l], h < r)) {
                var p = --r,
                  d = t[p],
                  f = --n,
                  m = t[f];
                (i[d.uuid] = h),
                  (t[h] = d),
                  (i[m.uuid] = p),
                  (t[p] = m),
                  t.pop();
                for (var v = 0, g = a; v !== g; ++v) {
                  var y = o[v],
                    _ = y[p],
                    b = y[f];
                  (y[h] = _), (y[p] = b), y.pop();
                }
              } else {
                var f = --n,
                  m = t[f];
                (i[m.uuid] = h), (t[h] = m), t.pop();
                for (var v = 0, g = a; v !== g; ++v) {
                  var y = o[v];
                  (y[h] = y[f]), y.pop();
                }
              }
          }
          this.nCachedObjects_ = r;
        },
        subscribe_: function (e, t) {
          var n = this._bindingsIndicesByPath,
            r = n[e],
            i = this._bindings;
          if (void 0 !== r) return i[r];
          var o = this._paths,
            a = this._parsedPaths,
            s = this._objects,
            c = s.length,
            u = this.nCachedObjects_,
            l = new Array(c);
          (r = i.length), (n[e] = r), o.push(e), a.push(t), i.push(l);
          for (var h = u, p = s.length; h !== p; ++h) {
            var d = s[h];
            l[h] = new Qr(d, e, t);
          }
          return l;
        },
        unsubscribe_: function (e) {
          var t = this._bindingsIndicesByPath,
            n = t[e];
          if (void 0 !== n) {
            var r = this._paths,
              i = this._parsedPaths,
              o = this._bindings,
              a = o.length - 1,
              s = o[a];
            (t[e[a]] = n),
              (o[n] = s),
              o.pop(),
              (i[n] = i[a]),
              i.pop(),
              (r[n] = r[a]),
              r.pop();
          }
        },
      }),
      Object.assign(ei.prototype, {
        play: function () {
          return this._mixer._activateAction(this), this;
        },
        stop: function () {
          return this._mixer._deactivateAction(this), this.reset();
        },
        reset: function () {
          return (
            (this.paused = !1),
            (this.enabled = !0),
            (this.time = 0),
            (this._loopCount = -1),
            (this._startTime = null),
            this.stopFading().stopWarping()
          );
        },
        isRunning: function () {
          return (
            this.enabled &&
            !this.paused &&
            0 !== this.timeScale &&
            null === this._startTime &&
            this._mixer._isActiveAction(this)
          );
        },
        isScheduled: function () {
          return this._mixer._isActiveAction(this);
        },
        startAt: function (e) {
          return (this._startTime = e), this;
        },
        setLoop: function (e, t) {
          return (this.loop = e), (this.repetitions = t), this;
        },
        setEffectiveWeight: function (e) {
          return (
            (this.weight = e),
            (this._effectiveWeight = this.enabled ? e : 0),
            this.stopFading()
          );
        },
        getEffectiveWeight: function () {
          return this._effectiveWeight;
        },
        fadeIn: function (e) {
          return this._scheduleFading(e, 0, 1);
        },
        fadeOut: function (e) {
          return this._scheduleFading(e, 1, 0);
        },
        crossFadeFrom: function (e, t, n) {
          if ((e.fadeOut(t), this.fadeIn(t), n)) {
            var r = this._clip.duration,
              i = e._clip.duration,
              o = i / r,
              a = r / i;
            e.warp(1, o, t), this.warp(a, 1, t);
          }
          return this;
        },
        crossFadeTo: function (e, t, n) {
          return e.crossFadeFrom(this, t, n);
        },
        stopFading: function () {
          var e = this._weightInterpolant;
          return (
            null !== e &&
              ((this._weightInterpolant = null),
              this._mixer._takeBackControlInterpolant(e)),
            this
          );
        },
        setEffectiveTimeScale: function (e) {
          return (
            (this.timeScale = e),
            (this._effectiveTimeScale = this.paused ? 0 : e),
            this.stopWarping()
          );
        },
        getEffectiveTimeScale: function () {
          return this._effectiveTimeScale;
        },
        setDuration: function (e) {
          return (this.timeScale = this._clip.duration / e), this.stopWarping();
        },
        syncWith: function (e) {
          return (
            (this.time = e.time),
            (this.timeScale = e.timeScale),
            this.stopWarping()
          );
        },
        halt: function (e) {
          return this.warp(this._effectiveTimeScale, 0, e);
        },
        warp: function (e, t, n) {
          var r = this._mixer,
            i = r.time,
            o = this._timeScaleInterpolant,
            a = this.timeScale;
          null === o &&
            ((o = r._lendControlInterpolant()),
            (this._timeScaleInterpolant = o));
          var s = o.parameterPositions,
            c = o.sampleValues;
          return (
            (s[0] = i), (s[1] = i + n), (c[0] = e / a), (c[1] = t / a), this
          );
        },
        stopWarping: function () {
          var e = this._timeScaleInterpolant;
          return (
            null !== e &&
              ((this._timeScaleInterpolant = null),
              this._mixer._takeBackControlInterpolant(e)),
            this
          );
        },
        getMixer: function () {
          return this._mixer;
        },
        getClip: function () {
          return this._clip;
        },
        getRoot: function () {
          return this._localRoot || this._mixer._root;
        },
        _update: function (e, t, n, r) {
          if (!this.enabled) return void this._updateWeight(e);
          var i = this._startTime;
          if (null !== i) {
            var o = (e - i) * n;
            if (o < 0 || 0 === n) return;
            (this._startTime = null), (t = n * o);
          }
          t *= this._updateTimeScale(e);
          var a = this._updateTime(t),
            s = this._updateWeight(e);
          if (s > 0)
            for (
              var c = this._interpolants,
                u = this._propertyBindings,
                l = 0,
                h = c.length;
              l !== h;
              ++l
            )
              c[l].evaluate(a), u[l].accumulate(r, s);
        },
        _updateWeight: function (e) {
          var t = 0;
          if (this.enabled) {
            t = this.weight;
            var n = this._weightInterpolant;
            if (null !== n) {
              var r = n.evaluate(e)[0];
              (t *= r),
                e > n.parameterPositions[1] &&
                  (this.stopFading(), 0 === r && (this.enabled = !1));
            }
          }
          return (this._effectiveWeight = t), t;
        },
        _updateTimeScale: function (e) {
          var t = 0;
          if (!this.paused) {
            t = this.timeScale;
            var n = this._timeScaleInterpolant;
            if (null !== n) {
              (t *= n.evaluate(e)[0]),
                e > n.parameterPositions[1] &&
                  (this.stopWarping(),
                  0 === t ? (this.paused = !0) : (this.timeScale = t));
            }
          }
          return (this._effectiveTimeScale = t), t;
        },
        _updateTime: function (e) {
          var t = this.time + e;
          if (0 === e) return t;
          var n = this._clip.duration,
            r = this.loop,
            i = this._loopCount;
          if (r === ls) {
            -1 === i && ((this._loopCount = 0), this._setEndings(!0, !0, !1));
            e: {
              if (t >= n) t = n;
              else {
                if (!(t < 0)) break e;
                t = 0;
              }
              this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1),
                this._mixer.dispatchEvent({
                  type: "finished",
                  action: this,
                  direction: e < 0 ? -1 : 1,
                });
            }
          } else {
            var o = r === ps;
            if (
              (-1 === i &&
                (e >= 0
                  ? ((i = 0), this._setEndings(!0, 0 === this.repetitions, o))
                  : this._setEndings(0 === this.repetitions, !0, o)),
              t >= n || t < 0)
            ) {
              var a = Math.floor(t / n);
              (t -= n * a), (i += Math.abs(a));
              var s = this.repetitions - i;
              if (s < 0)
                this.clampWhenFinished
                  ? (this.paused = !0)
                  : (this.enabled = !1),
                  (t = e > 0 ? n : 0),
                  this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e > 0 ? 1 : -1,
                  });
              else {
                if (0 === s) {
                  var c = e < 0;
                  this._setEndings(c, !c, o);
                } else this._setEndings(!1, !1, o);
                (this._loopCount = i),
                  this._mixer.dispatchEvent({
                    type: "loop",
                    action: this,
                    loopDelta: a,
                  });
              }
            }
            if (o && 1 == (1 & i)) return (this.time = t), n - t;
          }
          return (this.time = t), t;
        },
        _setEndings: function (e, t, n) {
          var r = this._interpolantSettings;
          n
            ? ((r.endingStart = gs), (r.endingEnd = gs))
            : ((r.endingStart = e ? (this.zeroSlopeAtStart ? gs : vs) : ys),
              (r.endingEnd = t ? (this.zeroSlopeAtEnd ? gs : vs) : ys));
        },
        _scheduleFading: function (e, t, n) {
          var r = this._mixer,
            i = r.time,
            o = this._weightInterpolant;
          null === o &&
            ((o = r._lendControlInterpolant()), (this._weightInterpolant = o));
          var a = o.parameterPositions,
            s = o.sampleValues;
          return (a[0] = i), (s[0] = t), (a[1] = i + e), (s[1] = n), this;
        },
      }),
      Object.assign(ti.prototype, r.prototype, {
        _bindAction: function (e, t) {
          var n = e._localRoot || this._root,
            r = e._clip.tracks,
            i = r.length,
            o = e._propertyBindings,
            a = e._interpolants,
            s = n.uuid,
            c = this._bindingsByRootAndName,
            u = c[s];
          void 0 === u && ((u = {}), (c[s] = u));
          for (var l = 0; l !== i; ++l) {
            var h = r[l],
              p = h.name,
              d = u[p];
            if (void 0 !== d) o[l] = d;
            else {
              if (void 0 !== (d = o[l])) {
                null === d._cacheIndex &&
                  (++d.referenceCount, this._addInactiveBinding(d, s, p));
                continue;
              }
              var f = t && t._propertyBindings[l].binding.parsedPath;
              (d = new Kr(
                Qr.create(n, p, f),
                h.ValueTypeName,
                h.getValueSize()
              )),
                ++d.referenceCount,
                this._addInactiveBinding(d, s, p),
                (o[l] = d);
            }
            a[l].resultBuffer = d.buffer;
          }
        },
        _activateAction: function (e) {
          if (!this._isActiveAction(e)) {
            if (null === e._cacheIndex) {
              var t = (e._localRoot || this._root).uuid,
                n = e._clip.uuid,
                r = this._actionsByClip[n];
              this._bindAction(e, r && r.knownActions[0]),
                this._addInactiveAction(e, n, t);
            }
            for (
              var i = e._propertyBindings, o = 0, a = i.length;
              o !== a;
              ++o
            ) {
              var s = i[o];
              0 == s.useCount++ &&
                (this._lendBinding(s), s.saveOriginalState());
            }
            this._lendAction(e);
          }
        },
        _deactivateAction: function (e) {
          if (this._isActiveAction(e)) {
            for (
              var t = e._propertyBindings, n = 0, r = t.length;
              n !== r;
              ++n
            ) {
              var i = t[n];
              0 == --i.useCount &&
                (i.restoreOriginalState(), this._takeBackBinding(i));
            }
            this._takeBackAction(e);
          }
        },
        _initMemoryManager: function () {
          (this._actions = []),
            (this._nActiveActions = 0),
            (this._actionsByClip = {}),
            (this._bindings = []),
            (this._nActiveBindings = 0),
            (this._bindingsByRootAndName = {}),
            (this._controlInterpolants = []),
            (this._nActiveControlInterpolants = 0);
          var e = this;
          this.stats = {
            actions: {
              get total() {
                return e._actions.length;
              },
              get inUse() {
                return e._nActiveActions;
              },
            },
            bindings: {
              get total() {
                return e._bindings.length;
              },
              get inUse() {
                return e._nActiveBindings;
              },
            },
            controlInterpolants: {
              get total() {
                return e._controlInterpolants.length;
              },
              get inUse() {
                return e._nActiveControlInterpolants;
              },
            },
          };
        },
        _isActiveAction: function (e) {
          var t = e._cacheIndex;
          return null !== t && t < this._nActiveActions;
        },
        _addInactiveAction: function (e, t, n) {
          var r = this._actions,
            i = this._actionsByClip,
            o = i[t];
          if (void 0 === o)
            (o = { knownActions: [e], actionByRoot: {} }),
              (e._byClipCacheIndex = 0),
              (i[t] = o);
          else {
            var a = o.knownActions;
            (e._byClipCacheIndex = a.length), a.push(e);
          }
          (e._cacheIndex = r.length), r.push(e), (o.actionByRoot[n] = e);
        },
        _removeInactiveAction: function (e) {
          var t = this._actions,
            n = t[t.length - 1],
            r = e._cacheIndex;
          (n._cacheIndex = r), (t[r] = n), t.pop(), (e._cacheIndex = null);
          var i = e._clip.uuid,
            o = this._actionsByClip,
            a = o[i],
            s = a.knownActions,
            c = s[s.length - 1],
            u = e._byClipCacheIndex;
          (c._byClipCacheIndex = u),
            (s[u] = c),
            s.pop(),
            (e._byClipCacheIndex = null),
            delete a.actionByRoot[(e._localRoot || this._root).uuid],
            0 === s.length && delete o[i],
            this._removeInactiveBindingsForAction(e);
        },
        _removeInactiveBindingsForAction: function (e) {
          for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
            var i = t[n];
            0 == --i.referenceCount && this._removeInactiveBinding(i);
          }
        },
        _lendAction: function (e) {
          var t = this._actions,
            n = e._cacheIndex,
            r = this._nActiveActions++,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        },
        _takeBackAction: function (e) {
          var t = this._actions,
            n = e._cacheIndex,
            r = --this._nActiveActions,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        },
        _addInactiveBinding: function (e, t, n) {
          var r = this._bindingsByRootAndName,
            i = r[t],
            o = this._bindings;
          void 0 === i && ((i = {}), (r[t] = i)),
            (i[n] = e),
            (e._cacheIndex = o.length),
            o.push(e);
        },
        _removeInactiveBinding: function (e) {
          var t = this._bindings,
            n = e.binding,
            r = n.rootNode.uuid,
            i = n.path,
            o = this._bindingsByRootAndName,
            a = o[r],
            s = t[t.length - 1],
            c = e._cacheIndex;
          (s._cacheIndex = c), (t[c] = s), t.pop(), delete a[i];
          e: {
            for (var u in a) break e;
            delete o[r];
          }
        },
        _lendBinding: function (e) {
          var t = this._bindings,
            n = e._cacheIndex,
            r = this._nActiveBindings++,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        },
        _takeBackBinding: function (e) {
          var t = this._bindings,
            n = e._cacheIndex,
            r = --this._nActiveBindings,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        },
        _lendControlInterpolant: function () {
          var e = this._controlInterpolants,
            t = this._nActiveControlInterpolants++,
            n = e[t];
          return (
            void 0 === n &&
              ((n = new ir(
                new Float32Array(2),
                new Float32Array(2),
                1,
                this._controlInterpolantsResultBuffer
              )),
              (n.__cacheIndex = t),
              (e[t] = n)),
            n
          );
        },
        _takeBackControlInterpolant: function (e) {
          var t = this._controlInterpolants,
            n = e.__cacheIndex,
            r = --this._nActiveControlInterpolants,
            i = t[r];
          (e.__cacheIndex = r), (t[r] = e), (i.__cacheIndex = n), (t[n] = i);
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function (e, t) {
          var n = t || this._root,
            r = n.uuid,
            i = "string" == typeof e ? mr.findByName(n, e) : e,
            o = null !== i ? i.uuid : e,
            a = this._actionsByClip[o],
            s = null;
          if (void 0 !== a) {
            var c = a.actionByRoot[r];
            if (void 0 !== c) return c;
            (s = a.knownActions[0]), null === i && (i = s._clip);
          }
          if (null === i) return null;
          var u = new ei(this, i, t);
          return this._bindAction(u, s), this._addInactiveAction(u, o, r), u;
        },
        existingAction: function (e, t) {
          var n = t || this._root,
            r = n.uuid,
            i = "string" == typeof e ? mr.findByName(n, e) : e,
            o = i ? i.uuid : e,
            a = this._actionsByClip[o];
          return void 0 !== a ? a.actionByRoot[r] || null : null;
        },
        stopAllAction: function () {
          var e = this._actions,
            t = this._nActiveActions,
            n = this._bindings,
            r = this._nActiveBindings;
          (this._nActiveActions = 0), (this._nActiveBindings = 0);
          for (var i = 0; i !== t; ++i) e[i].reset();
          for (var i = 0; i !== r; ++i) n[i].useCount = 0;
          return this;
        },
        update: function (e) {
          e *= this.timeScale;
          for (
            var t = this._actions,
              n = this._nActiveActions,
              r = (this.time += e),
              i = Math.sign(e),
              o = (this._accuIndex ^= 1),
              a = 0;
            a !== n;
            ++a
          ) {
            t[a]._update(r, e, i, o);
          }
          for (
            var s = this._bindings, c = this._nActiveBindings, a = 0;
            a !== c;
            ++a
          )
            s[a].apply(o);
          return this;
        },
        getRoot: function () {
          return this._root;
        },
        uncacheClip: function (e) {
          var t = this._actions,
            n = e.uuid,
            r = this._actionsByClip,
            i = r[n];
          if (void 0 !== i) {
            for (var o = i.knownActions, a = 0, s = o.length; a !== s; ++a) {
              var c = o[a];
              this._deactivateAction(c);
              var u = c._cacheIndex,
                l = t[t.length - 1];
              (c._cacheIndex = null),
                (c._byClipCacheIndex = null),
                (l._cacheIndex = u),
                (t[u] = l),
                t.pop(),
                this._removeInactiveBindingsForAction(c);
            }
            delete r[n];
          }
        },
        uncacheRoot: function (e) {
          var t = e.uuid,
            n = this._actionsByClip;
          for (var r in n) {
            var i = n[r].actionByRoot,
              o = i[t];
            void 0 !== o &&
              (this._deactivateAction(o), this._removeInactiveAction(o));
          }
          var a = this._bindingsByRootAndName,
            s = a[t];
          if (void 0 !== s)
            for (var c in s) {
              var u = s[c];
              u.restoreOriginalState(), this._removeInactiveBinding(u);
            }
        },
        uncacheAction: function (e, t) {
          var n = this.existingAction(e, t);
          null !== n &&
            (this._deactivateAction(n), this._removeInactiveAction(n));
        },
      }),
      (ni.prototype.clone = function () {
        return new ni(
          void 0 === this.value.clone ? this.value : this.value.clone()
        );
      }),
      (ri.prototype = Object.assign(Object.create(Pe.prototype), {
        constructor: ri,
        isInstancedBufferGeometry: !0,
        addGroup: function (e, t, n) {
          this.groups.push({ start: e, count: t, materialIndex: n });
        },
        copy: function (e) {
          var t = e.index;
          null !== t && this.setIndex(t.clone());
          var n = e.attributes;
          for (var r in n) {
            var i = n[r];
            this.addAttribute(r, i.clone());
          }
          for (var o = e.groups, a = 0, s = o.length; a < s; a++) {
            var c = o[a];
            this.addGroup(c.start, c.count, c.materialIndex);
          }
          return this;
        },
      })),
      Object.defineProperties(ii.prototype, {
        count: {
          get: function () {
            return this.data.count;
          },
        },
        array: {
          get: function () {
            return this.data.array;
          },
        },
      }),
      Object.assign(ii.prototype, {
        isInterleavedBufferAttribute: !0,
        setX: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset] = t), this
          );
        },
        setY: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 1] = t), this
          );
        },
        setZ: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 2] = t), this
          );
        },
        setW: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 3] = t), this
          );
        },
        getX: function (e) {
          return this.data.array[e * this.data.stride + this.offset];
        },
        getY: function (e) {
          return this.data.array[e * this.data.stride + this.offset + 1];
        },
        getZ: function (e) {
          return this.data.array[e * this.data.stride + this.offset + 2];
        },
        getW: function (e) {
          return this.data.array[e * this.data.stride + this.offset + 3];
        },
        setXY: function (e, t, n) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            this
          );
        },
        setXYZ: function (e, t, n, r) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = r),
            this
          );
        },
        setXYZW: function (e, t, n, r, i) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = r),
            (this.data.array[e + 3] = i),
            this
          );
        },
      }),
      Object.defineProperty(oi.prototype, "needsUpdate", {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      Object.assign(oi.prototype, {
        isInterleavedBuffer: !0,
        setArray: function (e) {
          if (Array.isArray(e))
            throw new TypeError(
              "THREE.BufferAttribute: array should be a Typed Array."
            );
          (this.count = void 0 !== e ? e.length / this.stride : 0),
            (this.array = e);
        },
        setDynamic: function (e) {
          return (this.dynamic = e), this;
        },
        copy: function (e) {
          return (
            (this.array = new e.array.constructor(e.array)),
            (this.count = e.count),
            (this.stride = e.stride),
            (this.dynamic = e.dynamic),
            this
          );
        },
        copyAt: function (e, t, n) {
          (e *= this.stride), (n *= t.stride);
          for (var r = 0, i = this.stride; r < i; r++)
            this.array[e + r] = t.array[n + r];
          return this;
        },
        set: function (e, t) {
          return void 0 === t && (t = 0), this.array.set(e, t), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        onUpload: function (e) {
          return (this.onUploadCallback = e), this;
        },
      }),
      (ai.prototype = Object.assign(Object.create(oi.prototype), {
        constructor: ai,
        isInstancedInterleavedBuffer: !0,
        copy: function (e) {
          return (
            oi.prototype.copy.call(this, e),
            (this.meshPerAttribute = e.meshPerAttribute),
            this
          );
        },
      })),
      (si.prototype = Object.assign(Object.create(_e.prototype), {
        constructor: si,
        isInstancedBufferAttribute: !0,
        copy: function (e) {
          return (
            _e.prototype.copy.call(this, e),
            (this.meshPerAttribute = e.meshPerAttribute),
            this
          );
        },
      })),
      Object.assign(ci.prototype, {
        linePrecision: 1,
        set: function (e, t) {
          this.ray.set(e, t);
        },
        setFromCamera: function (e, t) {
          t && t.isPerspectiveCamera
            ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
              this.ray.direction
                .set(e.x, e.y, 0.5)
                .unproject(t)
                .sub(this.ray.origin)
                .normalize())
            : t && t.isOrthographicCamera
            ? (this.ray.origin
                .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                .unproject(t),
              this.ray.direction
                .set(0, 0, -1)
                .transformDirection(t.matrixWorld))
            : console.error("THREE.Raycaster: Unsupported camera type.");
        },
        intersectObject: function (e, t) {
          var n = [];
          return li(e, this, n, t), n.sort(ui), n;
        },
        intersectObjects: function (e, t) {
          var n = [];
          if (!1 === Array.isArray(e))
            return (
              console.warn(
                "THREE.Raycaster.intersectObjects: objects is not an Array."
              ),
              n
            );
          for (var r = 0, i = e.length; r < i; r++) li(e[r], this, n, t);
          return n.sort(ui), n;
        },
      }),
      Object.assign(hi.prototype, {
        start: function () {
          (this.startTime = (
            "undefined" == typeof performance ? Date : performance
          ).now()),
            (this.oldTime = this.startTime),
            (this.elapsedTime = 0),
            (this.running = !0);
        },
        stop: function () {
          this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
        },
        getElapsedTime: function () {
          return this.getDelta(), this.elapsedTime;
        },
        getDelta: function () {
          var e = 0;
          if (this.autoStart && !this.running) return this.start(), 0;
          if (this.running) {
            var t = (
              "undefined" == typeof performance ? Date : performance
            ).now();
            (e = (t - this.oldTime) / 1e3),
              (this.oldTime = t),
              (this.elapsedTime += e);
          }
          return e;
        },
      }),
      Object.assign(pi.prototype, {
        set: function (e, t, n) {
          return (this.radius = e), (this.phi = t), (this.theta = n), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.radius = e.radius),
            (this.phi = e.phi),
            (this.theta = e.theta),
            this
          );
        },
        makeSafe: function () {
          return (
            (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))),
            this
          );
        },
        setFromVector3: function (e) {
          return (
            (this.radius = e.length()),
            0 === this.radius
              ? ((this.theta = 0), (this.phi = 0))
              : ((this.theta = Math.atan2(e.x, e.z)),
                (this.phi = Math.acos(Os.clamp(e.y / this.radius, -1, 1)))),
            this
          );
        },
      }),
      Object.assign(di.prototype, {
        set: function (e, t, n) {
          return (this.radius = e), (this.theta = t), (this.y = n), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.radius = e.radius),
            (this.theta = e.theta),
            (this.y = e.y),
            this
          );
        },
        setFromVector3: function (e) {
          return (
            (this.radius = Math.sqrt(e.x * e.x + e.z * e.z)),
            (this.theta = Math.atan2(e.x, e.z)),
            (this.y = e.y),
            this
          );
        },
      }),
      (fi.prototype = Object.create(pe.prototype)),
      (fi.prototype.constructor = fi),
      (fi.prototype.isImmediateRenderObject = !0),
      (mi.prototype = Object.create(kt.prototype)),
      (mi.prototype.constructor = mi),
      (mi.prototype.update = (function () {
        var e = new l(),
          t = new l(),
          n = new oe();
        return function () {
          var r = ["a", "b", "c"];
          this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
          var i = this.object.matrixWorld,
            o = this.geometry.attributes.position,
            a = this.object.geometry;
          if (a && a.isGeometry)
            for (
              var s = a.vertices, c = a.faces, u = 0, l = 0, h = c.length;
              l < h;
              l++
            )
              for (
                var p = c[l], d = 0, f = p.vertexNormals.length;
                d < f;
                d++
              ) {
                var m = s[p[r[d]]],
                  v = p.vertexNormals[d];
                e.copy(m).applyMatrix4(i),
                  t
                    .copy(v)
                    .applyMatrix3(n)
                    .normalize()
                    .multiplyScalar(this.size)
                    .add(e),
                  o.setXYZ(u, e.x, e.y, e.z),
                  (u += 1),
                  o.setXYZ(u, t.x, t.y, t.z),
                  (u += 1);
              }
          else if (a && a.isBufferGeometry)
            for (
              var g = a.attributes.position,
                y = a.attributes.normal,
                u = 0,
                d = 0,
                f = g.count;
              d < f;
              d++
            )
              e.set(g.getX(d), g.getY(d), g.getZ(d)).applyMatrix4(i),
                t.set(y.getX(d), y.getY(d), y.getZ(d)),
                t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),
                o.setXYZ(u, e.x, e.y, e.z),
                (u += 1),
                o.setXYZ(u, t.x, t.y, t.z),
                (u += 1);
          o.needsUpdate = !0;
        };
      })()),
      (vi.prototype = Object.create(pe.prototype)),
      (vi.prototype.constructor = vi),
      (vi.prototype.dispose = function () {
        this.cone.geometry.dispose(), this.cone.material.dispose();
      }),
      (vi.prototype.update = (function () {
        var e = new l(),
          t = new l();
        return function () {
          this.light.updateMatrixWorld();
          var n = this.light.distance ? this.light.distance : 1e3,
            r = n * Math.tan(this.light.angle);
          this.cone.scale.set(r, r, n),
            e.setFromMatrixPosition(this.light.matrixWorld),
            t.setFromMatrixPosition(this.light.target.matrixWorld),
            this.cone.lookAt(t.sub(e)),
            void 0 !== this.color
              ? this.cone.material.color.set(this.color)
              : this.cone.material.color.copy(this.light.color);
        };
      })()),
      (yi.prototype = Object.create(kt.prototype)),
      (yi.prototype.constructor = yi),
      (yi.prototype.onBeforeRender = (function () {
        var e = new l(),
          t = new h(),
          n = new h();
        return function () {
          var r = this.bones,
            i = this.geometry,
            o = i.getAttribute("position");
          n.getInverse(this.root.matrixWorld);
          for (var a = 0, s = 0; a < r.length; a++) {
            var c = r[a];
            c.parent &&
              c.parent.isBone &&
              (t.multiplyMatrices(n, c.matrixWorld),
              e.setFromMatrixPosition(t),
              o.setXYZ(s, e.x, e.y, e.z),
              t.multiplyMatrices(n, c.parent.matrixWorld),
              e.setFromMatrixPosition(t),
              o.setXYZ(s + 1, e.x, e.y, e.z),
              (s += 2));
          }
          i.getAttribute("position").needsUpdate = !0;
        };
      })()),
      (_i.prototype = Object.create(Be.prototype)),
      (_i.prototype.constructor = _i),
      (_i.prototype.dispose = function () {
        this.geometry.dispose(), this.material.dispose();
      }),
      (_i.prototype.update = function () {
        void 0 !== this.color
          ? this.material.color.set(this.color)
          : this.material.color.copy(this.light.color);
      }),
      (bi.prototype = Object.create(pe.prototype)),
      (bi.prototype.constructor = bi),
      (bi.prototype.dispose = function () {
        this.children[0].geometry.dispose(),
          this.children[0].material.dispose();
      }),
      (bi.prototype.update = function () {
        var e = 0.5 * this.light.width,
          t = 0.5 * this.light.height,
          n = this.line.geometry.attributes.position,
          r = n.array;
        (r[0] = e),
          (r[1] = -t),
          (r[2] = 0),
          (r[3] = e),
          (r[4] = t),
          (r[5] = 0),
          (r[6] = -e),
          (r[7] = t),
          (r[8] = 0),
          (r[9] = -e),
          (r[10] = -t),
          (r[11] = 0),
          (r[12] = e),
          (r[13] = -t),
          (r[14] = 0),
          (n.needsUpdate = !0),
          void 0 !== this.color
            ? this.line.material.color.set(this.color)
            : this.line.material.color.copy(this.light.color);
      }),
      (xi.prototype = Object.create(pe.prototype)),
      (xi.prototype.constructor = xi),
      (xi.prototype.dispose = function () {
        this.children[0].geometry.dispose(),
          this.children[0].material.dispose();
      }),
      (xi.prototype.update = (function () {
        var e = new l(),
          t = new Y(),
          n = new Y();
        return function () {
          var r = this.children[0];
          if (void 0 !== this.color) this.material.color.set(this.color);
          else {
            var i = r.geometry.getAttribute("color");
            t.copy(this.light.color), n.copy(this.light.groundColor);
            for (var o = 0, a = i.count; o < a; o++) {
              var s = o < a / 2 ? t : n;
              i.setXYZ(o, s.r, s.g, s.b);
            }
            i.needsUpdate = !0;
          }
          r.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate());
        };
      })()),
      (Ei.prototype = Object.create(kt.prototype)),
      (Ei.prototype.constructor = Ei),
      (wi.prototype = Object.create(kt.prototype)),
      (wi.prototype.constructor = wi),
      (Mi.prototype = Object.create(kt.prototype)),
      (Mi.prototype.constructor = Mi),
      (Mi.prototype.update = (function () {
        var e = new l(),
          t = new l(),
          n = new oe();
        return function () {
          this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
          for (
            var r = this.object.matrixWorld,
              i = this.geometry.attributes.position,
              o = this.object.geometry,
              a = o.vertices,
              s = o.faces,
              c = 0,
              u = 0,
              l = s.length;
            u < l;
            u++
          ) {
            var h = s[u],
              p = h.normal;
            e
              .copy(a[h.a])
              .add(a[h.b])
              .add(a[h.c])
              .divideScalar(3)
              .applyMatrix4(r),
              t
                .copy(p)
                .applyMatrix3(n)
                .normalize()
                .multiplyScalar(this.size)
                .add(e),
              i.setXYZ(c, e.x, e.y, e.z),
              (c += 1),
              i.setXYZ(c, t.x, t.y, t.z),
              (c += 1);
          }
          i.needsUpdate = !0;
        };
      })()),
      (Ti.prototype = Object.create(pe.prototype)),
      (Ti.prototype.constructor = Ti),
      (Ti.prototype.dispose = function () {
        this.lightPlane.geometry.dispose(),
          this.lightPlane.material.dispose(),
          this.targetLine.geometry.dispose(),
          this.targetLine.material.dispose();
      }),
      (Ti.prototype.update = (function () {
        var e = new l(),
          t = new l(),
          n = new l();
        return function () {
          e.setFromMatrixPosition(this.light.matrixWorld),
            t.setFromMatrixPosition(this.light.target.matrixWorld),
            n.subVectors(t, e),
            this.lightPlane.lookAt(n),
            void 0 !== this.color
              ? (this.lightPlane.material.color.set(this.color),
                this.targetLine.material.color.set(this.color))
              : (this.lightPlane.material.color.copy(this.light.color),
                this.targetLine.material.color.copy(this.light.color)),
            this.targetLine.lookAt(n),
            (this.targetLine.scale.z = n.length());
        };
      })()),
      (Si.prototype = Object.create(kt.prototype)),
      (Si.prototype.constructor = Si),
      (Si.prototype.update = (function () {
        function e(e, o, a, s) {
          r.set(o, a, s).unproject(i);
          var c = n[e];
          if (void 0 !== c)
            for (
              var u = t.getAttribute("position"), l = 0, h = c.length;
              l < h;
              l++
            )
              u.setXYZ(c[l], r.x, r.y, r.z);
        }
        var t,
          n,
          r = new l(),
          i = new de();
        return function () {
          (t = this.geometry), (n = this.pointMap);
          i.projectionMatrix.copy(this.camera.projectionMatrix),
            e("c", 0, 0, -1),
            e("t", 0, 0, 1),
            e("n1", -1, -1, -1),
            e("n2", 1, -1, -1),
            e("n3", -1, 1, -1),
            e("n4", 1, 1, -1),
            e("f1", -1, -1, 1),
            e("f2", 1, -1, 1),
            e("f3", -1, 1, 1),
            e("f4", 1, 1, 1),
            e("u1", 0.7, 1.1, -1),
            e("u2", -0.7, 1.1, -1),
            e("u3", 0, 2, -1),
            e("cf1", -1, 0, 1),
            e("cf2", 1, 0, 1),
            e("cf3", 0, -1, 1),
            e("cf4", 0, 1, 1),
            e("cn1", -1, 0, -1),
            e("cn2", 1, 0, -1),
            e("cn3", 0, -1, -1),
            e("cn4", 0, 1, -1),
            (t.getAttribute("position").needsUpdate = !0);
        };
      })()),
      (Ni.prototype = Object.create(kt.prototype)),
      (Ni.prototype.constructor = Ni),
      (Ni.prototype.update = (function () {
        var e = new re();
        return function (t) {
          if (
            (void 0 !== t &&
              console.warn(
                "THREE.BoxHelper: .update() has no longer arguments."
              ),
            void 0 !== this.object && e.setFromObject(this.object),
            !e.isEmpty())
          ) {
            var n = e.min,
              r = e.max,
              i = this.geometry.attributes.position,
              o = i.array;
            (o[0] = r.x),
              (o[1] = r.y),
              (o[2] = r.z),
              (o[3] = n.x),
              (o[4] = r.y),
              (o[5] = r.z),
              (o[6] = n.x),
              (o[7] = n.y),
              (o[8] = r.z),
              (o[9] = r.x),
              (o[10] = n.y),
              (o[11] = r.z),
              (o[12] = r.x),
              (o[13] = r.y),
              (o[14] = n.z),
              (o[15] = n.x),
              (o[16] = r.y),
              (o[17] = n.z),
              (o[18] = n.x),
              (o[19] = n.y),
              (o[20] = n.z),
              (o[21] = r.x),
              (o[22] = n.y),
              (o[23] = n.z),
              (i.needsUpdate = !0),
              this.geometry.computeBoundingSphere();
          }
        };
      })()),
      (Ni.prototype.setFromObject = function (e) {
        return (this.object = e), this.update(), this;
      }),
      (Ci.prototype = Object.create(kt.prototype)),
      (Ci.prototype.constructor = Ci),
      (Ci.prototype.onBeforeRender = function () {
        var e = this.box;
        e.isEmpty() ||
          (e.getCenter(this.position),
          e.getSize(this.scale),
          this.scale.multiplyScalar(0.5));
      }),
      (Ai.prototype = Object.create(Ut.prototype)),
      (Ai.prototype.constructor = Ai),
      (Ai.prototype.onBeforeRender = function () {
        var e = -this.plane.constant;
        Math.abs(e) < 1e-8 && (e = 1e-8),
          this.scale.set(0.5 * this.size, 0.5 * this.size, e),
          this.lookAt(this.plane.normal),
          this.updateMatrixWorld();
      });
    var lc, hc;
    (Ri.prototype = Object.create(pe.prototype)),
      (Ri.prototype.constructor = Ri),
      (Ri.prototype.setDirection = (function () {
        var e,
          t = new l();
        return function (n) {
          n.y > 0.99999
            ? this.quaternion.set(0, 0, 0, 1)
            : n.y < -0.99999
            ? this.quaternion.set(1, 0, 0, 0)
            : (t.set(n.z, 0, -n.x).normalize(),
              (e = Math.acos(n.y)),
              this.quaternion.setFromAxisAngle(t, e));
        };
      })()),
      (Ri.prototype.setLength = function (e, t, n) {
        void 0 === t && (t = 0.2 * e),
          void 0 === n && (n = 0.2 * t),
          this.line.scale.set(1, Math.max(0, e - t), 1),
          this.line.updateMatrix(),
          this.cone.scale.set(n, t, n),
          (this.cone.position.y = e),
          this.cone.updateMatrix();
      }),
      (Ri.prototype.setColor = function (e) {
        this.line.material.color.copy(e), this.cone.material.color.copy(e);
      }),
      (Pi.prototype = Object.create(kt.prototype)),
      (Pi.prototype.constructor = Pi);
    var pc = new l(),
      dc = new Oi(),
      fc = new Oi(),
      mc = new Oi();
    (Di.prototype = Object.create(Pr.prototype)),
      (Di.prototype.constructor = Di),
      (Di.prototype.getPoint = function (e) {
        var t = this.points,
          n = t.length,
          r = (n - (this.closed ? 0 : 1)) * e,
          i = Math.floor(r),
          o = r - i;
        this.closed
          ? (i +=
              i > 0 ? 0 : (Math.floor(Math.abs(i) / t.length) + 1) * t.length)
          : 0 === o && i === n - 1 && ((i = n - 2), (o = 1));
        var a, s, c, u;
        if (
          (this.closed || i > 0
            ? (a = t[(i - 1) % n])
            : (pc.subVectors(t[0], t[1]).add(t[0]), (a = pc)),
          (s = t[i % n]),
          (c = t[(i + 1) % n]),
          this.closed || i + 2 < n
            ? (u = t[(i + 2) % n])
            : (pc.subVectors(t[n - 1], t[n - 2]).add(t[n - 1]), (u = pc)),
          void 0 === this.type ||
            "centripetal" === this.type ||
            "chordal" === this.type)
        ) {
          var h = "chordal" === this.type ? 0.5 : 0.25,
            p = Math.pow(a.distanceToSquared(s), h),
            d = Math.pow(s.distanceToSquared(c), h),
            f = Math.pow(c.distanceToSquared(u), h);
          d < 1e-4 && (d = 1),
            p < 1e-4 && (p = d),
            f < 1e-4 && (f = d),
            dc.initNonuniformCatmullRom(a.x, s.x, c.x, u.x, p, d, f),
            fc.initNonuniformCatmullRom(a.y, s.y, c.y, u.y, p, d, f),
            mc.initNonuniformCatmullRom(a.z, s.z, c.z, u.z, p, d, f);
        } else if ("catmullrom" === this.type) {
          var m = void 0 !== this.tension ? this.tension : 0.5;
          dc.initCatmullRom(a.x, s.x, c.x, u.x, m),
            fc.initCatmullRom(a.y, s.y, c.y, u.y, m),
            mc.initCatmullRom(a.z, s.z, c.z, u.z, m);
        }
        return new l(dc.calc(o), fc.calc(o), mc.calc(o));
      }),
      (Li.prototype = Object.create(Pr.prototype)),
      (Li.prototype.constructor = Li),
      (Li.prototype.getPoint = function (e) {
        var t = this.v0,
          n = this.v1,
          r = this.v2,
          i = this.v3;
        return new l(
          Rr(e, t.x, n.x, r.x, i.x),
          Rr(e, t.y, n.y, r.y, i.y),
          Rr(e, t.z, n.z, r.z, i.z)
        );
      }),
      (Ii.prototype = Object.create(Pr.prototype)),
      (Ii.prototype.constructor = Ii),
      (Ii.prototype.getPoint = function (e) {
        var t = this.v0,
          n = this.v1,
          r = this.v2;
        return new l(
          Tr(e, t.x, n.x, r.x),
          Tr(e, t.y, n.y, r.y),
          Tr(e, t.z, n.z, r.z)
        );
      }),
      (Ui.prototype = Object.create(Pr.prototype)),
      (Ui.prototype.constructor = Ui),
      (Ui.prototype.getPoint = function (e) {
        if (1 === e) return this.v2.clone();
        var t = new l();
        return (
          t.subVectors(this.v2, this.v1), t.multiplyScalar(e), t.add(this.v1), t
        );
      }),
      (ki.prototype = Object.create(Lr.prototype)),
      (ki.prototype.constructor = ki);
    var vc = {
        createMultiMaterialObject: function (e, t) {
          for (var n = new zt(), r = 0, i = t.length; r < i; r++)
            n.add(new Be(e, t[r]));
          return n;
        },
        detach: function (e, t, n) {
          e.applyMatrix(t.matrixWorld), t.remove(e), n.add(e);
        },
        attach: function (e, t, n) {
          e.applyMatrix(new h().getInverse(n.matrixWorld)),
            t.remove(e),
            n.add(e);
        },
      },
      gc = 0,
      yc = 1;
    (Pr.create = function (e, t) {
      return (
        console.log("THREE.Curve.create() has been deprecated"),
        (e.prototype = Object.create(Pr.prototype)),
        (e.prototype.constructor = e),
        (e.prototype.getPoint = t),
        e
      );
    }),
      (io.prototype = Object.create(Di.prototype)),
      (oo.prototype = Object.create(Di.prototype)),
      (ao.prototype = Object.create(Di.prototype)),
      Object.assign(ao.prototype, {
        initFromArray: function (e) {
          console.error("THREE.Spline: .initFromArray() has been removed.");
        },
        getControlPointsArray: function (e) {
          console.error(
            "THREE.Spline: .getControlPointsArray() has been removed."
          );
        },
        reparametrizeByArcLength: function (e) {
          console.error(
            "THREE.Spline: .reparametrizeByArcLength() has been removed."
          );
        },
      }),
      (Ei.prototype.setColors = function () {
        console.error(
          "THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead."
        );
      }),
      (yi.prototype.update = function () {
        console.error(
          "THREE.SkeletonHelper: update() no longer needs to be called."
        );
      }),
      Object.assign(Z.prototype, {
        center: function (e) {
          return (
            console.warn(
              "THREE.Box2: .center() has been renamed to .getCenter()."
            ),
            this.getCenter(e)
          );
        },
        empty: function () {
          return (
            console.warn(
              "THREE.Box2: .empty() has been renamed to .isEmpty()."
            ),
            this.isEmpty()
          );
        },
        isIntersectionBox: function (e) {
          return (
            console.warn(
              "THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."
            ),
            this.intersectsBox(e)
          );
        },
        size: function (e) {
          return (
            console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
            this.getSize(e)
          );
        },
      }),
      Object.assign(re.prototype, {
        center: function (e) {
          return (
            console.warn(
              "THREE.Box3: .center() has been renamed to .getCenter()."
            ),
            this.getCenter(e)
          );
        },
        empty: function () {
          return (
            console.warn(
              "THREE.Box3: .empty() has been renamed to .isEmpty()."
            ),
            this.isEmpty()
          );
        },
        isIntersectionBox: function (e) {
          return (
            console.warn(
              "THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."
            ),
            this.intersectsBox(e)
          );
        },
        isIntersectionSphere: function (e) {
          return (
            console.warn(
              "THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."
            ),
            this.intersectsSphere(e)
          );
        },
        size: function (e) {
          return (
            console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
            this.getSize(e)
          );
        },
      }),
      (Fe.prototype.center = function (e) {
        return (
          console.warn(
            "THREE.Line3: .center() has been renamed to .getCenter()."
          ),
          this.getCenter(e)
        );
      }),
      (Os.random16 = function () {
        return (
          console.warn(
            "THREE.Math.random16() has been deprecated. Use Math.random() instead."
          ),
          Math.random()
        );
      }),
      Object.assign(oe.prototype, {
        flattenToArrayOffset: function (e, t) {
          return (
            console.warn(
              "THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."
            ),
            this.toArray(e, t)
          );
        },
        multiplyVector3: function (e) {
          return (
            console.warn(
              "THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."
            ),
            e.applyMatrix3(this)
          );
        },
        multiplyVector3Array: function (e) {
          console.error(
            "THREE.Matrix3: .multiplyVector3Array() has been removed."
          );
        },
        applyToBuffer: function (e, t, n) {
          return (
            console.warn(
              "THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."
            ),
            this.applyToBufferAttribute(e)
          );
        },
        applyToVector3Array: function (e, t, n) {
          console.error(
            "THREE.Matrix3: .applyToVector3Array() has been removed."
          );
        },
      }),
      Object.assign(h.prototype, {
        extractPosition: function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."
            ),
            this.copyPosition(e)
          );
        },
        flattenToArrayOffset: function (e, t) {
          return (
            console.warn(
              "THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."
            ),
            this.toArray(e, t)
          );
        },
        getPosition: (function () {
          var e;
          return function () {
            return (
              void 0 === e && (e = new l()),
              console.warn(
                "THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."
              ),
              e.setFromMatrixColumn(this, 3)
            );
          };
        })(),
        setRotationFromQuaternion: function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."
            ),
            this.makeRotationFromQuaternion(e)
          );
        },
        multiplyToArray: function () {
          console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
        },
        multiplyVector3: function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."
            ),
            e.applyMatrix4(this)
          );
        },
        multiplyVector4: function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."
            ),
            e.applyMatrix4(this)
          );
        },
        multiplyVector3Array: function (e) {
          console.error(
            "THREE.Matrix4: .multiplyVector3Array() has been removed."
          );
        },
        rotateAxis: function (e) {
          console.warn(
            "THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."
          ),
            e.transformDirection(this);
        },
        crossVector: function (e) {
          return (
            console.warn(
              "THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."
            ),
            e.applyMatrix4(this)
          );
        },
        translate: function () {
          console.error("THREE.Matrix4: .translate() has been removed.");
        },
        rotateX: function () {
          console.error("THREE.Matrix4: .rotateX() has been removed.");
        },
        rotateY: function () {
          console.error("THREE.Matrix4: .rotateY() has been removed.");
        },
        rotateZ: function () {
          console.error("THREE.Matrix4: .rotateZ() has been removed.");
        },
        rotateByAxis: function () {
          console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
        },
        applyToBuffer: function (e, t, n) {
          return (
            console.warn(
              "THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."
            ),
            this.applyToBufferAttribute(e)
          );
        },
        applyToVector3Array: function (e, t, n) {
          console.error(
            "THREE.Matrix4: .applyToVector3Array() has been removed."
          );
        },
        makeFrustum: function (e, t, n, r, i, o) {
          return (
            console.warn(
              "THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."
            ),
            this.makePerspective(e, t, r, n, i, o)
          );
        },
      }),
      (ae.prototype.isIntersectionLine = function (e) {
        return (
          console.warn(
            "THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."
          ),
          this.intersectsLine(e)
        );
      }),
      (u.prototype.multiplyVector3 = function (e) {
        return (
          console.warn(
            "THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."
          ),
          e.applyQuaternion(this)
        );
      }),
      Object.assign(ke.prototype, {
        isIntersectionBox: function (e) {
          return (
            console.warn(
              "THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."
            ),
            this.intersectsBox(e)
          );
        },
        isIntersectionPlane: function (e) {
          return (
            console.warn(
              "THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."
            ),
            this.intersectsPlane(e)
          );
        },
        isIntersectionSphere: function (e) {
          return (
            console.warn(
              "THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."
            ),
            this.intersectsSphere(e)
          );
        },
      }),
      Object.assign(Vr.prototype, {
        extrude: function (e) {
          return (
            console.warn(
              "THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."
            ),
            new hn(this, e)
          );
        },
        makeGeometry: function (e) {
          return (
            console.warn(
              "THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."
            ),
            new xn(this, e)
          );
        },
      }),
      Object.assign(i.prototype, {
        fromAttribute: function (e, t, n) {
          return (
            console.error(
              "THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."
            ),
            this.fromBufferAttribute(e, t, n)
          );
        },
      }),
      Object.assign(l.prototype, {
        setEulerFromRotationMatrix: function () {
          console.error(
            "THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead."
          );
        },
        setEulerFromQuaternion: function () {
          console.error(
            "THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead."
          );
        },
        getPositionFromMatrix: function (e) {
          return (
            console.warn(
              "THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."
            ),
            this.setFromMatrixPosition(e)
          );
        },
        getScaleFromMatrix: function (e) {
          return (
            console.warn(
              "THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."
            ),
            this.setFromMatrixScale(e)
          );
        },
        getColumnFromMatrix: function (e, t) {
          return (
            console.warn(
              "THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."
            ),
            this.setFromMatrixColumn(t, e)
          );
        },
        applyProjection: function (e) {
          return (
            console.warn(
              "THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."
            ),
            this.applyMatrix4(e)
          );
        },
        fromAttribute: function (e, t, n) {
          return (
            console.error(
              "THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."
            ),
            this.fromBufferAttribute(e, t, n)
          );
        },
      }),
      Object.assign(a.prototype, {
        fromAttribute: function (e, t, n) {
          return (
            console.error(
              "THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."
            ),
            this.fromBufferAttribute(e, t, n)
          );
        },
      }),
      (ye.prototype.computeTangents = function () {
        console.warn("THREE.Geometry: .computeTangents() has been removed.");
      }),
      Object.assign(pe.prototype, {
        getChildByName: function (e) {
          return (
            console.warn(
              "THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."
            ),
            this.getObjectByName(e)
          );
        },
        renderDepth: function () {
          console.warn(
            "THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead."
          );
        },
        translate: function (e, t) {
          return (
            console.warn(
              "THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."
            ),
            this.translateOnAxis(t, e)
          );
        },
      }),
      Object.defineProperties(pe.prototype, {
        eulerOrder: {
          get: function () {
            return (
              console.warn(
                "THREE.Object3D: .eulerOrder is now .rotation.order."
              ),
              this.rotation.order
            );
          },
          set: function (e) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
              (this.rotation.order = e);
          },
        },
        useQuaternion: {
          get: function () {
            console.warn(
              "THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default."
            );
          },
          set: function () {
            console.warn(
              "THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default."
            );
          },
        },
      }),
      Object.defineProperties(Pt.prototype, {
        objects: {
          get: function () {
            return (
              console.warn("THREE.LOD: .objects has been renamed to .levels."),
              this.levels
            );
          },
        },
      }),
      Object.defineProperty(Ot.prototype, "useVertexTexture", {
        get: function () {
          console.warn("THREE.Skeleton: useVertexTexture has been removed.");
        },
        set: function () {
          console.warn("THREE.Skeleton: useVertexTexture has been removed.");
        },
      }),
      Object.defineProperty(Pr.prototype, "__arcLengthDivisions", {
        get: function () {
          return (
            console.warn(
              "THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."
            ),
            this.arcLengthDivisions
          );
        },
        set: function (e) {
          console.warn(
            "THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."
          ),
            (this.arcLengthDivisions = e);
        },
      }),
      (me.prototype.setLens = function (e, t) {
        console.warn(
          "THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."
        ),
          void 0 !== t && (this.filmGauge = t),
          this.setFocalLength(e);
      }),
      Object.defineProperties(qn.prototype, {
        onlyShadow: {
          set: function () {
            console.warn("THREE.Light: .onlyShadow has been removed.");
          },
        },
        shadowCameraFov: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowCameraFov is now .shadow.camera.fov."
            ),
              (this.shadow.camera.fov = e);
          },
        },
        shadowCameraLeft: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowCameraLeft is now .shadow.camera.left."
            ),
              (this.shadow.camera.left = e);
          },
        },
        shadowCameraRight: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowCameraRight is now .shadow.camera.right."
            ),
              (this.shadow.camera.right = e);
          },
        },
        shadowCameraTop: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowCameraTop is now .shadow.camera.top."
            ),
              (this.shadow.camera.top = e);
          },
        },
        shadowCameraBottom: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."
            ),
              (this.shadow.camera.bottom = e);
          },
        },
        shadowCameraNear: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowCameraNear is now .shadow.camera.near."
            ),
              (this.shadow.camera.near = e);
          },
        },
        shadowCameraFar: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowCameraFar is now .shadow.camera.far."
            ),
              (this.shadow.camera.far = e);
          },
        },
        shadowCameraVisible: {
          set: function () {
            console.warn(
              "THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead."
            );
          },
        },
        shadowBias: {
          set: function (e) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
              (this.shadow.bias = e);
          },
        },
        shadowDarkness: {
          set: function () {
            console.warn("THREE.Light: .shadowDarkness has been removed.");
          },
        },
        shadowMapWidth: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."
            ),
              (this.shadow.mapSize.width = e);
          },
        },
        shadowMapHeight: {
          set: function (e) {
            console.warn(
              "THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."
            ),
              (this.shadow.mapSize.height = e);
          },
        },
      }),
      Object.defineProperties(_e.prototype, {
        length: {
          get: function () {
            return (
              console.warn(
                "THREE.BufferAttribute: .length has been deprecated. Use .count instead."
              ),
              this.array.length
            );
          },
        },
      }),
      Object.assign(Pe.prototype, {
        addIndex: function (e) {
          console.warn(
            "THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."
          ),
            this.setIndex(e);
        },
        addDrawCall: function (e, t, n) {
          void 0 !== n &&
            console.warn(
              "THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."
            ),
            console.warn(
              "THREE.BufferGeometry: .addDrawCall() is now .addGroup()."
            ),
            this.addGroup(e, t);
        },
        clearDrawCalls: function () {
          console.warn(
            "THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."
          ),
            this.clearGroups();
        },
        computeTangents: function () {
          console.warn(
            "THREE.BufferGeometry: .computeTangents() has been removed."
          );
        },
        computeOffsets: function () {
          console.warn(
            "THREE.BufferGeometry: .computeOffsets() has been removed."
          );
        },
      }),
      Object.defineProperties(Pe.prototype, {
        drawcalls: {
          get: function () {
            return (
              console.error(
                "THREE.BufferGeometry: .drawcalls has been renamed to .groups."
              ),
              this.groups
            );
          },
        },
        offsets: {
          get: function () {
            return (
              console.warn(
                "THREE.BufferGeometry: .offsets has been renamed to .groups."
              ),
              this.groups
            );
          },
        },
      }),
      Object.defineProperties(ni.prototype, {
        dynamic: {
          set: function () {
            console.warn(
              "THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead."
            );
          },
        },
        onUpdate: {
          value: function () {
            return (
              console.warn(
                "THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."
              ),
              this
            );
          },
        },
      }),
      Object.defineProperties($.prototype, {
        wrapAround: {
          get: function () {
            console.warn("THREE.Material: .wrapAround has been removed.");
          },
          set: function () {
            console.warn("THREE.Material: .wrapAround has been removed.");
          },
        },
        wrapRGB: {
          get: function () {
            return (
              console.warn("THREE.Material: .wrapRGB has been removed."),
              new Y()
            );
          },
        },
        shading: {
          get: function () {
            console.error(
              "THREE." +
                this.type +
                ": .shading has been removed. Use the boolean .flatShading instead."
            );
          },
          set: function (e) {
            console.warn(
              "THREE." +
                this.type +
                ": .shading has been removed. Use the boolean .flatShading instead."
            ),
              (this.flatShading = e === Ao);
          },
        },
      }),
      Object.defineProperties(Ln.prototype, {
        metal: {
          get: function () {
            return (
              console.warn(
                "THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."
              ),
              !1
            );
          },
          set: function () {
            console.warn(
              "THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead"
            );
          },
        },
      }),
      Object.defineProperties(ee.prototype, {
        derivatives: {
          get: function () {
            return (
              console.warn(
                "THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."
              ),
              this.extensions.derivatives
            );
          },
          set: function (e) {
            console.warn(
              "THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."
            ),
              (this.extensions.derivatives = e);
          },
        },
      }),
      Object.assign(Mt.prototype, {
        getCurrentRenderTarget: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."
            ),
            this.getRenderTarget()
          );
        },
        getMaxAnisotropy: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."
            ),
            this.capabilities.getMaxAnisotropy()
          );
        },
        getPrecision: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."
            ),
            this.capabilities.precision
          );
        },
        supportsFloatTextures: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."
            ),
            this.extensions.get("OES_texture_float")
          );
        },
        supportsHalfFloatTextures: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."
            ),
            this.extensions.get("OES_texture_half_float")
          );
        },
        supportsStandardDerivatives: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."
            ),
            this.extensions.get("OES_standard_derivatives")
          );
        },
        supportsCompressedTextureS3TC: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."
            ),
            this.extensions.get("WEBGL_compressed_texture_s3tc")
          );
        },
        supportsCompressedTexturePVRTC: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."
            ),
            this.extensions.get("WEBGL_compressed_texture_pvrtc")
          );
        },
        supportsBlendMinMax: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."
            ),
            this.extensions.get("EXT_blend_minmax")
          );
        },
        supportsVertexTextures: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."
            ),
            this.capabilities.vertexTextures
          );
        },
        supportsInstancedArrays: function () {
          return (
            console.warn(
              "THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."
            ),
            this.extensions.get("ANGLE_instanced_arrays")
          );
        },
        enableScissorTest: function (e) {
          console.warn(
            "THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."
          ),
            this.setScissorTest(e);
        },
        initMaterial: function () {
          console.warn(
            "THREE.WebGLRenderer: .initMaterial() has been removed."
          );
        },
        addPrePlugin: function () {
          console.warn(
            "THREE.WebGLRenderer: .addPrePlugin() has been removed."
          );
        },
        addPostPlugin: function () {
          console.warn(
            "THREE.WebGLRenderer: .addPostPlugin() has been removed."
          );
        },
        updateShadowMap: function () {
          console.warn(
            "THREE.WebGLRenderer: .updateShadowMap() has been removed."
          );
        },
      }),
      Object.defineProperties(Mt.prototype, {
        shadowMapEnabled: {
          get: function () {
            return this.shadowMap.enabled;
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."
            ),
              (this.shadowMap.enabled = e);
          },
        },
        shadowMapType: {
          get: function () {
            return this.shadowMap.type;
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."
            ),
              (this.shadowMap.type = e);
          },
        },
        shadowMapCullFace: {
          get: function () {
            return this.shadowMap.cullFace;
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."
            ),
              (this.shadowMap.cullFace = e);
          },
        },
      }),
      Object.defineProperties(ce.prototype, {
        cullFace: {
          get: function () {
            return this.renderReverseSided ? _o : yo;
          },
          set: function (e) {
            var t = e !== yo;
            console.warn(
              "WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " +
                t +
                "."
            ),
              (this.renderReverseSided = t);
          },
        },
      }),
      Object.defineProperties(s.prototype, {
        wrapS: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."
              ),
              this.texture.wrapS
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."
            ),
              (this.texture.wrapS = e);
          },
        },
        wrapT: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."
              ),
              this.texture.wrapT
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."
            ),
              (this.texture.wrapT = e);
          },
        },
        magFilter: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."
              ),
              this.texture.magFilter
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."
            ),
              (this.texture.magFilter = e);
          },
        },
        minFilter: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."
              ),
              this.texture.minFilter
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."
            ),
              (this.texture.minFilter = e);
          },
        },
        anisotropy: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."
              ),
              this.texture.anisotropy
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."
            ),
              (this.texture.anisotropy = e);
          },
        },
        offset: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .offset is now .texture.offset."
              ),
              this.texture.offset
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .offset is now .texture.offset."
            ),
              (this.texture.offset = e);
          },
        },
        repeat: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .repeat is now .texture.repeat."
              ),
              this.texture.repeat
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .repeat is now .texture.repeat."
            ),
              (this.texture.repeat = e);
          },
        },
        format: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .format is now .texture.format."
              ),
              this.texture.format
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .format is now .texture.format."
            ),
              (this.texture.format = e);
          },
        },
        type: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .type is now .texture.type."
              ),
              this.texture.type
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .type is now .texture.type."
            ),
              (this.texture.type = e);
          },
        },
        generateMipmaps: {
          get: function () {
            return (
              console.warn(
                "THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."
              ),
              this.texture.generateMipmaps
            );
          },
          set: function (e) {
            console.warn(
              "THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."
            ),
              (this.texture.generateMipmaps = e);
          },
        },
      }),
      (Xr.prototype.load = function (e) {
        console.warn(
          "THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead."
        );
        var t = this;
        return (
          new jr().load(e, function (e) {
            t.setBuffer(e);
          }),
          this
        );
      }),
      (Zr.prototype.getData = function () {
        return (
          console.warn(
            "THREE.AudioAnalyser: .getData() is now .getFrequencyData()."
          ),
          this.getFrequencyData()
        );
      }),
      (Wr.prototype.updateCubeMap = function (e, t) {
        return (
          console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
          this.update(e, t)
        );
      });
    var _c = {
        merge: function (e, t, n) {
          console.warn(
            "THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."
          );
          var r;
          t.isMesh &&
            (t.matrixAutoUpdate && t.updateMatrix(),
            (r = t.matrix),
            (t = t.geometry)),
            e.merge(t, r, n);
        },
        center: function (e) {
          return (
            console.warn(
              "THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."
            ),
            e.center()
          );
        },
      },
      bc = {
        crossOrigin: void 0,
        loadTexture: function (e, t, n, r) {
          console.warn(
            "THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead."
          );
          var i = new Wn();
          i.setCrossOrigin(this.crossOrigin);
          var o = i.load(e, n, void 0, r);
          return t && (o.mapping = t), o;
        },
        loadTextureCube: function (e, t, n, r) {
          console.warn(
            "THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead."
          );
          var i = new Gn();
          i.setCrossOrigin(this.crossOrigin);
          var o = i.load(e, n, void 0, r);
          return t && (o.mapping = t), o;
        },
        loadCompressedTexture: function () {
          console.error(
            "THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead."
          );
        },
        loadCompressedTextureCube: function () {
          console.error(
            "THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.."
          );
        },
      };
  },
]);
